# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: services/event/v1/event.proto
# typed: strict

class Trinsic::Services::Event::APICall
  include ::Google::Protobuf
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Trinsic::Services::Event::APICall) }
  def self.decode(str)
  end

  sig { params(msg: Trinsic::Services::Event::APICall).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Trinsic::Services::Event::APICall) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Trinsic::Services::Event::APICall, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      source: T.nilable(String),
      request: T.nilable(String),
      response: T.nilable(String)
    ).void
  end
  def initialize(
    source: "",
    request: "",
    response: ""
  )
  end

  sig { returns(String) }
  def source
  end

  sig { params(value: String).void }
  def source=(value)
  end

  sig { void }
  def clear_source
  end

  sig { returns(String) }
  def request
  end

  sig { params(value: String).void }
  def request=(value)
  end

  sig { void }
  def clear_request
  end

  sig { returns(String) }
  def response
  end

  sig { params(value: String).void }
  def response=(value)
  end

  sig { void }
  def clear_response
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Trinsic::Services::Event::PingV1
  include ::Google::Protobuf
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Trinsic::Services::Event::PingV1) }
  def self.decode(str)
  end

  sig { params(msg: Trinsic::Services::Event::PingV1).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Trinsic::Services::Event::PingV1) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Trinsic::Services::Event::PingV1, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      webhook_id: T.nilable(String),
      timestamp: T.nilable(String),
      message: T.nilable(String),
      ecosystem_id: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    webhook_id: "",
    timestamp: "",
    message: "",
    ecosystem_id: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def webhook_id
  end

  sig { params(value: String).void }
  def webhook_id=(value)
  end

  sig { void }
  def clear_webhook_id
  end

  sig { returns(String) }
  def timestamp
  end

  sig { params(value: String).void }
  def timestamp=(value)
  end

  sig { void }
  def clear_timestamp
  end

  sig { returns(String) }
  def message
  end

  sig { params(value: String).void }
  def message=(value)
  end

  sig { void }
  def clear_message
  end

  sig { returns(String) }
  def ecosystem_id
  end

  sig { params(value: String).void }
  def ecosystem_id=(value)
  end

  sig { void }
  def clear_ecosystem_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Trinsic::Services::Event::GovernanceFrameworkCreatedV1
  include ::Google::Protobuf
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Trinsic::Services::Event::GovernanceFrameworkCreatedV1) }
  def self.decode(str)
  end

  sig { params(msg: Trinsic::Services::Event::GovernanceFrameworkCreatedV1).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Trinsic::Services::Event::GovernanceFrameworkCreatedV1) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Trinsic::Services::Event::GovernanceFrameworkCreatedV1, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      ecosystem_id: T.nilable(String),
      trust_registry: T.nilable(String),
      governing_authority: T.nilable(String),
      type: T.nilable(String),
      name: T.nilable(String),
      description: T.nilable(String),
      governance_framework: T.nilable(String),
      timestamp: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    ecosystem_id: "",
    trust_registry: "",
    governing_authority: "",
    type: "",
    name: "",
    description: "",
    governance_framework: "",
    timestamp: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def ecosystem_id
  end

  sig { params(value: String).void }
  def ecosystem_id=(value)
  end

  sig { void }
  def clear_ecosystem_id
  end

  sig { returns(String) }
  def trust_registry
  end

  sig { params(value: String).void }
  def trust_registry=(value)
  end

  sig { void }
  def clear_trust_registry
  end

  sig { returns(String) }
  def governing_authority
  end

  sig { params(value: String).void }
  def governing_authority=(value)
  end

  sig { void }
  def clear_governing_authority
  end

  sig { returns(String) }
  def type
  end

  sig { params(value: String).void }
  def type=(value)
  end

  sig { void }
  def clear_type
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { returns(String) }
  def governance_framework
  end

  sig { params(value: String).void }
  def governance_framework=(value)
  end

  sig { void }
  def clear_governance_framework
  end

  sig { returns(String) }
  def timestamp
  end

  sig { params(value: String).void }
  def timestamp=(value)
  end

  sig { void }
  def clear_timestamp
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Trinsic::Services::Event::TemplateCreatedV1
  include ::Google::Protobuf
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Trinsic::Services::Event::TemplateCreatedV1) }
  def self.decode(str)
  end

  sig { params(msg: Trinsic::Services::Event::TemplateCreatedV1).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Trinsic::Services::Event::TemplateCreatedV1) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Trinsic::Services::Event::TemplateCreatedV1, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      ecosystem_id: T.nilable(String),
      name: T.nilable(String),
      type: T.nilable(String),
      created_by: T.nilable(String),
      timestamp: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    ecosystem_id: "",
    name: "",
    type: "",
    created_by: "",
    timestamp: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def ecosystem_id
  end

  sig { params(value: String).void }
  def ecosystem_id=(value)
  end

  sig { void }
  def clear_ecosystem_id
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def type
  end

  sig { params(value: String).void }
  def type=(value)
  end

  sig { void }
  def clear_type
  end

  sig { returns(String) }
  def created_by
  end

  sig { params(value: String).void }
  def created_by=(value)
  end

  sig { void }
  def clear_created_by
  end

  sig { returns(String) }
  def timestamp
  end

  sig { params(value: String).void }
  def timestamp=(value)
  end

  sig { void }
  def clear_timestamp
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Trinsic::Services::Event::ItemReceivedV1
  include ::Google::Protobuf
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Trinsic::Services::Event::ItemReceivedV1) }
  def self.decode(str)
  end

  sig { params(msg: Trinsic::Services::Event::ItemReceivedV1).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Trinsic::Services::Event::ItemReceivedV1) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Trinsic::Services::Event::ItemReceivedV1, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      received: T.nilable(String),
      wallet_id: T.nilable(String),
      ecosystem_id: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    received: "",
    wallet_id: "",
    ecosystem_id: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def received
  end

  sig { params(value: String).void }
  def received=(value)
  end

  sig { void }
  def clear_received
  end

  sig { returns(String) }
  def wallet_id
  end

  sig { params(value: String).void }
  def wallet_id=(value)
  end

  sig { void }
  def clear_wallet_id
  end

  sig { returns(String) }
  def ecosystem_id
  end

  sig { params(value: String).void }
  def ecosystem_id=(value)
  end

  sig { void }
  def clear_ecosystem_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

module Trinsic::Services::Event::EventType
  self::PING = T.let(0, Integer)
  self::LOG = T.let(1, Integer)
  self::GOVERNANCE_FRAMEWORK_CREATED = T.let(5, Integer)
  self::GOVERNANCE_FRAMEWORK_MEMBER_REGISTERED = T.let(6, Integer)
  self::GOVERNANCE_FRAMEWORK_MEMBER_UNREGISTERED = T.let(7, Integer)
  self::TEMPLATE_CREATED = T.let(10, Integer)
  self::TEMPLATE_DELETED = T.let(11, Integer)
  self::WALLET_CREATED = T.let(15, Integer)
  self::ITEM_RECEIVED = T.let(16, Integer)
  self::CREDENTIAL_ISSUED = T.let(17, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end
