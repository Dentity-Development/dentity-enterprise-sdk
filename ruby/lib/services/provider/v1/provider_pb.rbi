# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: services/provider/v1/provider.proto
# typed: strict

class Services::Provider::V1::InviteRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::InviteRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::InviteRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::InviteRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::InviteRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      participant: T.nilable(T.any(Symbol, String, Integer)),
      description: T.nilable(String),
      details: T.nilable(Services::Account::V1::AccountDetails)
    ).void
  end
  def initialize(
    participant: :participant_type_individual,
    description: "",
    details: nil
  )
  end

  sig { returns(Symbol) }
  def participant
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def participant=(value)
  end

  sig { void }
  def clear_participant
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { returns(T.nilable(Services::Account::V1::AccountDetails)) }
  def details
  end

  sig { params(value: T.nilable(Services::Account::V1::AccountDetails)).void }
  def details=(value)
  end

  sig { void }
  def clear_details
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::InviteResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::InviteResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::InviteResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::InviteResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::InviteResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      invitation_id: T.nilable(String),
      invitation_code: T.nilable(String)
    ).void
  end
  def initialize(
    invitation_id: "",
    invitation_code: ""
  )
  end

  sig { returns(String) }
  def invitation_id
  end

  sig { params(value: String).void }
  def invitation_id=(value)
  end

  sig { void }
  def clear_invitation_id
  end

  sig { returns(String) }
  def invitation_code
  end

  sig { params(value: String).void }
  def invitation_code=(value)
  end

  sig { void }
  def clear_invitation_code
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::InvitationStatusRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::InvitationStatusRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::InvitationStatusRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::InvitationStatusRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::InvitationStatusRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      invitation_id: T.nilable(String)
    ).void
  end
  def initialize(
    invitation_id: ""
  )
  end

  sig { returns(String) }
  def invitation_id
  end

  sig { params(value: String).void }
  def invitation_id=(value)
  end

  sig { void }
  def clear_invitation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::InvitationStatusResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::InvitationStatusResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::InvitationStatusResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::InvitationStatusResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::InvitationStatusResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      status: T.nilable(T.any(Symbol, String, Integer)),
      status_details: T.nilable(String)
    ).void
  end
  def initialize(
    status: :Error,
    status_details: ""
  )
  end

  sig { returns(Symbol) }
  def status
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def status=(value)
  end

  sig { void }
  def clear_status
  end

  sig { returns(String) }
  def status_details
  end

  sig { params(value: String).void }
  def status_details=(value)
  end

  sig { void }
  def clear_status_details
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::Ecosystem
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::Ecosystem) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::Ecosystem).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::Ecosystem) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::Ecosystem, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      name: T.nilable(String),
      description: T.nilable(String),
      uri: T.nilable(String),
      webhooks: T.nilable(T::Array[T.nilable(Services::Provider::V1::WebhookConfig)]),
      display: T.nilable(Services::Provider::V1::EcosystemDisplay),
      domain: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    name: "",
    description: "",
    uri: "",
    webhooks: [],
    display: nil,
    domain: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { returns(String) }
  def uri
  end

  sig { params(value: String).void }
  def uri=(value)
  end

  sig { void }
  def clear_uri
  end

  sig { returns(T::Array[T.nilable(Services::Provider::V1::WebhookConfig)]) }
  def webhooks
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def webhooks=(value)
  end

  sig { void }
  def clear_webhooks
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplay)) }
  def display
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplay)).void }
  def display=(value)
  end

  sig { void }
  def clear_display
  end

  sig { returns(String) }
  def domain
  end

  sig { params(value: String).void }
  def domain=(value)
  end

  sig { void }
  def clear_domain
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::WebhookConfig
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::WebhookConfig) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::WebhookConfig).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::WebhookConfig) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::WebhookConfig, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      destination_url: T.nilable(String),
      events: T.nilable(T::Array[String]),
      status: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    destination_url: "",
    events: [],
    status: ""
  )
  end

  sig { returns(String) }
  def id
  end

  sig { params(value: String).void }
  def id=(value)
  end

  sig { void }
  def clear_id
  end

  sig { returns(String) }
  def destination_url
  end

  sig { params(value: String).void }
  def destination_url=(value)
  end

  sig { void }
  def clear_destination_url
  end

  sig { returns(T::Array[String]) }
  def events
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def events=(value)
  end

  sig { void }
  def clear_events
  end

  sig { returns(String) }
  def status
  end

  sig { params(value: String).void }
  def status=(value)
  end

  sig { void }
  def clear_status
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::Grant
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::Grant) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::Grant).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::Grant) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::Grant, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      resourceId: T.nilable(String),
      actions: T.nilable(T::Array[String]),
      child_grants: T.nilable(T::Array[T.nilable(Services::Provider::V1::Grant)])
    ).void
  end
  def initialize(
    resourceId: "",
    actions: [],
    child_grants: []
  )
  end

  sig { returns(String) }
  def resourceId
  end

  sig { params(value: String).void }
  def resourceId=(value)
  end

  sig { void }
  def clear_resourceId
  end

  sig { returns(T::Array[String]) }
  def actions
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def actions=(value)
  end

  sig { void }
  def clear_actions
  end

  sig { returns(T::Array[T.nilable(Services::Provider::V1::Grant)]) }
  def child_grants
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def child_grants=(value)
  end

  sig { void }
  def clear_child_grants
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::CreateEcosystemRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::CreateEcosystemRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::CreateEcosystemRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::CreateEcosystemRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::CreateEcosystemRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      name: T.nilable(String),
      description: T.nilable(String),
      uri: T.nilable(String),
      details: T.nilable(Services::Account::V1::AccountDetails),
      domain: T.nilable(String)
    ).void
  end
  def initialize(
    name: "",
    description: "",
    uri: "",
    details: nil,
    domain: ""
  )
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { returns(String) }
  def uri
  end

  sig { params(value: String).void }
  def uri=(value)
  end

  sig { void }
  def clear_uri
  end

  sig { returns(T.nilable(Services::Account::V1::AccountDetails)) }
  def details
  end

  sig { params(value: T.nilable(Services::Account::V1::AccountDetails)).void }
  def details=(value)
  end

  sig { void }
  def clear_details
  end

  sig { returns(String) }
  def domain
  end

  sig { params(value: String).void }
  def domain=(value)
  end

  sig { void }
  def clear_domain
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::CreateEcosystemResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::CreateEcosystemResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::CreateEcosystemResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::CreateEcosystemResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::CreateEcosystemResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem: T.nilable(Services::Provider::V1::Ecosystem),
      profile: T.nilable(Services::Account::V1::AccountProfile),
      confirmation_method: T.nilable(T.any(Symbol, String, Integer))
    ).void
  end
  def initialize(
    ecosystem: nil,
    profile: nil,
    confirmation_method: :None
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::Ecosystem)) }
  def ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::Ecosystem)).void }
  def ecosystem=(value)
  end

  sig { void }
  def clear_ecosystem
  end

  sig { returns(T.nilable(Services::Account::V1::AccountProfile)) }
  def profile
  end

  sig { params(value: T.nilable(Services::Account::V1::AccountProfile)).void }
  def profile=(value)
  end

  sig { void }
  def clear_profile
  end

  sig { returns(Symbol) }
  def confirmation_method
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def confirmation_method=(value)
  end

  sig { void }
  def clear_confirmation_method
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::UpdateEcosystemRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::UpdateEcosystemRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::UpdateEcosystemRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::UpdateEcosystemRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::UpdateEcosystemRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      description: T.nilable(String),
      uri: T.nilable(String),
      domain: T.nilable(String),
      display: T.nilable(Services::Provider::V1::EcosystemDisplayRequest)
    ).void
  end
  def initialize(
    description: "",
    uri: "",
    domain: "",
    display: nil
  )
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { returns(String) }
  def uri
  end

  sig { params(value: String).void }
  def uri=(value)
  end

  sig { void }
  def clear_uri
  end

  sig { returns(String) }
  def domain
  end

  sig { params(value: String).void }
  def domain=(value)
  end

  sig { void }
  def clear_domain
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplayRequest)) }
  def display
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplayRequest)).void }
  def display=(value)
  end

  sig { void }
  def clear_display
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemDisplayRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemDisplayRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemDisplayRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      dark: T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest),
      light: T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest)
    ).void
  end
  def initialize(
    dark: nil,
    light: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest)) }
  def dark
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest)).void }
  def dark=(value)
  end

  sig { void }
  def clear_dark
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest)) }
  def light
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplayDetailsRequest)).void }
  def light=(value)
  end

  sig { void }
  def clear_light
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemDisplayDetailsRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemDisplayDetailsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayDetailsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemDisplayDetailsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayDetailsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      color: T.nilable(String),
      logo_data: T.nilable(String),
      logo_format: T.nilable(String)
    ).void
  end
  def initialize(
    color: "",
    logo_data: "",
    logo_format: ""
  )
  end

  sig { returns(String) }
  def color
  end

  sig { params(value: String).void }
  def color=(value)
  end

  sig { void }
  def clear_color
  end

  sig { returns(String) }
  def logo_data
  end

  sig { params(value: String).void }
  def logo_data=(value)
  end

  sig { void }
  def clear_logo_data
  end

  sig { returns(String) }
  def logo_format
  end

  sig { params(value: String).void }
  def logo_format=(value)
  end

  sig { void }
  def clear_logo_format
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::UpdateEcosystemResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::UpdateEcosystemResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::UpdateEcosystemResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::UpdateEcosystemResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::UpdateEcosystemResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  sig { params(args: T::Hash[T.untyped, T.untyped]).void }
  def initialize(args); end

  sig { returns(T.nilable(Services::Provider::V1::Ecosystem)) }
  def Ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::Ecosystem)).void }
  def Ecosystem=(value)
  end

  sig { void }
  def clear_Ecosystem
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemDisplay
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemDisplay) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplay).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemDisplay) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplay, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      dark: T.nilable(Services::Provider::V1::EcosystemDisplayDetails),
      light: T.nilable(Services::Provider::V1::EcosystemDisplayDetails)
    ).void
  end
  def initialize(
    dark: nil,
    light: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplayDetails)) }
  def dark
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplayDetails)).void }
  def dark=(value)
  end

  sig { void }
  def clear_dark
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplayDetails)) }
  def light
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplayDetails)).void }
  def light=(value)
  end

  sig { void }
  def clear_light
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemDisplayDetails
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemDisplayDetails) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayDetails).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemDisplayDetails) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemDisplayDetails, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      logo_url: T.nilable(String),
      color: T.nilable(String)
    ).void
  end
  def initialize(
    logo_url: "",
    color: ""
  )
  end

  sig { returns(String) }
  def logo_url
  end

  sig { params(value: String).void }
  def logo_url=(value)
  end

  sig { void }
  def clear_logo_url
  end

  sig { returns(String) }
  def color
  end

  sig { params(value: String).void }
  def color=(value)
  end

  sig { void }
  def clear_color
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::AddWebhookRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::AddWebhookRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::AddWebhookRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::AddWebhookRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::AddWebhookRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      destination_url: T.nilable(String),
      secret: T.nilable(String),
      events: T.nilable(T::Array[String])
    ).void
  end
  def initialize(
    destination_url: "",
    secret: "",
    events: []
  )
  end

  sig { returns(String) }
  def destination_url
  end

  sig { params(value: String).void }
  def destination_url=(value)
  end

  sig { void }
  def clear_destination_url
  end

  sig { returns(String) }
  def secret
  end

  sig { params(value: String).void }
  def secret=(value)
  end

  sig { void }
  def clear_secret
  end

  sig { returns(T::Array[String]) }
  def events
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def events=(value)
  end

  sig { void }
  def clear_events
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::AddWebhookResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::AddWebhookResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::AddWebhookResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::AddWebhookResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::AddWebhookResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem: T.nilable(Services::Provider::V1::Ecosystem)
    ).void
  end
  def initialize(
    ecosystem: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::Ecosystem)) }
  def ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::Ecosystem)).void }
  def ecosystem=(value)
  end

  sig { void }
  def clear_ecosystem
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::DeleteWebhookRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::DeleteWebhookRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::DeleteWebhookRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::DeleteWebhookRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::DeleteWebhookRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      webhook_id: T.nilable(String)
    ).void
  end
  def initialize(
    webhook_id: ""
  )
  end

  sig { returns(String) }
  def webhook_id
  end

  sig { params(value: String).void }
  def webhook_id=(value)
  end

  sig { void }
  def clear_webhook_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::DeleteWebhookResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::DeleteWebhookResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::DeleteWebhookResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::DeleteWebhookResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::DeleteWebhookResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem: T.nilable(Services::Provider::V1::Ecosystem)
    ).void
  end
  def initialize(
    ecosystem: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::Ecosystem)) }
  def ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::Ecosystem)).void }
  def ecosystem=(value)
  end

  sig { void }
  def clear_ecosystem
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemInfoRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemInfoRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemInfoRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemInfoRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemInfoRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::EcosystemInfoResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::EcosystemInfoResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::EcosystemInfoResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::EcosystemInfoResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::EcosystemInfoResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem: T.nilable(Services::Provider::V1::Ecosystem)
    ).void
  end
  def initialize(
    ecosystem: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::Ecosystem)) }
  def ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::Ecosystem)).void }
  def ecosystem=(value)
  end

  sig { void }
  def clear_ecosystem
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetPublicEcosystemInfoRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetPublicEcosystemInfoRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetPublicEcosystemInfoRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetPublicEcosystemInfoRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetPublicEcosystemInfoRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem_id: T.nilable(String)
    ).void
  end
  def initialize(
    ecosystem_id: ""
  )
  end

  sig { returns(String) }
  def ecosystem_id
  end

  sig { params(value: String).void }
  def ecosystem_id=(value)
  end

  sig { void }
  def clear_ecosystem_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetPublicEcosystemInfoResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetPublicEcosystemInfoResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetPublicEcosystemInfoResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetPublicEcosystemInfoResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetPublicEcosystemInfoResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      ecosystem: T.nilable(Services::Provider::V1::PublicEcosystemInformation)
    ).void
  end
  def initialize(
    ecosystem: nil
  )
  end

  sig { returns(T.nilable(Services::Provider::V1::PublicEcosystemInformation)) }
  def ecosystem
  end

  sig { params(value: T.nilable(Services::Provider::V1::PublicEcosystemInformation)).void }
  def ecosystem=(value)
  end

  sig { void }
  def clear_ecosystem
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::PublicEcosystemInformation
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::PublicEcosystemInformation) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::PublicEcosystemInformation).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::PublicEcosystemInformation) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::PublicEcosystemInformation, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      name: T.nilable(String),
      domain: T.nilable(String),
      domain_verified: T.nilable(T::Boolean),
      style_display: T.nilable(Services::Provider::V1::EcosystemDisplay),
      description: T.nilable(String)
    ).void
  end
  def initialize(
    name: "",
    domain: "",
    domain_verified: false,
    style_display: nil,
    description: ""
  )
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def domain
  end

  sig { params(value: String).void }
  def domain=(value)
  end

  sig { void }
  def clear_domain
  end

  sig { returns(T::Boolean) }
  def domain_verified
  end

  sig { params(value: T::Boolean).void }
  def domain_verified=(value)
  end

  sig { void }
  def clear_domain_verified
  end

  sig { returns(T.nilable(Services::Provider::V1::EcosystemDisplay)) }
  def style_display
  end

  sig { params(value: T.nilable(Services::Provider::V1::EcosystemDisplay)).void }
  def style_display=(value)
  end

  sig { void }
  def clear_style_display
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GenerateTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GenerateTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GenerateTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GenerateTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GenerateTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      description: T.nilable(String)
    ).void
  end
  def initialize(
    description: ""
  )
  end

  sig { returns(String) }
  def description
  end

  sig { params(value: String).void }
  def description=(value)
  end

  sig { void }
  def clear_description
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GenerateTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GenerateTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GenerateTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GenerateTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GenerateTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      profile: T.nilable(Services::Account::V1::AccountProfile)
    ).void
  end
  def initialize(
    profile: nil
  )
  end

  sig { returns(T.nilable(Services::Account::V1::AccountProfile)) }
  def profile
  end

  sig { params(value: T.nilable(Services::Account::V1::AccountProfile)).void }
  def profile=(value)
  end

  sig { void }
  def clear_profile
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetOberonKeyRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetOberonKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetOberonKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetOberonKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetOberonKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetOberonKeyResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetOberonKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetOberonKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetOberonKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetOberonKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      key: T.nilable(String)
    ).void
  end
  def initialize(
    key: ""
  )
  end

  sig { returns(String) }
  def key
  end

  sig { params(value: String).void }
  def key=(value)
  end

  sig { void }
  def clear_key
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetEventTokenRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetEventTokenRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetEventTokenRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetEventTokenRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetEventTokenRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      pk: T.nilable(String)
    ).void
  end
  def initialize(
    pk: ""
  )
  end

  sig { returns(String) }
  def pk
  end

  sig { params(value: String).void }
  def pk=(value)
  end

  sig { void }
  def clear_pk
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetEventTokenResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetEventTokenResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetEventTokenResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetEventTokenResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetEventTokenResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      token: T.nilable(String)
    ).void
  end
  def initialize(
    token: ""
  )
  end

  sig { returns(String) }
  def token
  end

  sig { params(value: String).void }
  def token=(value)
  end

  sig { void }
  def clear_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RetrieveDomainVerificationRecordRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RetrieveDomainVerificationRecordRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RetrieveDomainVerificationRecordRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RetrieveDomainVerificationRecordRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RetrieveDomainVerificationRecordRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RetrieveDomainVerificationRecordResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RetrieveDomainVerificationRecordResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RetrieveDomainVerificationRecordResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RetrieveDomainVerificationRecordResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RetrieveDomainVerificationRecordResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      verification_record_name: T.nilable(String),
      verification_record_Value: T.nilable(String)
    ).void
  end
  def initialize(
    verification_record_name: "",
    verification_record_Value: ""
  )
  end

  sig { returns(String) }
  def verification_record_name
  end

  sig { params(value: String).void }
  def verification_record_name=(value)
  end

  sig { void }
  def clear_verification_record_name
  end

  sig { returns(String) }
  def verification_record_Value
  end

  sig { params(value: String).void }
  def verification_record_Value=(value)
  end

  sig { void }
  def clear_verification_record_Value
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RefreshDomainVerificationStatusRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RefreshDomainVerificationStatusRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RefreshDomainVerificationStatusRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RefreshDomainVerificationStatusRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RefreshDomainVerificationStatusRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RefreshDomainVerificationStatusResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RefreshDomainVerificationStatusResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RefreshDomainVerificationStatusResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RefreshDomainVerificationStatusResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RefreshDomainVerificationStatusResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      domain: T.nilable(String),
      domain_verified: T.nilable(T::Boolean)
    ).void
  end
  def initialize(
    domain: "",
    domain_verified: false
  )
  end

  sig { returns(String) }
  def domain
  end

  sig { params(value: String).void }
  def domain=(value)
  end

  sig { void }
  def clear_domain
  end

  sig { returns(T::Boolean) }
  def domain_verified
  end

  sig { params(value: T::Boolean).void }
  def domain_verified=(value)
  end

  sig { void }
  def clear_domain_verified
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GrantAuthorizationRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GrantAuthorizationRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GrantAuthorizationRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GrantAuthorizationRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GrantAuthorizationRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      email: T.nilable(String),
      walletId: T.nilable(String),
      resource: T.nilable(String),
      action: T.nilable(String)
    ).void
  end
  def initialize(
    email: "",
    walletId: "",
    resource: "",
    action: ""
  )
  end

  sig { returns(String) }
  def email
  end

  sig { params(value: String).void }
  def email=(value)
  end

  sig { void }
  def clear_email
  end

  sig { returns(String) }
  def walletId
  end

  sig { params(value: String).void }
  def walletId=(value)
  end

  sig { void }
  def clear_walletId
  end

  sig { returns(String) }
  def resource
  end

  sig { params(value: String).void }
  def resource=(value)
  end

  sig { void }
  def clear_resource
  end

  sig { returns(String) }
  def action
  end

  sig { params(value: String).void }
  def action=(value)
  end

  sig { void }
  def clear_action
  end

  sig { returns(T.nilable(Symbol)) }
  def account
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GrantAuthorizationResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GrantAuthorizationResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GrantAuthorizationResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GrantAuthorizationResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GrantAuthorizationResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RevokeAuthorizationRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RevokeAuthorizationRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RevokeAuthorizationRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RevokeAuthorizationRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RevokeAuthorizationRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      email: T.nilable(String),
      walletId: T.nilable(String),
      resource: T.nilable(String),
      action: T.nilable(String)
    ).void
  end
  def initialize(
    email: "",
    walletId: "",
    resource: "",
    action: ""
  )
  end

  sig { returns(String) }
  def email
  end

  sig { params(value: String).void }
  def email=(value)
  end

  sig { void }
  def clear_email
  end

  sig { returns(String) }
  def walletId
  end

  sig { params(value: String).void }
  def walletId=(value)
  end

  sig { void }
  def clear_walletId
  end

  sig { returns(String) }
  def resource
  end

  sig { params(value: String).void }
  def resource=(value)
  end

  sig { void }
  def clear_resource
  end

  sig { returns(String) }
  def action
  end

  sig { params(value: String).void }
  def action=(value)
  end

  sig { void }
  def clear_action
  end

  sig { returns(T.nilable(Symbol)) }
  def account
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::RevokeAuthorizationResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::RevokeAuthorizationResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::RevokeAuthorizationResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::RevokeAuthorizationResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::RevokeAuthorizationResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetAuthorizationsRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetAuthorizationsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetAuthorizationsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetAuthorizationsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetAuthorizationsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::GetAuthorizationsResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::GetAuthorizationsResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::GetAuthorizationsResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::GetAuthorizationsResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::GetAuthorizationsResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      grants: T.nilable(T::Array[T.nilable(Services::Provider::V1::Grant)])
    ).void
  end
  def initialize(
    grants: []
  )
  end

  sig { returns(T::Array[T.nilable(Services::Provider::V1::Grant)]) }
  def grants
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def grants=(value)
  end

  sig { void }
  def clear_grants
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::SearchWalletConfigurationsRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::SearchWalletConfigurationsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::SearchWalletConfigurationsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::SearchWalletConfigurationsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::SearchWalletConfigurationsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      query_filter: T.nilable(String),
      continuation_token: T.nilable(String)
    ).void
  end
  def initialize(
    query_filter: "",
    continuation_token: ""
  )
  end

  sig { returns(String) }
  def query_filter
  end

  sig { params(value: String).void }
  def query_filter=(value)
  end

  sig { void }
  def clear_query_filter
  end

  sig { returns(String) }
  def continuation_token
  end

  sig { params(value: String).void }
  def continuation_token=(value)
  end

  sig { void }
  def clear_continuation_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::SearchWalletConfigurationResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::SearchWalletConfigurationResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::SearchWalletConfigurationResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::SearchWalletConfigurationResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::SearchWalletConfigurationResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      results: T.nilable(T::Array[T.nilable(Services::Provider::V1::WalletConfiguration)]),
      has_more: T.nilable(T::Boolean),
      continuation_token: T.nilable(String)
    ).void
  end
  def initialize(
    results: [],
    has_more: false,
    continuation_token: ""
  )
  end

  sig { returns(T::Array[T.nilable(Services::Provider::V1::WalletConfiguration)]) }
  def results
  end

  sig { params(value: Google::Protobuf::RepeatedField).void }
  def results=(value)
  end

  sig { void }
  def clear_results
  end

  sig { returns(T::Boolean) }
  def has_more
  end

  sig { params(value: T::Boolean).void }
  def has_more=(value)
  end

  sig { void }
  def clear_has_more
  end

  sig { returns(String) }
  def continuation_token
  end

  sig { params(value: String).void }
  def continuation_token=(value)
  end

  sig { void }
  def clear_continuation_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::WalletConfiguration
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::WalletConfiguration) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::WalletConfiguration).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::WalletConfiguration) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::WalletConfiguration, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      name: T.nilable(String),
      email: T.nilable(String),
      sms: T.nilable(String),
      wallet_id: T.nilable(String),
      public_did: T.nilable(String)
    ).void
  end
  def initialize(
    name: "",
    email: "",
    sms: "",
    wallet_id: "",
    public_did: ""
  )
  end

  sig { returns(String) }
  def name
  end

  sig { params(value: String).void }
  def name=(value)
  end

  sig { void }
  def clear_name
  end

  sig { returns(String) }
  def email
  end

  sig { params(value: String).void }
  def email=(value)
  end

  sig { void }
  def clear_email
  end

  sig { returns(String) }
  def sms
  end

  sig { params(value: String).void }
  def sms=(value)
  end

  sig { void }
  def clear_sms
  end

  sig { returns(String) }
  def wallet_id
  end

  sig { params(value: String).void }
  def wallet_id=(value)
  end

  sig { void }
  def clear_wallet_id
  end

  sig { returns(String) }
  def public_did
  end

  sig { params(value: String).void }
  def public_did=(value)
  end

  sig { void }
  def clear_public_did
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::IonOptions
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::IonOptions) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::IonOptions).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::IonOptions) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::IonOptions, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      network: T.nilable(T.any(Symbol, String, Integer))
    ).void
  end
  def initialize(
    network: :TestNet
  )
  end

  sig { returns(Symbol) }
  def network
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def network=(value)
  end

  sig { void }
  def clear_network
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::UpgradeDidRequest
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::UpgradeDidRequest) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::UpgradeDidRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::UpgradeDidRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::UpgradeDidRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      email: T.nilable(String),
      wallet_id: T.nilable(String),
      method: T.nilable(T.any(Symbol, String, Integer)),
      ion_options: T.nilable(Services::Provider::V1::IonOptions)
    ).void
  end
  def initialize(
    email: "",
    wallet_id: "",
    method: :KEY,
    ion_options: nil
  )
  end

  sig { returns(String) }
  def email
  end

  sig { params(value: String).void }
  def email=(value)
  end

  sig { void }
  def clear_email
  end

  sig { returns(String) }
  def wallet_id
  end

  sig { params(value: String).void }
  def wallet_id=(value)
  end

  sig { void }
  def clear_wallet_id
  end

  sig { returns(Symbol) }
  def method
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def method=(value)
  end

  sig { void }
  def clear_method
  end

  sig { returns(T.nilable(Services::Provider::V1::IonOptions)) }
  def ion_options
  end

  sig { params(value: T.nilable(Services::Provider::V1::IonOptions)).void }
  def ion_options=(value)
  end

  sig { void }
  def clear_ion_options
  end

  sig { returns(T.nilable(Symbol)) }
  def account
  end

  sig { returns(T.nilable(Symbol)) }
  def options
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::UpgradeDidResponse
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::UpgradeDidResponse) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::UpgradeDidResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::UpgradeDidResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::UpgradeDidResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      did: T.nilable(String)
    ).void
  end
  def initialize(
    did: ""
  )
  end

  sig { returns(String) }
  def did
  end

  sig { params(value: String).void }
  def did=(value)
  end

  sig { void }
  def clear_did
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Provider::V1::InviteRequest::DidCommInvitation
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Provider::V1::InviteRequest::DidCommInvitation) }
  def self.decode(str)
  end

  sig { params(msg: Services::Provider::V1::InviteRequest::DidCommInvitation).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Provider::V1::InviteRequest::DidCommInvitation) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Provider::V1::InviteRequest::DidCommInvitation, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

module Services::Provider::V1::ParticipantType
  self::participant_type_individual = T.let(0, Integer)
  self::participant_type_organization = T.let(1, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Services::Provider::V1::InvitationStatusResponse::Status
  self::Error = T.let(0, Integer)
  self::InvitationSent = T.let(1, Integer)
  self::Completed = T.let(2, Integer)
  self::Expired = T.let(3, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Services::Provider::V1::IonOptions::IonNetwork
  self::TestNet = T.let(0, Integer)
  self::MainNet = T.let(1, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end
