# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: services/common/v1/common.proto

module Services
end
module Services::Common
end
module Services::Common::V1
end

class Services::Common::V1::RequestOptions
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Services::Common::V1::RequestOptions

  def self.encode: (Services::Common::V1::RequestOptions) -> String

  def self.decode_json: (String, untyped kw) -> Services::Common::V1::RequestOptions

  def self.encode_json: (Services::Common::V1::RequestOptions, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    response_json_format: T.any(Symbol, String, Integer)?
  ) -> void


  def response_json_format: () -> Symbol

  def response_json_format=: (T.any(Symbol, String, Integer)) -> void

  def clear_response_json_format: () -> void

  def has_response_json_format?: () -> Boolean

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Services::Common::V1::JsonPayload
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Services::Common::V1::JsonPayload

  def self.encode: (Services::Common::V1::JsonPayload) -> String

  def self.decode_json: (String, untyped kw) -> Services::Common::V1::JsonPayload

  def self.encode_json: (Services::Common::V1::JsonPayload, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    json_struct: T.nilable(Google::Protobuf::Struct),
    json_string: String?,
    json_bytes: String?
  ) -> void


  def json_struct: () -> T.nilable(Google::Protobuf::Struct)

  def json_struct=: (T.nilable(Google::Protobuf::Struct)) -> void

  def clear_json_struct: () -> void

  def has_json_struct?: () -> Boolean

  def json_string: () -> String

  def json_string=: (String) -> void

  def clear_json_string: () -> void

  def has_json_string?: () -> Boolean

  def json_bytes: () -> String

  def json_bytes=: (String) -> void

  def clear_json_bytes: () -> void

  def has_json_bytes?: () -> Boolean

  def json: () -> Symbol?

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Services::Common::V1::ServerConfig
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Services::Common::V1::ServerConfig

  def self.encode: (Services::Common::V1::ServerConfig) -> String

  def self.decode_json: (String, untyped kw) -> Services::Common::V1::ServerConfig

  def self.encode_json: (Services::Common::V1::ServerConfig, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    endpoint: String?,
    port: Integer?,
    use_tls: T::Boolean?
  ) -> void


  def endpoint: () -> String

  def endpoint=: (String) -> void

  def clear_endpoint: () -> void

  def has_endpoint?: () -> Boolean

  def port: () -> Integer

  def port=: (Integer) -> void

  def clear_port: () -> void

  def has_port?: () -> Boolean

  def use_tls: () -> T::Boolean

  def use_tls=: (T::Boolean) -> void

  def clear_use_tls: () -> void

  def has_use_tls?: () -> Boolean

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

class Services::Common::V1::Nonce
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  def self.decode: (String) -> Services::Common::V1::Nonce

  def self.encode: (Services::Common::V1::Nonce) -> String

  def self.decode_json: (String, untyped kw) -> Services::Common::V1::Nonce

  def self.encode_json: (Services::Common::V1::Nonce, untyped kw) -> String

  def self.descriptor: () -> Google::Protobuf::Descriptor

  # Constants of the form Constant_1 are invalid. We've declined to type this as a result, taking a hash instead.
  def initialize: (::Hash[untyped, untyped]) -> void

  def initialize: (
    timestamp: Integer?,
    request_hash: String?
  ) -> void


  def timestamp: () -> Integer

  def timestamp=: (Integer) -> void

  def clear_timestamp: () -> void

  def has_timestamp?: () -> Boolean

  def request_hash: () -> String

  def request_hash=: (String) -> void

  def clear_request_hash: () -> void

  def has_request_hash?: () -> Boolean

  def []: (String) -> untyped

  def []=: (String, untyped value) -> void

  def to_h: () -> ::Hash[Symbol, untyped]
end

module Services::Common::V1::ResponseStatus
  # TODO - Not sure how to represent this
  # self::SUCCESS = T.let(0, Integer)
  self::SUCCESS = : (0, Integer)
  # TODO - Not sure how to represent this
  # self::WALLET_ACCESS_DENIED = T.let(10, Integer)
  self::WALLET_ACCESS_DENIED = : (10, Integer)
  # TODO - Not sure how to represent this
  # self::WALLET_EXISTS = T.let(11, Integer)
  self::WALLET_EXISTS = : (11, Integer)
  # TODO - Not sure how to represent this
  # self::ITEM_NOT_FOUND = T.let(20, Integer)
  self::ITEM_NOT_FOUND = : (20, Integer)
  # TODO - Not sure how to represent this
  # self::SERIALIZATION_ERROR = T.let(200, Integer)
  self::SERIALIZATION_ERROR = : (200, Integer)
  # TODO - Not sure how to represent this
  # self::UNKNOWN_ERROR = T.let(100, Integer)
  self::UNKNOWN_ERROR = : (100, Integer)

  def self.lookup: (value: Integer) -> Symbol?

  def self.resolve: (value: Symbol) -> Integer?

  def self.descriptor: () -> ::Google::Protobuf::EnumDescriptor
end

module Services::Common::V1::JsonFormat
  # TODO - Not sure how to represent this
  # self::Protobuf = T.let(0, Integer)
  self::Protobuf = : (0, Integer)
  # TODO - Not sure how to represent this
  # self::Binary = T.let(1, Integer)
  self::Binary = : (1, Integer)
  # TODO - Not sure how to represent this
  # self::String = T.let(2, Integer)
  self::String = : (2, Integer)

  def self.lookup: (value: Integer) -> Symbol?

  def self.resolve: (value: Symbol) -> Integer?

  def self.descriptor: () -> ::Google::Protobuf::EnumDescriptor
end
