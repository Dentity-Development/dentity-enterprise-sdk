# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: services/common/v1/common.proto
# typed: strict

module Services; end
module Services::Common; end
module Services::Common::V1; end

class Services::Common::V1::RequestOptions
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Common::V1::RequestOptions) }
  def self.decode(str)
  end

  sig { params(msg: Services::Common::V1::RequestOptions).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Common::V1::RequestOptions) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Common::V1::RequestOptions, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      response_json_format: T.nilable(T.any(Symbol, String, Integer))
    ).void
  end
  def initialize(
    response_json_format: :Protobuf
  )
  end

  sig { returns(Symbol) }
  def response_json_format
  end

  sig { params(value: T.any(Symbol, String, Integer)).void }
  def response_json_format=(value)
  end

  sig { void }
  def clear_response_json_format
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Common::V1::JsonPayload
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Common::V1::JsonPayload) }
  def self.decode(str)
  end

  sig { params(msg: Services::Common::V1::JsonPayload).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Common::V1::JsonPayload) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Common::V1::JsonPayload, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      json_struct: T.nilable(Google::Protobuf::Struct),
      json_string: T.nilable(String),
      json_bytes: T.nilable(String)
    ).void
  end
  def initialize(
    json_struct: nil,
    json_string: "",
    json_bytes: ""
  )
  end

  sig { returns(T.nilable(Google::Protobuf::Struct)) }
  def json_struct
  end

  sig { params(value: T.nilable(Google::Protobuf::Struct)).void }
  def json_struct=(value)
  end

  sig { void }
  def clear_json_struct
  end

  sig { returns(String) }
  def json_string
  end

  sig { params(value: String).void }
  def json_string=(value)
  end

  sig { void }
  def clear_json_string
  end

  sig { returns(String) }
  def json_bytes
  end

  sig { params(value: String).void }
  def json_bytes=(value)
  end

  sig { void }
  def clear_json_bytes
  end

  sig { returns(T.nilable(Symbol)) }
  def json
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Common::V1::ServerConfig
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Common::V1::ServerConfig) }
  def self.decode(str)
  end

  sig { params(msg: Services::Common::V1::ServerConfig).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Common::V1::ServerConfig) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Common::V1::ServerConfig, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      endpoint: T.nilable(String),
      port: T.nilable(Integer),
      use_tls: T.nilable(T::Boolean)
    ).void
  end
  def initialize(
    endpoint: "",
    port: 0,
    use_tls: false
  )
  end

  sig { returns(String) }
  def endpoint
  end

  sig { params(value: String).void }
  def endpoint=(value)
  end

  sig { void }
  def clear_endpoint
  end

  sig { returns(Integer) }
  def port
  end

  sig { params(value: Integer).void }
  def port=(value)
  end

  sig { void }
  def clear_port
  end

  sig { returns(T::Boolean) }
  def use_tls
  end

  sig { params(value: T::Boolean).void }
  def use_tls=(value)
  end

  sig { void }
  def clear_use_tls
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Services::Common::V1::Nonce
  include Google::Protobuf
  include Google::Protobuf::MessageExts
  extend Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Services::Common::V1::Nonce) }
  def self.decode(str)
  end

  sig { params(msg: Services::Common::V1::Nonce).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Services::Common::V1::Nonce) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Services::Common::V1::Nonce, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      timestamp: T.nilable(Integer),
      request_hash: T.nilable(String)
    ).void
  end
  def initialize(
    timestamp: 0,
    request_hash: ""
  )
  end

  sig { returns(Integer) }
  def timestamp
  end

  sig { params(value: Integer).void }
  def timestamp=(value)
  end

  sig { void }
  def clear_timestamp
  end

  sig { returns(String) }
  def request_hash
  end

  sig { params(value: String).void }
  def request_hash=(value)
  end

  sig { void }
  def clear_request_hash
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

module Services::Common::V1::ResponseStatus
  self::SUCCESS = T.let(0, Integer)
  self::WALLET_ACCESS_DENIED = T.let(10, Integer)
  self::WALLET_EXISTS = T.let(11, Integer)
  self::ITEM_NOT_FOUND = T.let(20, Integer)
  self::SERIALIZATION_ERROR = T.let(200, Integer)
  self::UNKNOWN_ERROR = T.let(100, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Services::Common::V1::JsonFormat
  self::Protobuf = T.let(0, Integer)
  self::Binary = T.let(1, Integer)
  self::String = T.let(2, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end
