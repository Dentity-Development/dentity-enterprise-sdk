syntax = "proto3";
package services.universalwallet.v1;

option csharp_namespace = "Trinsic.Services.UniversalWallet.V1";
option go_package = "github.com/trinsic-id/sdk";
option java_package = "trinsic.services.universalwallet.v1";

import "services/common/v1/common.proto";

// Search

// Search request object
message SearchRequest {
    string query = 1;
    string continuation_token = 2;
}

// Search response object
message SearchResponse {
    repeated string items = 1;
    bool has_more = 2;
    // int32 count = 3;
    string continuation_token = 4;
}

// Get Item

// Get item request object
message GetItemRequest {
    // The item identifier
    string item_id = 1;
}

// Get item response object
message GetItemResponse {
    // The item data represented as stringified JSON
    string item_json = 1;
    // User set item type that described the content of this item
    string item_type = 2;
}

// Update Item

// Update item request object
message UpdateItemRequest {
    // The item identifier
    string item_id = 1;
    // The item type that described the content of this item
    string item_type = 2;
}

// Update item response object
message UpdateItemResponse {
    // Response status
    services.common.v1.ResponseStatus status = 1;
}

// InsertItem

// Insert item request
message InsertItemRequest {
    // the document to insert as stringified json
    string item_json = 1;
    // optional item type ex. "VerifiableCredential"
    string item_type = 2;
}

// Insert item response
message InsertItemResponse {
    services.common.v1.ResponseStatus status = 1;
    // The item identifier of the inserted record
    string item_id = 2;
}

// Delete item request
message DeleteItemRequest {
    // item identifier of the record to delete
    string item_id = 1;
}

// Delete item response
message DeleteItemResponse {
    services.common.v1.ResponseStatus status = 1;
}

service UniversalWallet {
    // Retrieve an item from the wallet with a given item identifier
    rpc GetItem(GetItemRequest) returns (GetItemResponse);
    // Search the wallet using a SQL-like syntax
    rpc Search(SearchRequest) returns (SearchResponse);
    // Insert an item into the wallet
    rpc InsertItem(InsertItemRequest) returns (InsertItemResponse);
    // Insert an item into the wallet
    rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse);
    // Delete an item from the wallet permanently
    rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);
}

