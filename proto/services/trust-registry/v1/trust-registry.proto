syntax = "proto3";
package services.trustregistry.v1;

option csharp_namespace = "Trinsic.Services.TrustRegistry.V1";
option go_package = "services/trustregistry/v1/trustregistry";
option java_package = "trinsic.services.trustregistry.v1";

// Register new ecosystem governance framework
message AddFrameworkRequest {
    string governance_framework_uri = 1;
    string name = 2;
    string description = 3;
}

message AddFrameworkResponse {
    // Unique framework identifier
    string id = 1;
    string governing_authority = 2;
    string trust_registry = 3;
}

message RemoveFrameworkRequest {
    string id = 1;
}

message RemoveFrameworkResponse {}

message SearchRegistryRequest {
    string query = 1; // SELECT c from c where c.type == 'GovernanceFramework'
    string continuation_token = 2;
}

message SearchRegistryResponse {
    string items_json = 1;
    bool has_more = 2;
    string continuation_token = 4;
}

message GovernanceFramework {
    string governance_framework_uri = 1;
    string trust_registry_uri = 2;
    string description = 3;
}

message RegisterMemberRequest {
    oneof member {
        string did_uri = 1;
        string wallet_id = 3;
        string email = 4;
    }

    string schema_uri = 10;
    uint64 valid_from_utc = 11;
    uint64 valid_until_utc = 12;
    // the id of the governance framework
    string framework_id = 30;
}

message RegisterMemberResponse {}

message UnregisterMemberRequest {
    oneof member {
        string did_uri = 1;
        string wallet_id = 3;
        string email = 4;
    }

    string schema_uri = 10;
    string framework_id = 20;
}

message UnregisterMemberResponse {}

message GetMembershipStatusRequest {
    string governance_framework_uri = 1;
    oneof member {
        string did_uri = 2;
        string x509_cert = 3;
    }
    string schema_uri = 4;
}

message GetMembershipStatusResponse {
    RegistrationStatus status = 1;
}

enum RegistrationStatus {
    CURRENT = 0; // - the entity is currently authorized, as of time of the query.
    EXPIRED = 1; // - entity rights have expired.
    TERMINATED = 2; // - entity has voluntarily ceased Issuer role under the specific EGF.
    REVOKED = 3; // - entity authority under specific EGF was terminated by the governing authority.
    NOT_FOUND = 10;
}

message FetchDataRequest {
    string governance_framework_uri = 1;
    string query = 2;
}

message FetchDataResponse {
    string response_json = 1;
    bool has_more_results = 2;
    string continuation_token = 3;
}

service TrustRegistry {
    // Adds a trust registry defintion to the ecosystem
    rpc AddFramework(AddFrameworkRequest) returns (AddFrameworkResponse);

    rpc RemoveFramework(RemoveFrameworkRequest) returns (RemoveFrameworkResponse);

    rpc SearchRegistry(SearchRegistryRequest) returns (SearchRegistryResponse);

    // Registers an authoritative issuer with a credential template
    rpc RegisterMember(RegisterMemberRequest) returns (RegisterMemberResponse);

    // Removes an authoritative issuer with a credential template from the trust registry
    rpc UnregisterMember(UnregisterMemberRequest) returns (UnregisterMemberResponse);

    rpc GetMembershipStatus(GetMembershipStatusRequest) returns (GetMembershipStatusResponse);

    rpc FetchData(FetchDataRequest) returns (stream FetchDataResponse);
}