# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: services/trust-registry/v1/trust-registry.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import services.common.v1.common_pb2
import services.trust_registry.v1.trust_registry_pb2


class TrustRegistryBase(abc.ABC):

    @abc.abstractmethod
    async def AddFramework(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.AddFrameworkRequest, services.trust_registry.v1.trust_registry_pb2.AddFrameworkResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RemoveFramework(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkRequest, services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SearchRegistry(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.SearchRegistryRequest, services.trust_registry.v1.trust_registry_pb2.SearchRegistryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RegisterIssuer(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.RegisterIssuerRequest, services.trust_registry.v1.trust_registry_pb2.RegisterIssuerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RegisterVerifier(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.RegisterVerifierRequest, services.trust_registry.v1.trust_registry_pb2.RegisterVerifierResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UnregisterIssuer(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerRequest, services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UnregisterVerifier(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierRequest, services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CheckIssuerStatus(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusRequest, services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CheckVerifierStatus(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusRequest, services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def FetchData(self, stream: 'grpclib.server.Stream[services.trust_registry.v1.trust_registry_pb2.FetchDataRequest, services.trust_registry.v1.trust_registry_pb2.FetchDataResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/services.trustregistry.v1.TrustRegistry/AddFramework': grpclib.const.Handler(
                self.AddFramework,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.AddFrameworkRequest,
                services.trust_registry.v1.trust_registry_pb2.AddFrameworkResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/RemoveFramework': grpclib.const.Handler(
                self.RemoveFramework,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkRequest,
                services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/SearchRegistry': grpclib.const.Handler(
                self.SearchRegistry,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.SearchRegistryRequest,
                services.trust_registry.v1.trust_registry_pb2.SearchRegistryResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/RegisterIssuer': grpclib.const.Handler(
                self.RegisterIssuer,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.RegisterIssuerRequest,
                services.trust_registry.v1.trust_registry_pb2.RegisterIssuerResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/RegisterVerifier': grpclib.const.Handler(
                self.RegisterVerifier,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.RegisterVerifierRequest,
                services.trust_registry.v1.trust_registry_pb2.RegisterVerifierResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/UnregisterIssuer': grpclib.const.Handler(
                self.UnregisterIssuer,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerRequest,
                services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/UnregisterVerifier': grpclib.const.Handler(
                self.UnregisterVerifier,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierRequest,
                services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/CheckIssuerStatus': grpclib.const.Handler(
                self.CheckIssuerStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusRequest,
                services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/CheckVerifierStatus': grpclib.const.Handler(
                self.CheckVerifierStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusRequest,
                services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusResponse,
            ),
            '/services.trustregistry.v1.TrustRegistry/FetchData': grpclib.const.Handler(
                self.FetchData,
                grpclib.const.Cardinality.UNARY_STREAM,
                services.trust_registry.v1.trust_registry_pb2.FetchDataRequest,
                services.trust_registry.v1.trust_registry_pb2.FetchDataResponse,
            ),
        }


class TrustRegistryStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AddFramework = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/AddFramework',
            services.trust_registry.v1.trust_registry_pb2.AddFrameworkRequest,
            services.trust_registry.v1.trust_registry_pb2.AddFrameworkResponse,
        )
        self.RemoveFramework = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/RemoveFramework',
            services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkRequest,
            services.trust_registry.v1.trust_registry_pb2.RemoveFrameworkResponse,
        )
        self.SearchRegistry = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/SearchRegistry',
            services.trust_registry.v1.trust_registry_pb2.SearchRegistryRequest,
            services.trust_registry.v1.trust_registry_pb2.SearchRegistryResponse,
        )
        self.RegisterIssuer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/RegisterIssuer',
            services.trust_registry.v1.trust_registry_pb2.RegisterIssuerRequest,
            services.trust_registry.v1.trust_registry_pb2.RegisterIssuerResponse,
        )
        self.RegisterVerifier = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/RegisterVerifier',
            services.trust_registry.v1.trust_registry_pb2.RegisterVerifierRequest,
            services.trust_registry.v1.trust_registry_pb2.RegisterVerifierResponse,
        )
        self.UnregisterIssuer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/UnregisterIssuer',
            services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerRequest,
            services.trust_registry.v1.trust_registry_pb2.UnregisterIssuerResponse,
        )
        self.UnregisterVerifier = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/UnregisterVerifier',
            services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierRequest,
            services.trust_registry.v1.trust_registry_pb2.UnregisterVerifierResponse,
        )
        self.CheckIssuerStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/CheckIssuerStatus',
            services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusRequest,
            services.trust_registry.v1.trust_registry_pb2.CheckIssuerStatusResponse,
        )
        self.CheckVerifierStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/CheckVerifierStatus',
            services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusRequest,
            services.trust_registry.v1.trust_registry_pb2.CheckVerifierStatusResponse,
        )
        self.FetchData = grpclib.client.UnaryStreamMethod(
            channel,
            '/services.trustregistry.v1.TrustRegistry/FetchData',
            services.trust_registry.v1.trust_registry_pb2.FetchDataRequest,
            services.trust_registry.v1.trust_registry_pb2.FetchDataResponse,
        )
