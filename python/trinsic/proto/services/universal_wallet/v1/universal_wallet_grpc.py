# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: services/universal-wallet/v1/universal-wallet.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import services.common.v1.common_pb2
import services.universal_wallet.v1.universal_wallet_pb2


class UniversalWalletBase(abc.ABC):

    @abc.abstractmethod
    async def GetItem(self, stream: 'grpclib.server.Stream[services.universal_wallet.v1.universal_wallet_pb2.GetItemRequest, services.universal_wallet.v1.universal_wallet_pb2.GetItemResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Search(self, stream: 'grpclib.server.Stream[services.universal_wallet.v1.universal_wallet_pb2.SearchRequest, services.universal_wallet.v1.universal_wallet_pb2.SearchResponse]') -> None:
        pass

    @abc.abstractmethod
    async def InsertItem(self, stream: 'grpclib.server.Stream[services.universal_wallet.v1.universal_wallet_pb2.InsertItemRequest, services.universal_wallet.v1.universal_wallet_pb2.InsertItemResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateItem(self, stream: 'grpclib.server.Stream[services.universal_wallet.v1.universal_wallet_pb2.UpdateItemRequest, services.universal_wallet.v1.universal_wallet_pb2.UpdateItemResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteItem(self, stream: 'grpclib.server.Stream[services.universal_wallet.v1.universal_wallet_pb2.DeleteItemRequest, services.universal_wallet.v1.universal_wallet_pb2.DeleteItemResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/services.universalwallet.v1.UniversalWallet/GetItem': grpclib.const.Handler(
                self.GetItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.universal_wallet.v1.universal_wallet_pb2.GetItemRequest,
                services.universal_wallet.v1.universal_wallet_pb2.GetItemResponse,
            ),
            '/services.universalwallet.v1.UniversalWallet/Search': grpclib.const.Handler(
                self.Search,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.universal_wallet.v1.universal_wallet_pb2.SearchRequest,
                services.universal_wallet.v1.universal_wallet_pb2.SearchResponse,
            ),
            '/services.universalwallet.v1.UniversalWallet/InsertItem': grpclib.const.Handler(
                self.InsertItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.universal_wallet.v1.universal_wallet_pb2.InsertItemRequest,
                services.universal_wallet.v1.universal_wallet_pb2.InsertItemResponse,
            ),
            '/services.universalwallet.v1.UniversalWallet/UpdateItem': grpclib.const.Handler(
                self.UpdateItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.universal_wallet.v1.universal_wallet_pb2.UpdateItemRequest,
                services.universal_wallet.v1.universal_wallet_pb2.UpdateItemResponse,
            ),
            '/services.universalwallet.v1.UniversalWallet/DeleteItem': grpclib.const.Handler(
                self.DeleteItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.universal_wallet.v1.universal_wallet_pb2.DeleteItemRequest,
                services.universal_wallet.v1.universal_wallet_pb2.DeleteItemResponse,
            ),
        }


class UniversalWalletStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.universalwallet.v1.UniversalWallet/GetItem',
            services.universal_wallet.v1.universal_wallet_pb2.GetItemRequest,
            services.universal_wallet.v1.universal_wallet_pb2.GetItemResponse,
        )
        self.Search = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.universalwallet.v1.UniversalWallet/Search',
            services.universal_wallet.v1.universal_wallet_pb2.SearchRequest,
            services.universal_wallet.v1.universal_wallet_pb2.SearchResponse,
        )
        self.InsertItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.universalwallet.v1.UniversalWallet/InsertItem',
            services.universal_wallet.v1.universal_wallet_pb2.InsertItemRequest,
            services.universal_wallet.v1.universal_wallet_pb2.InsertItemResponse,
        )
        self.UpdateItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.universalwallet.v1.UniversalWallet/UpdateItem',
            services.universal_wallet.v1.universal_wallet_pb2.UpdateItemRequest,
            services.universal_wallet.v1.universal_wallet_pb2.UpdateItemResponse,
        )
        self.DeleteItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.universalwallet.v1.UniversalWallet/DeleteItem',
            services.universal_wallet.v1.universal_wallet_pb2.DeleteItemRequest,
            services.universal_wallet.v1.universal_wallet_pb2.DeleteItemResponse,
        )
