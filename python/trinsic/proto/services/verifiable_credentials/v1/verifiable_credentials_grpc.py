# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: services/verifiable-credentials/v1/verifiable-credentials.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import services.common.v1.common_pb2
import services.verifiable_credentials.v1.verifiable_credentials_pb2


class VerifiableCredentialBase(abc.ABC):

    @abc.abstractmethod
    async def Issue(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueResponse]') -> None:
        pass

    @abc.abstractmethod
    async def IssueFromTemplate(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CheckStatus(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateStatus(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateProof(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofResponse]') -> None:
        pass

    @abc.abstractmethod
    async def VerifyProof(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Send(self, stream: 'grpclib.server.Stream[services.verifiable_credentials.v1.verifiable_credentials_pb2.SendRequest, services.verifiable_credentials.v1.verifiable_credentials_pb2.SendResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/services.verifiablecredentials.v1.VerifiableCredential/Issue': grpclib.const.Handler(
                self.Issue,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/IssueFromTemplate': grpclib.const.Handler(
                self.IssueFromTemplate,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/CheckStatus': grpclib.const.Handler(
                self.CheckStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/UpdateStatus': grpclib.const.Handler(
                self.UpdateStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/CreateProof': grpclib.const.Handler(
                self.CreateProof,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/VerifyProof': grpclib.const.Handler(
                self.VerifyProof,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofResponse,
            ),
            '/services.verifiablecredentials.v1.VerifiableCredential/Send': grpclib.const.Handler(
                self.Send,
                grpclib.const.Cardinality.UNARY_UNARY,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.SendRequest,
                services.verifiable_credentials.v1.verifiable_credentials_pb2.SendResponse,
            ),
        }


class VerifiableCredentialStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Issue = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/Issue',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueResponse,
        )
        self.IssueFromTemplate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/IssueFromTemplate',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.IssueFromTemplateResponse,
        )
        self.CheckStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/CheckStatus',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.CheckStatusResponse,
        )
        self.UpdateStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/UpdateStatus',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.UpdateStatusResponse,
        )
        self.CreateProof = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/CreateProof',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.CreateProofResponse,
        )
        self.VerifyProof = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/VerifyProof',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.VerifyProofResponse,
        )
        self.Send = grpclib.client.UnaryUnaryMethod(
            channel,
            '/services.verifiablecredentials.v1.VerifiableCredential/Send',
            services.verifiable_credentials.v1.verifiable_credentials_pb2.SendRequest,
            services.verifiable_credentials.v1.verifiable_credentials_pb2.SendResponse,
        )
