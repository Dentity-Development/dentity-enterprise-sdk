from trinsic.proto.services.verifiablecredentials.v1 import *
from trinsic.trinsic_service import TrinsicService
from trinsic.trinsic_util import trinsic_config

# BEGIN Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
# target: C:\work\sdk\python\samples\verifiablecredential_service_examples.py

# createVerifiableCredentialService() {
trinsic_service = TrinsicService(
    server_config=trinsic_config(auth_token="YOUR-AUTH-TOKEN")
)
verifiable_credential_service = trinsic_service.verifiable_credential
# }

# verifiableCredentialIssue() {
issue_response = await verifiable_credential_service.issue(
    request=IssueRequest(document_json="YOUR-DOCUMENT-JSON")
)
# }

# verifiableCredentialIssueFromTemplate() {
issue_from_template_response = await verifiable_credential_service.issue_from_template(
    request=IssueFromTemplateRequest(
        template_id="YOUR-TEMPLATE-ID",
        values_json="YOUR-VALUES-JSON",
        framework_id="YOUR-FRAMEWORK-ID",
        save_copy=True,
    )
)
# }

# verifiableCredentialCheckStatus() {
check_status_response = await verifiable_credential_service.check_status(
    request=CheckStatusRequest(credential_status_id="YOUR-CREDENTIAL-STATUS-ID")
)
# }

# verifiableCredentialUpdateStatus() {
update_status_response = await verifiable_credential_service.update_status(
    request=UpdateStatusRequest(
        credential_status_id="YOUR-CREDENTIAL-STATUS-ID", revoked=True
    )
)
# }

# verifiableCredentialCreateProof() {
create_proof_response = await verifiable_credential_service.create_proof(
    request=CreateProofRequest(
        reveal_document_json="YOUR-REVEAL-DOCUMENT-JSON",
        reveal_template=RevealTemplateAttributes(),
        item_id="YOUR-ITEM-ID",
        document_json="YOUR-DOCUMENT-JSON",
        use_verifiable_presentation=True,
        nonce=bytes("1234"),
    )
)
# }

# verifiableCredentialVerifyProof() {
verify_proof_response = await verifiable_credential_service.verify_proof(
    request=VerifyProofRequest(proof_document_json="YOUR-PROOF-DOCUMENT-JSON")
)
# }

# verifiableCredentialSend() {
send_response = await verifiable_credential_service.send(
    request=SendRequest(
        email="YOUR-EMAIL",
        wallet_id="YOUR-WALLET-ID",
        did_uri="YOUR-DID-URI",
        send_notification=True,
        document_json="YOUR-DOCUMENT-JSON",
    )
)
# }

# END Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
