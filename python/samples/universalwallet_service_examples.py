from trinsic.proto.services.universalwallet.v1 import *
from trinsic.trinsic_service import TrinsicService
from trinsic.trinsic_util import trinsic_config

# BEGIN Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
# target: C:\work\sdk\python\samples\universalwallet_service_examples.py

# createUniversalWalletService() {
trinsic_service = TrinsicService(server_config=trinsic_config(auth_token="YOUR-AUTH-TOKEN"))
universal_wallet_service = trinsic_service.wallet
# }

# universalWalletGetItem() {
get_item_response = await universal_wallet_service.get_item(request=GetItemRequest(item_id="YOUR-ITEM-ID"))
# }

# universalWalletSearch() {
search_response = await universal_wallet_service.search(request=SearchRequest(query="YOUR-QUERY", continuation_token="YOUR-CONTINUATION-TOKEN"))
# }

# universalWalletInsertItem() {
insert_item_response = await universal_wallet_service.insert_item(request=InsertItemRequest(item_json="YOUR-ITEM-JSON", item_type="YOUR-ITEM-TYPE"))
# }

# universalWalletUpdateItem() {
update_item_response = await universal_wallet_service.update_item(request=UpdateItemRequest(item_id="YOUR-ITEM-ID", item_type="YOUR-ITEM-TYPE"))
# }

# universalWalletDeleteItem() {
delete_item_response = await universal_wallet_service.delete_item(request=DeleteItemRequest(item_id="YOUR-ITEM-ID"))
# }

# universalWalletDeleteWallet() {
delete_wallet_response = await universal_wallet_service.delete_wallet(request=DeleteWalletRequest(email="YOUR-EMAIL", wallet_id="YOUR-WALLET-ID", did_uri="YOUR-DID-URI"))
# }

# universalWalletCreateWallet() {
# }

# universalWalletGetWalletInfo() {
# }

# universalWalletGetMyInfo() {
# }

# universalWalletGenerateAuthToken() {
# }

# universalWalletRevokeAuthToken() {
# }

# universalWalletAddExternalIdentityInit() {
# }

# universalWalletAddExternalIdentityConfirm() {
# }

# universalWalletAuthenticateInit() {
# }

# universalWalletAuthenticateConfirm() {
# }

# universalWalletListWallets() {
# }

# END Doc Code generated by protoc-gen-trinsic. DO NOT EDIT.
