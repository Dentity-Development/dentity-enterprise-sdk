// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/connect/v1/connect.proto

package trinsic.services.connect.v1;

public interface VerificationOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:services.connect.v1.Verification)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The ID of the verification
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The id.
   */
  java.lang.String getId();
  /**
   *
   *
   * <pre>
   * The ID of the verification
   * </pre>
   *
   * <code>string id = 1;</code>
   *
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString getIdBytes();

  /**
   *
   *
   * <pre>
   * The type of verification (driver's license, passport, proof of address, etc)
   * </pre>
   *
   * <code>.services.connect.v1.VerificationType type = 2;</code>
   *
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   *
   *
   * <pre>
   * The type of verification (driver's license, passport, proof of address, etc)
   * </pre>
   *
   * <code>.services.connect.v1.VerificationType type = 2;</code>
   *
   * @return The type.
   */
  trinsic.services.connect.v1.VerificationType getType();

  /**
   *
   *
   * <pre>
   * The state of the verification
   * </pre>
   *
   * <code>.services.connect.v1.VerificationState state = 3;</code>
   *
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   *
   *
   * <pre>
   * The state of the verification
   * </pre>
   *
   * <code>.services.connect.v1.VerificationState state = 3;</code>
   *
   * @return The state.
   */
  trinsic.services.connect.v1.VerificationState getState();

  /**
   *
   *
   * <pre>
   * Whether this was a reused (true) or fresh (false) verification.
   * If `state` is not `VERIFICATION_SUCCESS`, this field is `false` and does not convey useful information.
   * </pre>
   *
   * <code>bool reused = 4;</code>
   *
   * @return The reused.
   */
  boolean getReused();

  /**
   *
   *
   * <pre>
   * The unix timestamp, in seconds, when this verification was begun
   * by the user -- or `0` if not yet begun.
   * </pre>
   *
   * <code>fixed64 begun = 5;</code>
   *
   * @return The begun.
   */
  long getBegun();

  /**
   *
   *
   * <pre>
   * The unix timestamp, in seconds, when this verification last changed state -- o
   * </pre>
   *
   * <code>fixed64 updated = 6;</code>
   *
   * @return The updated.
   */
  long getUpdated();
}
