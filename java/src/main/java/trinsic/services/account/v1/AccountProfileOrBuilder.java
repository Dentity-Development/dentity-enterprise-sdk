// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/account/v1/account.proto

package trinsic.services.account.v1;

public interface AccountProfileOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:services.account.v1.AccountProfile)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The type of profile, used to differentiate between
   * protocol schemes or versions
   * </pre>
   *
   * <code>string profile_type = 1;</code>
   *
   * @return The profileType.
   */
  java.lang.String getProfileType();
  /**
   *
   *
   * <pre>
   * The type of profile, used to differentiate between
   * protocol schemes or versions
   * </pre>
   *
   * <code>string profile_type = 1;</code>
   *
   * @return The bytes for profileType.
   */
  com.google.protobuf.ByteString getProfileTypeBytes();

  /**
   *
   *
   * <pre>
   * Auth data containg information about the current device access
   * </pre>
   *
   * <code>bytes auth_data = 2;</code>
   *
   * @return The authData.
   */
  com.google.protobuf.ByteString getAuthData();

  /**
   *
   *
   * <pre>
   * Secure token issued by server used to generate zero-knowledge proofs
   * </pre>
   *
   * <code>bytes auth_token = 3;</code>
   *
   * @return The authToken.
   */
  com.google.protobuf.ByteString getAuthToken();

  /**
   *
   *
   * <pre>
   * Token security information about the token.
   * If token protection is enabled, implementations must supply
   * protection secret before using the token for authentication.
   * </pre>
   *
   * <code>.services.account.v1.TokenProtection protection = 4;</code>
   *
   * @return Whether the protection field is set.
   */
  boolean hasProtection();
  /**
   *
   *
   * <pre>
   * Token security information about the token.
   * If token protection is enabled, implementations must supply
   * protection secret before using the token for authentication.
   * </pre>
   *
   * <code>.services.account.v1.TokenProtection protection = 4;</code>
   *
   * @return The protection.
   */
  trinsic.services.account.v1.TokenProtection getProtection();
  /**
   *
   *
   * <pre>
   * Token security information about the token.
   * If token protection is enabled, implementations must supply
   * protection secret before using the token for authentication.
   * </pre>
   *
   * <code>.services.account.v1.TokenProtection protection = 4;</code>
   */
  trinsic.services.account.v1.TokenProtectionOrBuilder getProtectionOrBuilder();
}
