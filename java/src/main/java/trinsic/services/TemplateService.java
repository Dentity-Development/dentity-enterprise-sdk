package trinsic.services;

import com.google.common.util.concurrent.ListenableFuture;
import com.google.protobuf.InvalidProtocolBufferException;
import trinsic.okapi.DidException;
import trinsic.sdk.options.v1.Options;
import trinsic.services.verifiablecredentials.templates.v1.CredentialTemplatesGrpc;
import trinsic.services.verifiablecredentials.templates.v1.Templates;

public class TemplateService extends ServiceBase {
  private final CredentialTemplatesGrpc.CredentialTemplatesFutureStub stub;

  public TemplateService() {
    this(null);
  }

  public TemplateService(Options.ServiceOptions.Builder options) {
    super(options);

    this.stub = CredentialTemplatesGrpc.newFutureStub(this.getChannel());
  }
// BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: ..\sdk\java\src\main\java\trinsic\services\templateService.java

  public ListenableFuture<CredentialTemplatesOuterClass.CreateCredentialTemplateResponse> create(CredentialTemplatesOuterClass.CreateCredentialTemplateRequest request)
      throws InvalidProtocolBufferException, DidException {
    // TODO - Handle metadata
	return withMetadata(stub, request).create(request);
  }

  public ListenableFuture<CredentialTemplatesOuterClass.GetCredentialTemplateResponse> get(CredentialTemplatesOuterClass.GetCredentialTemplateRequest request)
      throws InvalidProtocolBufferException, DidException {
    // TODO - Handle metadata
	return withMetadata(stub, request).get(request);
  }

  public ListenableFuture<CredentialTemplatesOuterClass.ListCredentialTemplatesResponse> list(CredentialTemplatesOuterClass.ListCredentialTemplatesRequest request)
      throws InvalidProtocolBufferException, DidException {
    // TODO - Handle metadata
	return withMetadata(stub, request).list(request);
  }

  public ListenableFuture<CredentialTemplatesOuterClass.SearchCredentialTemplatesResponse> search(CredentialTemplatesOuterClass.SearchCredentialTemplatesRequest request)
      throws InvalidProtocolBufferException, DidException {
    // TODO - Handle metadata
	return withMetadata(stub, request).search(request);
  }

  public ListenableFuture<CredentialTemplatesOuterClass.DeleteCredentialTemplateResponse> delete(CredentialTemplatesOuterClass.DeleteCredentialTemplateRequest request)
      throws InvalidProtocolBufferException, DidException {
    // TODO - Handle metadata
	return withMetadata(stub, request).delete(request);
  }

// END Code generated by protoc-gen-trinsic. DO NOT EDIT.
}
