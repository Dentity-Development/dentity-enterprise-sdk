// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/verifiable-credentials/v1/verifiable-credentials.proto

package trinsic.services.verifiablecredentials.v1;

public interface IssueFromTemplateRequestOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:services.verifiablecredentials.v1.IssueFromTemplateRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * ID of template to use
   * </pre>
   *
   * <code>string template_id = 1;</code>
   *
   * @return The templateId.
   */
  java.lang.String getTemplateId();
  /**
   *
   *
   * <pre>
   * ID of template to use
   * </pre>
   *
   * <code>string template_id = 1;</code>
   *
   * @return The bytes for templateId.
   */
  com.google.protobuf.ByteString getTemplateIdBytes();

  /**
   *
   *
   * <pre>
   * JSON document string with keys corresponding to the fields of
   * the template referenced by `template_id`
   * </pre>
   *
   * <code>string values_json = 2;</code>
   *
   * @return The valuesJson.
   */
  java.lang.String getValuesJson();
  /**
   *
   *
   * <pre>
   * JSON document string with keys corresponding to the fields of
   * the template referenced by `template_id`
   * </pre>
   *
   * <code>string values_json = 2;</code>
   *
   * @return The bytes for valuesJson.
   */
  com.google.protobuf.ByteString getValuesJsonBytes();

  /**
   *
   *
   * <pre>
   * Save a copy of the issued credential to this user's wallet. This copy will only contain
   * the credential data, but not the secret proof value. Issuers may use this data to
   * keep track of the details for revocation status.
   * </pre>
   *
   * <code>bool save_copy = 4;</code>
   *
   * @return The saveCopy.
   */
  boolean getSaveCopy();

  /**
   *
   *
   * <pre>
   * The ISO8601 expiration UTC date of the credential. This is a reserved field in the VC specification.
   * If specified, the issued credential will contain an expiration date.
   * https://www.w3.org/TR/vc-data-model/#expiration
   * </pre>
   *
   * <code>string expiration_date = 5;</code>
   *
   * @return The expirationDate.
   */
  java.lang.String getExpirationDate();
  /**
   *
   *
   * <pre>
   * The ISO8601 expiration UTC date of the credential. This is a reserved field in the VC specification.
   * If specified, the issued credential will contain an expiration date.
   * https://www.w3.org/TR/vc-data-model/#expiration
   * </pre>
   *
   * <code>string expiration_date = 5;</code>
   *
   * @return The bytes for expirationDate.
   */
  com.google.protobuf.ByteString getExpirationDateBytes();

  /**
   *
   *
   * <pre>
   * If true, the issued credential will contain an attestation of the issuer's membership in the ecosystem's
   * Trust Registry.
   * </pre>
   *
   * <code>bool include_governance = 6;</code>
   *
   * @return The includeGovernance.
   */
  boolean getIncludeGovernance();

  /**
   *
   *
   * <pre>
   * The type of signature to use when signing the credential. Defaults to `EXPERIMENTAL`.
   * </pre>
   *
   * <code>.services.verifiablecredentials.v1.SignatureType signature_type = 7;</code>
   *
   * @return The enum numeric value on the wire for signatureType.
   */
  int getSignatureTypeValue();
  /**
   *
   *
   * <pre>
   * The type of signature to use when signing the credential. Defaults to `EXPERIMENTAL`.
   * </pre>
   *
   * <code>.services.verifiablecredentials.v1.SignatureType signature_type = 7;</code>
   *
   * @return The signatureType.
   */
  trinsic.services.verifiablecredentials.v1.SignatureType getSignatureType();
}
