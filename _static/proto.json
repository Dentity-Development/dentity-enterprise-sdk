{
  "index": {
    "google.api.CustomHttpPattern": {
      "type": "message",
      "collection": "messages",
      "file": "services/google/api/http.proto",
      "parent": ""
    },
    "google.api.CustomHttpPattern.kind": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.CustomHttpPattern"
    },
    "google.api.CustomHttpPattern.path": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.CustomHttpPattern"
    },
    "google.api.Http": {
      "type": "message",
      "collection": "messages",
      "file": "services/google/api/http.proto",
      "parent": ""
    },
    "google.api.Http.fully_decode_reserved_expansion": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.Http"
    },
    "google.api.Http.rules": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.Http"
    },
    "google.api.HttpRule": {
      "type": "message",
      "collection": "messages",
      "file": "services/google/api/http.proto",
      "parent": ""
    },
    "google.api.HttpRule.additional_bindings": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.body": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.custom": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.delete": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.get": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.patch": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.post": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.put": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.response_body": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "google.api.HttpRule.selector": {
      "type": "field",
      "collection": "fields",
      "file": "services/google/api/http.proto",
      "parent": "google.api.HttpRule"
    },
    "sdk.options.v1.TrinsicOptions": {
      "type": "message",
      "collection": "messages",
      "file": "sdk/options/v1/options.proto",
      "parent": ""
    },
    "sdk.options.v1.TrinsicOptions.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.TrinsicOptions"
    },
    "sdk.options.v1.TrinsicOptions.server_endpoint": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.TrinsicOptions"
    },
    "sdk.options.v1.TrinsicOptions.server_port": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.TrinsicOptions"
    },
    "sdk.options.v1.TrinsicOptions.server_use_tls": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.TrinsicOptions"
    },
    "services.account.v1.AccountDetails": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountDetails.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountDetails.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountDetails.sms": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountProfile": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountProfile.auth_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.profile_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.protection": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.ConfirmationMethod": {
      "type": "enum",
      "collection": "enums",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.ConfirmationMethod.ConnectedDevice": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Email": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.None": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Other": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Sms": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.TokenProtection": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.TokenProtection.enabled": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.TokenProtection"
    },
    "services.account.v1.TokenProtection.method": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.TokenProtection"
    },
    "services.account.v1.WalletAuthToken": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.WalletAuthToken.date_created": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.WalletAuthToken"
    },
    "services.account.v1.WalletAuthToken.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.WalletAuthToken"
    },
    "services.account.v1.WalletAuthToken.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.WalletAuthToken"
    },
    "services.common.v1.Nonce": {
      "type": "message",
      "collection": "messages",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.Nonce.request_hash": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.Nonce"
    },
    "services.common.v1.Nonce.timestamp": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.Nonce"
    },
    "services.common.v1.OrderDirection": {
      "type": "enum",
      "collection": "enums",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.OrderDirection.ASCENDING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.OrderDirection"
    },
    "services.common.v1.OrderDirection.DESCENDING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.OrderDirection"
    },
    "services.common.v1.ResponseStatus": {
      "type": "enum",
      "collection": "enums",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.ResponseStatus.ITEM_NOT_FOUND": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.SERIALIZATION_ERROR": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.SUCCESS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.UNKNOWN_ERROR": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.WALLET_EXISTS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.SupportedDidMethod": {
      "type": "enum",
      "collection": "enums",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.SupportedDidMethod.INDY": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.SupportedDidMethod"
    },
    "services.common.v1.SupportedDidMethod.ION": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.SupportedDidMethod"
    },
    "services.common.v1.SupportedDidMethod.KEY": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.SupportedDidMethod"
    },
    "services.common.v1.TrinsicClientOptions": {
      "type": "message",
      "collection": "messages",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.TrinsicClientOptions.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.TrinsicClientOptions"
    },
    "services.common.v1.TrinsicClientOptions.server_endpoint": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.TrinsicClientOptions"
    },
    "services.common.v1.TrinsicClientOptions.server_port": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.TrinsicClientOptions"
    },
    "services.common.v1.TrinsicClientOptions.server_use_tls": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.TrinsicClientOptions"
    },
    "services.connect.v1.CancelSessionRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CancelSessionRequest.idv_session_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CancelSessionRequest"
    },
    "services.connect.v1.CancelSessionResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CancelSessionResponse.session": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CancelSessionResponse"
    },
    "services.connect.v1.Connect": {
      "type": "service",
      "collection": "services",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Connect.CancelSession": {
      "type": "method",
      "collection": "methods",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Connect.CreateSession": {
      "type": "method",
      "collection": "methods",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Connect.GetSession": {
      "type": "method",
      "collection": "methods",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Connect.HasValidCredential": {
      "type": "method",
      "collection": "methods",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Connect.ListSessions": {
      "type": "method",
      "collection": "methods",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CreateSessionRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionRequest"
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionRequest.DebugInformationEntry"
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionRequest.DebugInformationEntry"
    },
    "services.connect.v1.CreateSessionRequest.debug_information": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionRequest"
    },
    "services.connect.v1.CreateSessionRequest.verifications": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionRequest"
    },
    "services.connect.v1.CreateSessionResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CreateSessionResponse.session": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CreateSessionResponse"
    },
    "services.connect.v1.CredentialRequestData": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.CredentialRequestData.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.CredentialRequestData"
    },
    "services.connect.v1.GetSessionRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.GetSessionRequest.idv_session_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GetSessionRequest"
    },
    "services.connect.v1.GetSessionResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.GetSessionResponse.session": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GetSessionResponse"
    },
    "services.connect.v1.GovernmentIDFields": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.GovernmentIDFields.address": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.country": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.date_of_birth": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.expiration_date": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.family_name": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.given_name": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.id_number": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDFields.issue_date": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDFields"
    },
    "services.connect.v1.GovernmentIDOptions": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.GovernmentIDOptions.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.GovernmentIDOptions"
    },
    "services.connect.v1.HasValidCredentialRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.HasValidCredentialRequest.credential_request_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.HasValidCredentialRequest"
    },
    "services.connect.v1.HasValidCredentialRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.HasValidCredentialRequest"
    },
    "services.connect.v1.HasValidCredentialResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.HasValidCredentialResponse.has_valid_credential": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.HasValidCredentialResponse"
    },
    "services.connect.v1.IDVSession": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.IDVSession.VerificationsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.VerificationsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession.VerificationsEntry"
    },
    "services.connect.v1.IDVSession.VerificationsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession.VerificationsEntry"
    },
    "services.connect.v1.IDVSession.client_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.created": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.fail_code": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.result_vp": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.state": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.updated": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSession.verifications": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSession"
    },
    "services.connect.v1.IDVSessionState": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.IDVSessionState.IDV_AUTHENTICATING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.IDVSessionState.IDV_CREATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.IDVSessionState.IDV_FAILED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.IDVSessionState.IDV_INITIATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.IDVSessionState.IDV_IN_PROGRESS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.IDVSessionState.IDV_SUCCESS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.IDVSessionState"
    },
    "services.connect.v1.ListSessionsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.ListSessionsRequest.order_by": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsRequest"
    },
    "services.connect.v1.ListSessionsRequest.order_direction": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsRequest"
    },
    "services.connect.v1.ListSessionsRequest.page": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsRequest"
    },
    "services.connect.v1.ListSessionsRequest.page_size": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsRequest"
    },
    "services.connect.v1.ListSessionsResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.ListSessionsResponse.more": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsResponse"
    },
    "services.connect.v1.ListSessionsResponse.sessions": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsResponse"
    },
    "services.connect.v1.ListSessionsResponse.total": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.ListSessionsResponse"
    },
    "services.connect.v1.NormalizedGovernmentIdData": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.NormalizedGovernmentIdData.address": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.country": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.date_of_birth": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.expiration_date": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.family_name": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.given_name": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.id_number": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.NormalizedGovernmentIdData.issue_date": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.NormalizedGovernmentIdData"
    },
    "services.connect.v1.RequestedVerification": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.RequestedVerification.government_id_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.RequestedVerification"
    },
    "services.connect.v1.RequestedVerification.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.RequestedVerification"
    },
    "services.connect.v1.SessionFailCode": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_AUTHENTICATION": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_EXPIRED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_INTERNAL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_NONE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_RP_CANCELED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_USER_CANCELED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_VERIFICATION_FAILED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionFailCode"
    },
    "services.connect.v1.SessionOrdering": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.SessionOrdering.CREATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionOrdering"
    },
    "services.connect.v1.SessionOrdering.STATE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionOrdering"
    },
    "services.connect.v1.SessionOrdering.UPDATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.SessionOrdering"
    },
    "services.connect.v1.Verification": {
      "type": "message",
      "collection": "messages",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.Verification.begun": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.fail_code": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.government_id_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.normalized_government_id_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.reused": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.state": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.Verification.updated": {
      "type": "field",
      "collection": "fields",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.Verification"
    },
    "services.connect.v1.VerificationFailCode": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INAUTHENTIC": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationFailCode"
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INTERNAL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationFailCode"
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INVALID_IMAGE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationFailCode"
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_NONE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationFailCode"
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationFailCode"
    },
    "services.connect.v1.VerificationState": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.VerificationState.VERIFICATION_FAILED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationState"
    },
    "services.connect.v1.VerificationState.VERIFICATION_PENDING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationState"
    },
    "services.connect.v1.VerificationState.VERIFICATION_PENDING_REUSE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationState"
    },
    "services.connect.v1.VerificationState.VERIFICATION_STARTED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationState"
    },
    "services.connect.v1.VerificationState.VERIFICATION_SUCCESS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationState"
    },
    "services.connect.v1.VerificationType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/connect/v1/connect.proto",
      "parent": ""
    },
    "services.connect.v1.VerificationType.GOVERNMENT_ID": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/connect/v1/connect.proto",
      "parent": "services.connect.v1.VerificationType"
    },
    "services.filemanagement.v1.DeleteFileRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.DeleteFileRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.DeleteFileRequest"
    },
    "services.filemanagement.v1.DeleteFileResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.File": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.File.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.File.mime_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.File.size": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.File.uploaded": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.File.uploader_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.File.url": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.File"
    },
    "services.filemanagement.v1.FileManagement": {
      "type": "service",
      "collection": "services",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.FileManagement.DeleteFile": {
      "type": "method",
      "collection": "methods",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.FileManagement.GetFile": {
      "type": "method",
      "collection": "methods",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.FileManagement.GetStorageStats": {
      "type": "method",
      "collection": "methods",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.FileManagement.ListFiles": {
      "type": "method",
      "collection": "methods",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.FileManagement.UploadFile": {
      "type": "method",
      "collection": "methods",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.GetFileRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.GetFileRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.GetFileRequest"
    },
    "services.filemanagement.v1.GetFileResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.GetFileResponse.file": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.GetFileResponse"
    },
    "services.filemanagement.v1.GetStorageStatsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.GetStorageStatsResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.GetStorageStatsResponse.stats": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.GetStorageStatsResponse"
    },
    "services.filemanagement.v1.ListFilesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.ListFilesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.ListFilesRequest"
    },
    "services.filemanagement.v1.ListFilesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.ListFilesRequest"
    },
    "services.filemanagement.v1.ListFilesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.ListFilesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.ListFilesResponse"
    },
    "services.filemanagement.v1.ListFilesResponse.files": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.ListFilesResponse"
    },
    "services.filemanagement.v1.ListFilesResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.ListFilesResponse"
    },
    "services.filemanagement.v1.StorageStats": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.StorageStats.num_files": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.StorageStats"
    },
    "services.filemanagement.v1.StorageStats.total_size": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.StorageStats"
    },
    "services.filemanagement.v1.UploadFileRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.UploadFileRequest.contents": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.UploadFileRequest"
    },
    "services.filemanagement.v1.UploadFileRequest.mime_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.UploadFileRequest"
    },
    "services.filemanagement.v1.UploadFileResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/file-management/v1/file-management.proto",
      "parent": ""
    },
    "services.filemanagement.v1.UploadFileResponse.uploaded_file": {
      "type": "field",
      "collection": "fields",
      "file": "services/file-management/v1/file-management.proto",
      "parent": "services.filemanagement.v1.UploadFileResponse"
    },
    "services.options.AnnotationOption": {
      "type": "message",
      "collection": "messages",
      "file": "services/options/field-options.proto",
      "parent": ""
    },
    "services.options.AnnotationOption.active": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.AnnotationOption"
    },
    "services.options.AnnotationOption.message": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.AnnotationOption"
    },
    "services.options.SdkTemplateOption": {
      "type": "message",
      "collection": "messages",
      "file": "services/options/field-options.proto",
      "parent": ""
    },
    "services.options.SdkTemplateOption.anonymous": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.SdkTemplateOption"
    },
    "services.options.SdkTemplateOption.deprecated": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.SdkTemplateOption"
    },
    "services.options.SdkTemplateOption.experimental": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.SdkTemplateOption"
    },
    "services.options.SdkTemplateOption.ignore": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.SdkTemplateOption"
    },
    "services.options.SdkTemplateOption.no_arguments": {
      "type": "field",
      "collection": "fields",
      "file": "services/options/field-options.proto",
      "parent": "services.options.SdkTemplateOption"
    },
    "services.provider.v1.AccessManagement": {
      "type": "service",
      "collection": "services",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AccessManagement.AddRoleAssignment": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AccessManagement.ListAvailableRoles": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AccessManagement.ListRoleAssignments": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AccessManagement.RemoveRoleAssignment": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AddRoleAssignmentRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.AddRoleAssignmentRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.AddRoleAssignmentRequest"
    },
    "services.provider.v1.AddRoleAssignmentRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.AddRoleAssignmentRequest"
    },
    "services.provider.v1.AddRoleAssignmentRequest.role": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.AddRoleAssignmentRequest"
    },
    "services.provider.v1.AddRoleAssignmentRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.AddRoleAssignmentRequest"
    },
    "services.provider.v1.AddRoleAssignmentResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.CreateEcosystemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.CreateEcosystemRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.details": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.domain": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.CreateEcosystemResponse.confirmation_method": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.CreateEcosystemResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.CreateEcosystemResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.Ecosystem": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Ecosystem.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.EcosystemInfoRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.EcosystemInfoResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.EcosystemInfoResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.EcosystemInfoResponse"
    },
    "services.provider.v1.GetOberonKeyRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetOberonKeyResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetOberonKeyResponse.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GetOberonKeyResponse"
    },
    "services.provider.v1.IdentityProvider": {
      "type": "enum",
      "collection": "enums",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.IdentityProvider.Email": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IdentityProvider"
    },
    "services.provider.v1.IdentityProvider.Passkey": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IdentityProvider"
    },
    "services.provider.v1.IdentityProvider.Phone": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IdentityProvider"
    },
    "services.provider.v1.IdentityProvider.TrinsicAuthenticator": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IdentityProvider"
    },
    "services.provider.v1.IdentityProvider.Unknown": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IdentityProvider"
    },
    "services.provider.v1.IndyOptions": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.IndyOptions.IndyNetwork": {
      "type": "enum",
      "collection": "enums",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Danube": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IdUnion": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IdUnionTest": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Indicio": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IndicioDemo": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IndicioTest": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Sovrin": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.SovrinBuilder": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.IndyNetwork.SovrinStaging": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions.IndyNetwork"
    },
    "services.provider.v1.IndyOptions.network": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IndyOptions"
    },
    "services.provider.v1.IonOptions": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.IonOptions.IonNetwork": {
      "type": "enum",
      "collection": "enums",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IonOptions"
    },
    "services.provider.v1.IonOptions.IonNetwork.MainNet": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IonOptions.IonNetwork"
    },
    "services.provider.v1.IonOptions.IonNetwork.TestNet": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IonOptions.IonNetwork"
    },
    "services.provider.v1.IonOptions.network": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.IonOptions"
    },
    "services.provider.v1.ListAvailableRolesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.ListAvailableRolesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.ListAvailableRolesResponse.roles": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.ListAvailableRolesResponse"
    },
    "services.provider.v1.ListRoleAssignmentsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.ListRoleAssignmentsRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.ListRoleAssignmentsRequest"
    },
    "services.provider.v1.ListRoleAssignmentsRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.ListRoleAssignmentsRequest"
    },
    "services.provider.v1.ListRoleAssignmentsRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.ListRoleAssignmentsRequest"
    },
    "services.provider.v1.ListRoleAssignmentsResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.ListRoleAssignmentsResponse.roles": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.ListRoleAssignmentsResponse"
    },
    "services.provider.v1.Provider": {
      "type": "service",
      "collection": "services",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.CreateEcosystem": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GetOberonKey": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.SearchWalletConfigurations": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.UpgradeDID": {
      "type": "method",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.RemoveRoleAssignmentRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.RemoveRoleAssignmentRequest"
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.RemoveRoleAssignmentRequest"
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.role": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.RemoveRoleAssignmentRequest"
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/access-management.proto",
      "parent": "services.provider.v1.RemoveRoleAssignmentRequest"
    },
    "services.provider.v1.RemoveRoleAssignmentResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/access-management.proto",
      "parent": ""
    },
    "services.provider.v1.SearchWalletConfigurationResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.SearchWalletConfigurationResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.SearchWalletConfigurationResponse"
    },
    "services.provider.v1.SearchWalletConfigurationResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.SearchWalletConfigurationResponse"
    },
    "services.provider.v1.SearchWalletConfigurationResponse.results": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.SearchWalletConfigurationResponse"
    },
    "services.provider.v1.SearchWalletConfigurationsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.SearchWalletConfigurationsRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.SearchWalletConfigurationsRequest"
    },
    "services.provider.v1.SearchWalletConfigurationsRequest.query_filter": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.SearchWalletConfigurationsRequest"
    },
    "services.provider.v1.UpgradeDidRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.UpgradeDidRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidRequest.indy_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidRequest.ion_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidRequest.method": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidRequest"
    },
    "services.provider.v1.UpgradeDidResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.UpgradeDidResponse.did": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpgradeDidResponse"
    },
    "services.provider.v1.WalletConfiguration": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.WalletConfiguration.auth_tokens": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.config_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.external_identities": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.external_identity_ids": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.public_did": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.sms": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletConfiguration.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletConfiguration"
    },
    "services.provider.v1.WalletExternalIdentity": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.WalletExternalIdentity.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletExternalIdentity"
    },
    "services.provider.v1.WalletExternalIdentity.provider": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WalletExternalIdentity"
    },
    "services.trustregistry.v1.AuthorizedMember": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.AuthorizedMember.authorized_member_schemas": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMember"
    },
    "services.trustregistry.v1.AuthorizedMember.did": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMember"
    },
    "services.trustregistry.v1.AuthorizedMemberSchema": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMemberSchema"
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.status": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMemberSchema"
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.status_details": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMemberSchema"
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.valid_from": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMemberSchema"
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.valid_until": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AuthorizedMemberSchema"
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest"
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest"
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberAuthorizationStatusResponse"
    },
    "services.trustregistry.v1.GetMemberRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMemberRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberRequest"
    },
    "services.trustregistry.v1.GetMemberRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberRequest"
    },
    "services.trustregistry.v1.GetMemberRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberRequest"
    },
    "services.trustregistry.v1.GetMemberResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMemberResponse.authorized_member": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMemberResponse"
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.ListAuthorizedMembersRequest"
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.ListAuthorizedMembersRequest"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.ListAuthorizedMembersResponse"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.ListAuthorizedMembersResponse"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.ListAuthorizedMembersResponse"
    },
    "services.trustregistry.v1.RegisterMemberRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegistrationStatus": {
      "type": "enum",
      "collection": "enums",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegistrationStatus.CURRENT": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.EXPIRED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.NOT_FOUND": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.REVOKED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.TERMINATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.TrustRegistry": {
      "type": "service",
      "collection": "services",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.GetMember": {
      "type": "method",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus": {
      "type": "method",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers": {
      "type": "method",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.RegisterMember": {
      "type": "method",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.UnregisterMember": {
      "type": "method",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AddExternalIdentityConfirmRequest"
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest.response": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AddExternalIdentityConfirmRequest"
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AddExternalIdentityInitRequest"
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest.provider": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AddExternalIdentityInitRequest"
    },
    "services.universalwallet.v1.AddExternalIdentityInitResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AddExternalIdentityInitResponse.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AddExternalIdentityInitResponse"
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateConfirmRequest"
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest.response": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateConfirmRequest"
    },
    "services.universalwallet.v1.AuthenticateConfirmResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AuthenticateConfirmResponse.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateConfirmResponse"
    },
    "services.universalwallet.v1.AuthenticateInitRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AuthenticateInitRequest.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateInitRequest"
    },
    "services.universalwallet.v1.AuthenticateInitRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateInitRequest"
    },
    "services.universalwallet.v1.AuthenticateInitRequest.provider": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateInitRequest"
    },
    "services.universalwallet.v1.AuthenticateInitResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AuthenticateInitResponse.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateInitResponse"
    },
    "services.universalwallet.v1.AuthenticateResendCodeRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.AuthenticateResendCodeRequest.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.AuthenticateResendCodeRequest"
    },
    "services.universalwallet.v1.AuthenticateResendCodeResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.CreateWalletRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest"
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity"
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.provider": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity"
    },
    "services.universalwallet.v1.CreateWalletRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest"
    },
    "services.universalwallet.v1.CreateWalletRequest.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest"
    },
    "services.universalwallet.v1.CreateWalletRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletRequest"
    },
    "services.universalwallet.v1.CreateWalletResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.CreateWalletResponse.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletResponse"
    },
    "services.universalwallet.v1.CreateWalletResponse.token_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletResponse"
    },
    "services.universalwallet.v1.CreateWalletResponse.wallet": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.CreateWalletResponse"
    },
    "services.universalwallet.v1.DeleteItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.DeleteItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.DeleteItemRequest"
    },
    "services.universalwallet.v1.DeleteItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.DeleteWalletRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.DeleteWalletRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.DeleteWalletRequest"
    },
    "services.universalwallet.v1.DeleteWalletRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.DeleteWalletRequest"
    },
    "services.universalwallet.v1.DeleteWalletRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.DeleteWalletRequest"
    },
    "services.universalwallet.v1.DeleteWalletResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest.token_description": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GenerateAuthTokenRequest"
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GenerateAuthTokenRequest"
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GenerateAuthTokenResponse"
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse.token_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GenerateAuthTokenResponse"
    },
    "services.universalwallet.v1.GetItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemRequest"
    },
    "services.universalwallet.v1.GetItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetItemResponse.item_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemResponse"
    },
    "services.universalwallet.v1.GetItemResponse.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemResponse"
    },
    "services.universalwallet.v1.GetMyInfoRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetMyInfoResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetMyInfoResponse.wallet": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetMyInfoResponse"
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetWalletFromExternalIdentityRequest"
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityResponse.wallet": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetWalletFromExternalIdentityResponse"
    },
    "services.universalwallet.v1.GetWalletInfoRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetWalletInfoRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetWalletInfoRequest"
    },
    "services.universalwallet.v1.GetWalletInfoResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetWalletInfoResponse.wallet": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetWalletInfoResponse"
    },
    "services.universalwallet.v1.InsertItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.InsertItemRequest.item_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemRequest"
    },
    "services.universalwallet.v1.InsertItemRequest.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemRequest"
    },
    "services.universalwallet.v1.InsertItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.InsertItemResponse.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemResponse"
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListByVerificationTemplateRequest"
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest.verification_template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListByVerificationTemplateRequest"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListByVerificationTemplateResponse"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListByVerificationTemplateResponse"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.items": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListByVerificationTemplateResponse"
    },
    "services.universalwallet.v1.ListWalletsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.ListWalletsRequest.filter": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListWalletsRequest"
    },
    "services.universalwallet.v1.ListWalletsResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.ListWalletsResponse.wallets": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.ListWalletsResponse"
    },
    "services.universalwallet.v1.RemoveExternalIdentityRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.RemoveExternalIdentityRequest.identity": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.RemoveExternalIdentityRequest"
    },
    "services.universalwallet.v1.RemoveExternalIdentityResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest.token_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.RevokeAuthTokenRequest"
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.RevokeAuthTokenRequest"
    },
    "services.universalwallet.v1.RevokeAuthTokenResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.SearchRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.SearchRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchRequest"
    },
    "services.universalwallet.v1.SearchRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchRequest"
    },
    "services.universalwallet.v1.SearchResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.SearchResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.SearchResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.SearchResponse.items": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.UniversalWallet": {
      "type": "service",
      "collection": "services",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.AddExternalIdentityConfirm": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.AddExternalIdentityInit": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateConfirm": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateInit": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateResendCode": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.CreateWallet": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.DeleteItem": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.DeleteWallet": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GenerateAuthToken": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GetItem": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GetMyInfo": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GetWalletFromExternalIdentity": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GetWalletInfo": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.InsertItem": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.ListByVerificationTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.ListWallets": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.RemoveExternalIdentity": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.RevokeAuthToken": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.Search": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.UpdateItem": {
      "type": "method",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UpdateItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UpdateItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.UpdateItemRequest"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.UpdateItemRequest"
    },
    "services.universalwallet.v1.UpdateItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.auxiliary_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.background_color": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.foreground_color": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.label_color": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.primary_field": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.secondary_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.AppleWalletOptions"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.apple_wallet_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.field_ordering": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.credential_template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse.data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates": {
      "type": "service",
      "collection": "services",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Create": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.CreateVerificationTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.DeleteVerificationTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Get": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.GetVerificationTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.List": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.ListVerificationTemplates": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Search": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Update": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.UpdateVerificationTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest.verification_template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering.order": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldOrdering"
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering.section": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldOrdering"
    },
    "services.verifiablecredentials.templates.v1.FieldType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.FieldType.BOOL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.DATETIME": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.NUMBER": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.STRING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.URI": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse.template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.templates": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.TemplateData": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.apple_wallet_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.created_by": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.date_created": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.field_ordering": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.version": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateField": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateField.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.optional": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.uri_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateFieldPatch"
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateFieldPatch"
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.uri_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateFieldPatch"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.apple_wallet_options": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.field_ordering": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse.updated_template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse.template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.UriFieldData": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UriFieldData.mime_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UriFieldData"
    },
    "services.verifiablecredentials.templates.v1.UriFieldData.render_method": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UriFieldData"
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod": {
      "type": "enum",
      "collection": "enums",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.INLINE_IMAGE": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UriRenderMethod"
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.LINK": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UriRenderMethod"
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.TEXT": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.UriRenderMethod"
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType.OPTIONAL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationShareType"
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType.REQUIRED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationShareType"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.created_by": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.credential_template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.date_created": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.title": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.version": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateData"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField.field_share_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateField"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField.usage_policy": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateField"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.field_share_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.usage_policy": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch"
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.AcceptCredentialRequest"
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.AcceptCredentialRequest"
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.AcceptCredentialResponse"
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.AcceptCredentialResponse"
    },
    "services.verifiablecredentials.v1.CheckStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CheckStatusRequest"
    },
    "services.verifiablecredentials.v1.CheckStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CheckStatusResponse.revoked": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CheckStatusResponse"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.generate_share_url": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.holder_binding": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.include_governance": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.signature_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.values_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferRequest"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferResponse"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse.share_url": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateCredentialOfferResponse"
    },
    "services.verifiablecredentials.v1.CreateProofRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateProofRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.nonce": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.use_verifiable_presentation": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.verification_template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofResponse"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.expiration_date": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.include_governance": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.save_copy": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.signature_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateResponse"
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.RejectCredentialRequest"
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.RejectCredentialRequest"
    },
    "services.verifiablecredentials.v1.RejectCredentialResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.RevealTemplateAttributes": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.RevealTemplateAttributes.template_attributes": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.RevealTemplateAttributes"
    },
    "services.verifiablecredentials.v1.SendRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.SendRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.phone_number": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.send_notification": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.SignatureType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.SignatureType.EXPERIMENTAL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SignatureType"
    },
    "services.verifiablecredentials.v1.SignatureType.STANDARD": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SignatureType"
    },
    "services.verifiablecredentials.v1.SignatureType.UNSPECIFIED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SignatureType"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.UpdateStatusRequest"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.revoked": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.UpdateStatusRequest"
    },
    "services.verifiablecredentials.v1.UpdateStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.ValidationMessage": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.ValidationMessage.is_valid": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.ValidationMessage"
    },
    "services.verifiablecredentials.v1.ValidationMessage.messages": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.ValidationMessage"
    },
    "services.verifiablecredentials.v1.VerifiableCredential": {
      "type": "service",
      "collection": "services",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.AcceptCredential": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateCredentialOffer": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateProof": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.RejectCredential": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Send": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof": {
      "type": "method",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofRequest"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.is_valid": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    }
  },
  "files": {
    "sdk/options/v1/options.proto": {
      "name": "sdk/options/v1/options.proto",
      "package": "sdk.options.v1",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "sdk.options.v1.TrinsicOptions"
      ],
      "fields": [
        "sdk.options.v1.TrinsicOptions.server_endpoint",
        "sdk.options.v1.TrinsicOptions.server_port",
        "sdk.options.v1.TrinsicOptions.server_use_tls",
        "sdk.options.v1.TrinsicOptions.auth_token"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/account/v1/account.proto": {
      "name": "services/account/v1/account.proto",
      "package": "services.account.v1",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "services.account.v1.AccountDetails",
        "services.account.v1.TokenProtection",
        "services.account.v1.AccountProfile",
        "services.account.v1.WalletAuthToken"
      ],
      "fields": [
        "services.account.v1.AccountDetails.name",
        "services.account.v1.AccountDetails.email",
        "services.account.v1.AccountDetails.sms",
        "services.account.v1.TokenProtection.enabled",
        "services.account.v1.TokenProtection.method",
        "services.account.v1.AccountProfile.profile_type",
        "services.account.v1.AccountProfile.auth_data",
        "services.account.v1.AccountProfile.auth_token",
        "services.account.v1.AccountProfile.protection",
        "services.account.v1.WalletAuthToken.id",
        "services.account.v1.WalletAuthToken.description",
        "services.account.v1.WalletAuthToken.date_created"
      ],
      "enums": [
        "services.account.v1.ConfirmationMethod"
      ],
      "enum_values": [
        "services.account.v1.ConfirmationMethod.None",
        "services.account.v1.ConfirmationMethod.Email",
        "services.account.v1.ConfirmationMethod.Sms",
        "services.account.v1.ConfirmationMethod.ConnectedDevice",
        "services.account.v1.ConfirmationMethod.Other"
      ]
    },
    "services/common/v1/common.proto": {
      "name": "services/common/v1/common.proto",
      "package": "services.common.v1",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "services.common.v1.Nonce",
        "services.common.v1.TrinsicClientOptions"
      ],
      "fields": [
        "services.common.v1.Nonce.timestamp",
        "services.common.v1.Nonce.request_hash",
        "services.common.v1.TrinsicClientOptions.server_endpoint",
        "services.common.v1.TrinsicClientOptions.server_port",
        "services.common.v1.TrinsicClientOptions.server_use_tls",
        "services.common.v1.TrinsicClientOptions.auth_token"
      ],
      "enums": [
        "services.common.v1.ResponseStatus",
        "services.common.v1.SupportedDidMethod",
        "services.common.v1.OrderDirection"
      ],
      "enum_values": [
        "services.common.v1.ResponseStatus.SUCCESS",
        "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
        "services.common.v1.ResponseStatus.WALLET_EXISTS",
        "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
        "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
        "services.common.v1.ResponseStatus.UNKNOWN_ERROR",
        "services.common.v1.SupportedDidMethod.KEY",
        "services.common.v1.SupportedDidMethod.ION",
        "services.common.v1.SupportedDidMethod.INDY",
        "services.common.v1.OrderDirection.ASCENDING",
        "services.common.v1.OrderDirection.DESCENDING"
      ]
    },
    "services/connect/v1/connect.proto": {
      "name": "services/connect/v1/connect.proto",
      "package": "services.connect.v1",
      "description": "",
      "services": [
        "services.connect.v1.Connect"
      ],
      "methods": [
        "services.connect.v1.Connect.CreateSession",
        "services.connect.v1.Connect.CancelSession",
        "services.connect.v1.Connect.GetSession",
        "services.connect.v1.Connect.ListSessions",
        "services.connect.v1.Connect.HasValidCredential"
      ],
      "messages": [
        "services.connect.v1.IDVSession",
        "services.connect.v1.IDVSession.VerificationsEntry",
        "services.connect.v1.Verification",
        "services.connect.v1.NormalizedGovernmentIdData",
        "services.connect.v1.CreateSessionRequest",
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry",
        "services.connect.v1.RequestedVerification",
        "services.connect.v1.GovernmentIDOptions",
        "services.connect.v1.GovernmentIDFields",
        "services.connect.v1.CreateSessionResponse",
        "services.connect.v1.CancelSessionRequest",
        "services.connect.v1.CancelSessionResponse",
        "services.connect.v1.GetSessionRequest",
        "services.connect.v1.GetSessionResponse",
        "services.connect.v1.ListSessionsRequest",
        "services.connect.v1.ListSessionsResponse",
        "services.connect.v1.HasValidCredentialRequest",
        "services.connect.v1.HasValidCredentialResponse",
        "services.connect.v1.CredentialRequestData"
      ],
      "fields": [
        "services.connect.v1.IDVSession.id",
        "services.connect.v1.IDVSession.client_token",
        "services.connect.v1.IDVSession.state",
        "services.connect.v1.IDVSession.verifications",
        "services.connect.v1.IDVSession.fail_code",
        "services.connect.v1.IDVSession.result_vp",
        "services.connect.v1.IDVSession.created",
        "services.connect.v1.IDVSession.updated",
        "services.connect.v1.IDVSession.VerificationsEntry.key",
        "services.connect.v1.IDVSession.VerificationsEntry.value",
        "services.connect.v1.Verification.id",
        "services.connect.v1.Verification.type",
        "services.connect.v1.Verification.state",
        "services.connect.v1.Verification.fail_code",
        "services.connect.v1.Verification.reused",
        "services.connect.v1.Verification.begun",
        "services.connect.v1.Verification.updated",
        "services.connect.v1.Verification.government_id_options",
        "services.connect.v1.Verification.normalized_government_id_data",
        "services.connect.v1.NormalizedGovernmentIdData.id_number",
        "services.connect.v1.NormalizedGovernmentIdData.given_name",
        "services.connect.v1.NormalizedGovernmentIdData.family_name",
        "services.connect.v1.NormalizedGovernmentIdData.address",
        "services.connect.v1.NormalizedGovernmentIdData.date_of_birth",
        "services.connect.v1.NormalizedGovernmentIdData.country",
        "services.connect.v1.NormalizedGovernmentIdData.issue_date",
        "services.connect.v1.NormalizedGovernmentIdData.expiration_date",
        "services.connect.v1.CreateSessionRequest.verifications",
        "services.connect.v1.CreateSessionRequest.debug_information",
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry.key",
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry.value",
        "services.connect.v1.RequestedVerification.type",
        "services.connect.v1.RequestedVerification.government_id_options",
        "services.connect.v1.GovernmentIDOptions.fields",
        "services.connect.v1.GovernmentIDFields.id_number",
        "services.connect.v1.GovernmentIDFields.given_name",
        "services.connect.v1.GovernmentIDFields.family_name",
        "services.connect.v1.GovernmentIDFields.address",
        "services.connect.v1.GovernmentIDFields.date_of_birth",
        "services.connect.v1.GovernmentIDFields.country",
        "services.connect.v1.GovernmentIDFields.issue_date",
        "services.connect.v1.GovernmentIDFields.expiration_date",
        "services.connect.v1.CreateSessionResponse.session",
        "services.connect.v1.CancelSessionRequest.idv_session_id",
        "services.connect.v1.CancelSessionResponse.session",
        "services.connect.v1.GetSessionRequest.idv_session_id",
        "services.connect.v1.GetSessionResponse.session",
        "services.connect.v1.ListSessionsRequest.order_by",
        "services.connect.v1.ListSessionsRequest.order_direction",
        "services.connect.v1.ListSessionsRequest.page_size",
        "services.connect.v1.ListSessionsRequest.page",
        "services.connect.v1.ListSessionsResponse.sessions",
        "services.connect.v1.ListSessionsResponse.total",
        "services.connect.v1.ListSessionsResponse.more",
        "services.connect.v1.HasValidCredentialRequest.identity",
        "services.connect.v1.HasValidCredentialRequest.credential_request_data",
        "services.connect.v1.HasValidCredentialResponse.has_valid_credential",
        "services.connect.v1.CredentialRequestData.type"
      ],
      "enums": [
        "services.connect.v1.VerificationType",
        "services.connect.v1.IDVSessionState",
        "services.connect.v1.VerificationState",
        "services.connect.v1.SessionFailCode",
        "services.connect.v1.VerificationFailCode",
        "services.connect.v1.SessionOrdering"
      ],
      "enum_values": [
        "services.connect.v1.VerificationType.GOVERNMENT_ID",
        "services.connect.v1.IDVSessionState.IDV_CREATED",
        "services.connect.v1.IDVSessionState.IDV_INITIATED",
        "services.connect.v1.IDVSessionState.IDV_AUTHENTICATING",
        "services.connect.v1.IDVSessionState.IDV_IN_PROGRESS",
        "services.connect.v1.IDVSessionState.IDV_SUCCESS",
        "services.connect.v1.IDVSessionState.IDV_FAILED",
        "services.connect.v1.VerificationState.VERIFICATION_PENDING",
        "services.connect.v1.VerificationState.VERIFICATION_PENDING_REUSE",
        "services.connect.v1.VerificationState.VERIFICATION_STARTED",
        "services.connect.v1.VerificationState.VERIFICATION_SUCCESS",
        "services.connect.v1.VerificationState.VERIFICATION_FAILED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_NONE",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_INTERNAL",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_VERIFICATION_FAILED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_AUTHENTICATION",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_EXPIRED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_USER_CANCELED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_RP_CANCELED",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_NONE",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INTERNAL",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INVALID_IMAGE",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INAUTHENTIC",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT",
        "services.connect.v1.SessionOrdering.CREATED",
        "services.connect.v1.SessionOrdering.UPDATED",
        "services.connect.v1.SessionOrdering.STATE"
      ]
    },
    "services/file-management/v1/file-management.proto": {
      "name": "services/file-management/v1/file-management.proto",
      "package": "services.filemanagement.v1",
      "description": "",
      "services": [
        "services.filemanagement.v1.FileManagement"
      ],
      "methods": [
        "services.filemanagement.v1.FileManagement.UploadFile",
        "services.filemanagement.v1.FileManagement.GetFile",
        "services.filemanagement.v1.FileManagement.DeleteFile",
        "services.filemanagement.v1.FileManagement.ListFiles",
        "services.filemanagement.v1.FileManagement.GetStorageStats"
      ],
      "messages": [
        "services.filemanagement.v1.File",
        "services.filemanagement.v1.StorageStats",
        "services.filemanagement.v1.UploadFileRequest",
        "services.filemanagement.v1.UploadFileResponse",
        "services.filemanagement.v1.GetFileRequest",
        "services.filemanagement.v1.GetFileResponse",
        "services.filemanagement.v1.DeleteFileRequest",
        "services.filemanagement.v1.DeleteFileResponse",
        "services.filemanagement.v1.ListFilesRequest",
        "services.filemanagement.v1.ListFilesResponse",
        "services.filemanagement.v1.GetStorageStatsRequest",
        "services.filemanagement.v1.GetStorageStatsResponse"
      ],
      "fields": [
        "services.filemanagement.v1.File.id",
        "services.filemanagement.v1.File.uploader_id",
        "services.filemanagement.v1.File.size",
        "services.filemanagement.v1.File.mime_type",
        "services.filemanagement.v1.File.uploaded",
        "services.filemanagement.v1.File.url",
        "services.filemanagement.v1.StorageStats.num_files",
        "services.filemanagement.v1.StorageStats.total_size",
        "services.filemanagement.v1.UploadFileRequest.contents",
        "services.filemanagement.v1.UploadFileRequest.mime_type",
        "services.filemanagement.v1.UploadFileResponse.uploaded_file",
        "services.filemanagement.v1.GetFileRequest.id",
        "services.filemanagement.v1.GetFileResponse.file",
        "services.filemanagement.v1.DeleteFileRequest.id",
        "services.filemanagement.v1.ListFilesRequest.query",
        "services.filemanagement.v1.ListFilesRequest.continuation_token",
        "services.filemanagement.v1.ListFilesResponse.files",
        "services.filemanagement.v1.ListFilesResponse.has_more_results",
        "services.filemanagement.v1.ListFilesResponse.continuation_token",
        "services.filemanagement.v1.GetStorageStatsResponse.stats"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/google/api/annotations.proto": {
      "name": "services/google/api/annotations.proto",
      "package": "google.api",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [],
      "fields": [],
      "enums": [],
      "enum_values": []
    },
    "services/google/api/http.proto": {
      "name": "services/google/api/http.proto",
      "package": "google.api",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "google.api.Http",
        "google.api.HttpRule",
        "google.api.CustomHttpPattern"
      ],
      "fields": [
        "google.api.Http.rules",
        "google.api.Http.fully_decode_reserved_expansion",
        "google.api.HttpRule.selector",
        "google.api.HttpRule.get",
        "google.api.HttpRule.put",
        "google.api.HttpRule.post",
        "google.api.HttpRule.delete",
        "google.api.HttpRule.patch",
        "google.api.HttpRule.custom",
        "google.api.HttpRule.body",
        "google.api.HttpRule.response_body",
        "google.api.HttpRule.additional_bindings",
        "google.api.CustomHttpPattern.kind",
        "google.api.CustomHttpPattern.path"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/options/field-options.proto": {
      "name": "services/options/field-options.proto",
      "package": "services.options",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "services.options.AnnotationOption",
        "services.options.SdkTemplateOption"
      ],
      "fields": [
        "services.options.AnnotationOption.active",
        "services.options.AnnotationOption.message",
        "services.options.SdkTemplateOption.anonymous",
        "services.options.SdkTemplateOption.ignore",
        "services.options.SdkTemplateOption.no_arguments",
        "services.options.SdkTemplateOption.experimental",
        "services.options.SdkTemplateOption.deprecated"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/provider/v1/access-management.proto": {
      "name": "services/provider/v1/access-management.proto",
      "package": "services.provider.v1",
      "description": "",
      "services": [
        "services.provider.v1.AccessManagement"
      ],
      "methods": [
        "services.provider.v1.AccessManagement.AddRoleAssignment",
        "services.provider.v1.AccessManagement.RemoveRoleAssignment",
        "services.provider.v1.AccessManagement.ListRoleAssignments",
        "services.provider.v1.AccessManagement.ListAvailableRoles"
      ],
      "messages": [
        "services.provider.v1.AddRoleAssignmentRequest",
        "services.provider.v1.AddRoleAssignmentResponse",
        "services.provider.v1.RemoveRoleAssignmentRequest",
        "services.provider.v1.RemoveRoleAssignmentResponse",
        "services.provider.v1.ListRoleAssignmentsRequest",
        "services.provider.v1.ListRoleAssignmentsResponse",
        "services.provider.v1.ListAvailableRolesRequest",
        "services.provider.v1.ListAvailableRolesResponse"
      ],
      "fields": [
        "services.provider.v1.AddRoleAssignmentRequest.role",
        "services.provider.v1.AddRoleAssignmentRequest.email",
        "services.provider.v1.AddRoleAssignmentRequest.wallet_id",
        "services.provider.v1.AddRoleAssignmentRequest.did_uri",
        "services.provider.v1.RemoveRoleAssignmentRequest.role",
        "services.provider.v1.RemoveRoleAssignmentRequest.email",
        "services.provider.v1.RemoveRoleAssignmentRequest.wallet_id",
        "services.provider.v1.RemoveRoleAssignmentRequest.did_uri",
        "services.provider.v1.ListRoleAssignmentsRequest.email",
        "services.provider.v1.ListRoleAssignmentsRequest.wallet_id",
        "services.provider.v1.ListRoleAssignmentsRequest.did_uri",
        "services.provider.v1.ListRoleAssignmentsResponse.roles",
        "services.provider.v1.ListAvailableRolesResponse.roles"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/provider/v1/provider.proto": {
      "name": "services/provider/v1/provider.proto",
      "package": "services.provider.v1",
      "description": "",
      "services": [
        "services.provider.v1.Provider"
      ],
      "methods": [
        "services.provider.v1.Provider.CreateEcosystem",
        "services.provider.v1.Provider.GetOberonKey",
        "services.provider.v1.Provider.UpgradeDID",
        "services.provider.v1.Provider.SearchWalletConfigurations"
      ],
      "messages": [
        "services.provider.v1.Ecosystem",
        "services.provider.v1.CreateEcosystemRequest",
        "services.provider.v1.CreateEcosystemResponse",
        "services.provider.v1.EcosystemInfoRequest",
        "services.provider.v1.EcosystemInfoResponse",
        "services.provider.v1.GetOberonKeyRequest",
        "services.provider.v1.GetOberonKeyResponse",
        "services.provider.v1.SearchWalletConfigurationsRequest",
        "services.provider.v1.SearchWalletConfigurationResponse",
        "services.provider.v1.WalletConfiguration",
        "services.provider.v1.WalletExternalIdentity",
        "services.provider.v1.IonOptions",
        "services.provider.v1.IndyOptions",
        "services.provider.v1.UpgradeDidRequest",
        "services.provider.v1.UpgradeDidResponse"
      ],
      "fields": [
        "services.provider.v1.Ecosystem.id",
        "services.provider.v1.Ecosystem.name",
        "services.provider.v1.Ecosystem.description",
        "services.provider.v1.CreateEcosystemRequest.name",
        "services.provider.v1.CreateEcosystemRequest.description",
        "services.provider.v1.CreateEcosystemRequest.details",
        "services.provider.v1.CreateEcosystemRequest.domain",
        "services.provider.v1.CreateEcosystemResponse.ecosystem",
        "services.provider.v1.CreateEcosystemResponse.profile",
        "services.provider.v1.CreateEcosystemResponse.confirmation_method",
        "services.provider.v1.EcosystemInfoResponse.ecosystem",
        "services.provider.v1.GetOberonKeyResponse.key",
        "services.provider.v1.SearchWalletConfigurationsRequest.query_filter",
        "services.provider.v1.SearchWalletConfigurationsRequest.continuation_token",
        "services.provider.v1.SearchWalletConfigurationResponse.results",
        "services.provider.v1.SearchWalletConfigurationResponse.has_more_results",
        "services.provider.v1.SearchWalletConfigurationResponse.continuation_token",
        "services.provider.v1.WalletConfiguration.name",
        "services.provider.v1.WalletConfiguration.email",
        "services.provider.v1.WalletConfiguration.sms",
        "services.provider.v1.WalletConfiguration.wallet_id",
        "services.provider.v1.WalletConfiguration.public_did",
        "services.provider.v1.WalletConfiguration.config_type",
        "services.provider.v1.WalletConfiguration.auth_tokens",
        "services.provider.v1.WalletConfiguration.external_identity_ids",
        "services.provider.v1.WalletConfiguration.ecosystem_id",
        "services.provider.v1.WalletConfiguration.description",
        "services.provider.v1.WalletConfiguration.external_identities",
        "services.provider.v1.WalletExternalIdentity.provider",
        "services.provider.v1.WalletExternalIdentity.id",
        "services.provider.v1.IonOptions.network",
        "services.provider.v1.IndyOptions.network",
        "services.provider.v1.UpgradeDidRequest.email",
        "services.provider.v1.UpgradeDidRequest.wallet_id",
        "services.provider.v1.UpgradeDidRequest.did_uri",
        "services.provider.v1.UpgradeDidRequest.method",
        "services.provider.v1.UpgradeDidRequest.ion_options",
        "services.provider.v1.UpgradeDidRequest.indy_options",
        "services.provider.v1.UpgradeDidResponse.did"
      ],
      "enums": [
        "services.provider.v1.IonOptions.IonNetwork",
        "services.provider.v1.IndyOptions.IndyNetwork",
        "services.provider.v1.IdentityProvider"
      ],
      "enum_values": [
        "services.provider.v1.IonOptions.IonNetwork.TestNet",
        "services.provider.v1.IonOptions.IonNetwork.MainNet",
        "services.provider.v1.IndyOptions.IndyNetwork.Danube",
        "services.provider.v1.IndyOptions.IndyNetwork.SovrinBuilder",
        "services.provider.v1.IndyOptions.IndyNetwork.SovrinStaging",
        "services.provider.v1.IndyOptions.IndyNetwork.Sovrin",
        "services.provider.v1.IndyOptions.IndyNetwork.IdUnionTest",
        "services.provider.v1.IndyOptions.IndyNetwork.IdUnion",
        "services.provider.v1.IndyOptions.IndyNetwork.IndicioTest",
        "services.provider.v1.IndyOptions.IndyNetwork.IndicioDemo",
        "services.provider.v1.IndyOptions.IndyNetwork.Indicio",
        "services.provider.v1.IdentityProvider.Unknown",
        "services.provider.v1.IdentityProvider.Email",
        "services.provider.v1.IdentityProvider.Phone",
        "services.provider.v1.IdentityProvider.Passkey",
        "services.provider.v1.IdentityProvider.TrinsicAuthenticator"
      ]
    },
    "services/trust-registry/v1/trust-registry.proto": {
      "name": "services/trust-registry/v1/trust-registry.proto",
      "package": "services.trustregistry.v1",
      "description": "",
      "services": [
        "services.trustregistry.v1.TrustRegistry"
      ],
      "methods": [
        "services.trustregistry.v1.TrustRegistry.RegisterMember",
        "services.trustregistry.v1.TrustRegistry.UnregisterMember",
        "services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus",
        "services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers",
        "services.trustregistry.v1.TrustRegistry.GetMember"
      ],
      "messages": [
        "services.trustregistry.v1.RegisterMemberRequest",
        "services.trustregistry.v1.RegisterMemberResponse",
        "services.trustregistry.v1.UnregisterMemberRequest",
        "services.trustregistry.v1.UnregisterMemberResponse",
        "services.trustregistry.v1.GetMemberAuthorizationStatusRequest",
        "services.trustregistry.v1.GetMemberAuthorizationStatusResponse",
        "services.trustregistry.v1.ListAuthorizedMembersRequest",
        "services.trustregistry.v1.ListAuthorizedMembersResponse",
        "services.trustregistry.v1.AuthorizedMember",
        "services.trustregistry.v1.AuthorizedMemberSchema",
        "services.trustregistry.v1.GetMemberRequest",
        "services.trustregistry.v1.GetMemberResponse"
      ],
      "fields": [
        "services.trustregistry.v1.RegisterMemberRequest.did_uri",
        "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
        "services.trustregistry.v1.RegisterMemberRequest.email",
        "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
        "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
        "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc",
        "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
        "services.trustregistry.v1.UnregisterMemberRequest.email",
        "services.trustregistry.v1.UnregisterMemberRequest.schema_uri",
        "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.did_uri",
        "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.schema_uri",
        "services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status",
        "services.trustregistry.v1.ListAuthorizedMembersRequest.schema_uri",
        "services.trustregistry.v1.ListAuthorizedMembersRequest.continuation_token",
        "services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members",
        "services.trustregistry.v1.ListAuthorizedMembersResponse.has_more_results",
        "services.trustregistry.v1.ListAuthorizedMembersResponse.continuation_token",
        "services.trustregistry.v1.AuthorizedMember.did",
        "services.trustregistry.v1.AuthorizedMember.authorized_member_schemas",
        "services.trustregistry.v1.AuthorizedMemberSchema.schema_uri",
        "services.trustregistry.v1.AuthorizedMemberSchema.status",
        "services.trustregistry.v1.AuthorizedMemberSchema.status_details",
        "services.trustregistry.v1.AuthorizedMemberSchema.valid_from",
        "services.trustregistry.v1.AuthorizedMemberSchema.valid_until",
        "services.trustregistry.v1.GetMemberRequest.did_uri",
        "services.trustregistry.v1.GetMemberRequest.wallet_id",
        "services.trustregistry.v1.GetMemberRequest.email",
        "services.trustregistry.v1.GetMemberResponse.authorized_member"
      ],
      "enums": [
        "services.trustregistry.v1.RegistrationStatus"
      ],
      "enum_values": [
        "services.trustregistry.v1.RegistrationStatus.CURRENT",
        "services.trustregistry.v1.RegistrationStatus.EXPIRED",
        "services.trustregistry.v1.RegistrationStatus.TERMINATED",
        "services.trustregistry.v1.RegistrationStatus.REVOKED",
        "services.trustregistry.v1.RegistrationStatus.NOT_FOUND"
      ]
    },
    "services/universal-wallet/v1/universal-wallet.proto": {
      "name": "services/universal-wallet/v1/universal-wallet.proto",
      "package": "services.universalwallet.v1",
      "description": "",
      "services": [
        "services.universalwallet.v1.UniversalWallet"
      ],
      "methods": [
        "services.universalwallet.v1.UniversalWallet.GetItem",
        "services.universalwallet.v1.UniversalWallet.Search",
        "services.universalwallet.v1.UniversalWallet.InsertItem",
        "services.universalwallet.v1.UniversalWallet.UpdateItem",
        "services.universalwallet.v1.UniversalWallet.DeleteItem",
        "services.universalwallet.v1.UniversalWallet.DeleteWallet",
        "services.universalwallet.v1.UniversalWallet.CreateWallet",
        "services.universalwallet.v1.UniversalWallet.GetWalletInfo",
        "services.universalwallet.v1.UniversalWallet.GetMyInfo",
        "services.universalwallet.v1.UniversalWallet.GetWalletFromExternalIdentity",
        "services.universalwallet.v1.UniversalWallet.GenerateAuthToken",
        "services.universalwallet.v1.UniversalWallet.RevokeAuthToken",
        "services.universalwallet.v1.UniversalWallet.AddExternalIdentityInit",
        "services.universalwallet.v1.UniversalWallet.AddExternalIdentityConfirm",
        "services.universalwallet.v1.UniversalWallet.RemoveExternalIdentity",
        "services.universalwallet.v1.UniversalWallet.AuthenticateInit",
        "services.universalwallet.v1.UniversalWallet.AuthenticateConfirm",
        "services.universalwallet.v1.UniversalWallet.AuthenticateResendCode",
        "services.universalwallet.v1.UniversalWallet.ListWallets",
        "services.universalwallet.v1.UniversalWallet.ListByVerificationTemplate"
      ],
      "messages": [
        "services.universalwallet.v1.SearchRequest",
        "services.universalwallet.v1.SearchResponse",
        "services.universalwallet.v1.GetItemRequest",
        "services.universalwallet.v1.GetItemResponse",
        "services.universalwallet.v1.UpdateItemRequest",
        "services.universalwallet.v1.UpdateItemResponse",
        "services.universalwallet.v1.InsertItemRequest",
        "services.universalwallet.v1.InsertItemResponse",
        "services.universalwallet.v1.DeleteItemRequest",
        "services.universalwallet.v1.DeleteItemResponse",
        "services.universalwallet.v1.DeleteWalletRequest",
        "services.universalwallet.v1.DeleteWalletResponse",
        "services.universalwallet.v1.CreateWalletRequest",
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity",
        "services.universalwallet.v1.CreateWalletResponse",
        "services.universalwallet.v1.GenerateAuthTokenRequest",
        "services.universalwallet.v1.GenerateAuthTokenResponse",
        "services.universalwallet.v1.GetWalletInfoRequest",
        "services.universalwallet.v1.GetWalletInfoResponse",
        "services.universalwallet.v1.GetMyInfoRequest",
        "services.universalwallet.v1.GetMyInfoResponse",
        "services.universalwallet.v1.RevokeAuthTokenRequest",
        "services.universalwallet.v1.RevokeAuthTokenResponse",
        "services.universalwallet.v1.ListWalletsRequest",
        "services.universalwallet.v1.ListWalletsResponse",
        "services.universalwallet.v1.GetWalletFromExternalIdentityRequest",
        "services.universalwallet.v1.GetWalletFromExternalIdentityResponse",
        "services.universalwallet.v1.AddExternalIdentityInitRequest",
        "services.universalwallet.v1.AddExternalIdentityInitResponse",
        "services.universalwallet.v1.AddExternalIdentityConfirmRequest",
        "services.universalwallet.v1.AddExternalIdentityConfirmResponse",
        "services.universalwallet.v1.RemoveExternalIdentityRequest",
        "services.universalwallet.v1.RemoveExternalIdentityResponse",
        "services.universalwallet.v1.AuthenticateInitRequest",
        "services.universalwallet.v1.AuthenticateInitResponse",
        "services.universalwallet.v1.AuthenticateResendCodeRequest",
        "services.universalwallet.v1.AuthenticateResendCodeResponse",
        "services.universalwallet.v1.AuthenticateConfirmRequest",
        "services.universalwallet.v1.AuthenticateConfirmResponse",
        "services.universalwallet.v1.ListByVerificationTemplateRequest",
        "services.universalwallet.v1.ListByVerificationTemplateResponse"
      ],
      "fields": [
        "services.universalwallet.v1.SearchRequest.query",
        "services.universalwallet.v1.SearchRequest.continuation_token",
        "services.universalwallet.v1.SearchResponse.items",
        "services.universalwallet.v1.SearchResponse.has_more_results",
        "services.universalwallet.v1.SearchResponse.continuation_token",
        "services.universalwallet.v1.GetItemRequest.item_id",
        "services.universalwallet.v1.GetItemResponse.item_json",
        "services.universalwallet.v1.GetItemResponse.item_type",
        "services.universalwallet.v1.UpdateItemRequest.item_id",
        "services.universalwallet.v1.UpdateItemRequest.item_type",
        "services.universalwallet.v1.InsertItemRequest.item_json",
        "services.universalwallet.v1.InsertItemRequest.item_type",
        "services.universalwallet.v1.InsertItemResponse.item_id",
        "services.universalwallet.v1.DeleteItemRequest.item_id",
        "services.universalwallet.v1.DeleteWalletRequest.email",
        "services.universalwallet.v1.DeleteWalletRequest.wallet_id",
        "services.universalwallet.v1.DeleteWalletRequest.did_uri",
        "services.universalwallet.v1.CreateWalletRequest.ecosystem_id",
        "services.universalwallet.v1.CreateWalletRequest.description",
        "services.universalwallet.v1.CreateWalletRequest.identity",
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.identity",
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.provider",
        "services.universalwallet.v1.CreateWalletResponse.auth_token",
        "services.universalwallet.v1.CreateWalletResponse.token_id",
        "services.universalwallet.v1.CreateWalletResponse.wallet",
        "services.universalwallet.v1.GenerateAuthTokenRequest.wallet_id",
        "services.universalwallet.v1.GenerateAuthTokenRequest.token_description",
        "services.universalwallet.v1.GenerateAuthTokenResponse.token_id",
        "services.universalwallet.v1.GenerateAuthTokenResponse.auth_token",
        "services.universalwallet.v1.GetWalletInfoRequest.wallet_id",
        "services.universalwallet.v1.GetWalletInfoResponse.wallet",
        "services.universalwallet.v1.GetMyInfoResponse.wallet",
        "services.universalwallet.v1.RevokeAuthTokenRequest.wallet_id",
        "services.universalwallet.v1.RevokeAuthTokenRequest.token_id",
        "services.universalwallet.v1.ListWalletsRequest.filter",
        "services.universalwallet.v1.ListWalletsResponse.wallets",
        "services.universalwallet.v1.GetWalletFromExternalIdentityRequest.identity",
        "services.universalwallet.v1.GetWalletFromExternalIdentityResponse.wallet",
        "services.universalwallet.v1.AddExternalIdentityInitRequest.identity",
        "services.universalwallet.v1.AddExternalIdentityInitRequest.provider",
        "services.universalwallet.v1.AddExternalIdentityInitResponse.challenge",
        "services.universalwallet.v1.AddExternalIdentityConfirmRequest.challenge",
        "services.universalwallet.v1.AddExternalIdentityConfirmRequest.response",
        "services.universalwallet.v1.RemoveExternalIdentityRequest.identity",
        "services.universalwallet.v1.AuthenticateInitRequest.identity",
        "services.universalwallet.v1.AuthenticateInitRequest.provider",
        "services.universalwallet.v1.AuthenticateInitRequest.ecosystem_id",
        "services.universalwallet.v1.AuthenticateInitResponse.challenge",
        "services.universalwallet.v1.AuthenticateResendCodeRequest.challenge",
        "services.universalwallet.v1.AuthenticateConfirmRequest.challenge",
        "services.universalwallet.v1.AuthenticateConfirmRequest.response",
        "services.universalwallet.v1.AuthenticateConfirmResponse.auth_token",
        "services.universalwallet.v1.ListByVerificationTemplateRequest.verification_template_id",
        "services.universalwallet.v1.ListByVerificationTemplateRequest.continuation_token",
        "services.universalwallet.v1.ListByVerificationTemplateResponse.items",
        "services.universalwallet.v1.ListByVerificationTemplateResponse.has_more_results",
        "services.universalwallet.v1.ListByVerificationTemplateResponse.continuation_token"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/verifiable-credentials/templates/v1/templates.proto": {
      "name": "services/verifiable-credentials/templates/v1/templates.proto",
      "package": "services.verifiablecredentials.templates.v1",
      "description": "",
      "services": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates"
      ],
      "methods": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Update",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.CreateVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.ListVerificationTemplates",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.GetVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.UpdateVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.DeleteVerificationTemplate"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.TemplateData",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions",
        "services.verifiablecredentials.templates.v1.FieldOrdering",
        "services.verifiablecredentials.templates.v1.TemplateField",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch",
        "services.verifiablecredentials.templates.v1.UriFieldData",
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest",
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse",
        "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest",
        "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateResponse",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse",
        "services.verifiablecredentials.templates.v1.VerificationTemplateField",
        "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch"
      ],
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.field_ordering",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.apple_wallet_options",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.value",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.field_ordering",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.apple_wallet_options",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.value",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse.updated_template",
        "services.verifiablecredentials.templates.v1.TemplateData.id",
        "services.verifiablecredentials.templates.v1.TemplateData.name",
        "services.verifiablecredentials.templates.v1.TemplateData.version",
        "services.verifiablecredentials.templates.v1.TemplateData.fields",
        "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.TemplateData.type",
        "services.verifiablecredentials.templates.v1.TemplateData.created_by",
        "services.verifiablecredentials.templates.v1.TemplateData.date_created",
        "services.verifiablecredentials.templates.v1.TemplateData.title",
        "services.verifiablecredentials.templates.v1.TemplateData.description",
        "services.verifiablecredentials.templates.v1.TemplateData.field_ordering",
        "services.verifiablecredentials.templates.v1.TemplateData.apple_wallet_options",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.value",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.background_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.foreground_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.label_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.primary_field",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.secondary_fields",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.auxiliary_fields",
        "services.verifiablecredentials.templates.v1.FieldOrdering.order",
        "services.verifiablecredentials.templates.v1.FieldOrdering.section",
        "services.verifiablecredentials.templates.v1.TemplateField.title",
        "services.verifiablecredentials.templates.v1.TemplateField.description",
        "services.verifiablecredentials.templates.v1.TemplateField.optional",
        "services.verifiablecredentials.templates.v1.TemplateField.type",
        "services.verifiablecredentials.templates.v1.TemplateField.uri_data",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.title",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.description",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.uri_data",
        "services.verifiablecredentials.templates.v1.UriFieldData.mime_type",
        "services.verifiablecredentials.templates.v1.UriFieldData.render_method",
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse.template",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.credential_template_id",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse.data",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse.template",
        "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest.verification_template_id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.name",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.version",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.fields",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.credential_template_id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.created_by",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.date_created",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.title",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.description",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.continuation_token",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.continuation_token",
        "services.verifiablecredentials.templates.v1.VerificationTemplateField.field_share_type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateField.usage_policy",
        "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.field_share_type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.usage_policy"
      ],
      "enums": [
        "services.verifiablecredentials.templates.v1.FieldType",
        "services.verifiablecredentials.templates.v1.UriRenderMethod",
        "services.verifiablecredentials.templates.v1.VerificationShareType"
      ],
      "enum_values": [
        "services.verifiablecredentials.templates.v1.FieldType.STRING",
        "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
        "services.verifiablecredentials.templates.v1.FieldType.BOOL",
        "services.verifiablecredentials.templates.v1.FieldType.DATETIME",
        "services.verifiablecredentials.templates.v1.FieldType.URI",
        "services.verifiablecredentials.templates.v1.UriRenderMethod.TEXT",
        "services.verifiablecredentials.templates.v1.UriRenderMethod.LINK",
        "services.verifiablecredentials.templates.v1.UriRenderMethod.INLINE_IMAGE",
        "services.verifiablecredentials.templates.v1.VerificationShareType.OPTIONAL",
        "services.verifiablecredentials.templates.v1.VerificationShareType.REQUIRED"
      ]
    },
    "services/verifiable-credentials/v1/verifiable-credentials.proto": {
      "name": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "package": "services.verifiablecredentials.v1",
      "description": "",
      "services": [
        "services.verifiablecredentials.v1.VerifiableCredential"
      ],
      "methods": [
        "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
        "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
        "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
        "services.verifiablecredentials.v1.VerifiableCredential.Send",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateCredentialOffer",
        "services.verifiablecredentials.v1.VerifiableCredential.AcceptCredential",
        "services.verifiablecredentials.v1.VerifiableCredential.RejectCredential"
      ],
      "messages": [
        "services.verifiablecredentials.v1.IssueFromTemplateRequest",
        "services.verifiablecredentials.v1.IssueFromTemplateResponse",
        "services.verifiablecredentials.v1.CreateProofRequest",
        "services.verifiablecredentials.v1.RevealTemplateAttributes",
        "services.verifiablecredentials.v1.CreateProofResponse",
        "services.verifiablecredentials.v1.VerifyProofRequest",
        "services.verifiablecredentials.v1.VerifyProofResponse",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
        "services.verifiablecredentials.v1.ValidationMessage",
        "services.verifiablecredentials.v1.SendRequest",
        "services.verifiablecredentials.v1.SendResponse",
        "services.verifiablecredentials.v1.UpdateStatusRequest",
        "services.verifiablecredentials.v1.UpdateStatusResponse",
        "services.verifiablecredentials.v1.CheckStatusRequest",
        "services.verifiablecredentials.v1.CheckStatusResponse",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest",
        "services.verifiablecredentials.v1.CreateCredentialOfferResponse",
        "services.verifiablecredentials.v1.AcceptCredentialRequest",
        "services.verifiablecredentials.v1.AcceptCredentialResponse",
        "services.verifiablecredentials.v1.RejectCredentialRequest",
        "services.verifiablecredentials.v1.RejectCredentialResponse"
      ],
      "fields": [
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.save_copy",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.expiration_date",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.include_governance",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.signature_type",
        "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_template",
        "services.verifiablecredentials.v1.CreateProofRequest.verification_template_id",
        "services.verifiablecredentials.v1.CreateProofRequest.item_id",
        "services.verifiablecredentials.v1.CreateProofRequest.document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.use_verifiable_presentation",
        "services.verifiablecredentials.v1.CreateProofRequest.nonce",
        "services.verifiablecredentials.v1.RevealTemplateAttributes.template_attributes",
        "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json",
        "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json",
        "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_results",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value",
        "services.verifiablecredentials.v1.ValidationMessage.is_valid",
        "services.verifiablecredentials.v1.ValidationMessage.messages",
        "services.verifiablecredentials.v1.SendRequest.email",
        "services.verifiablecredentials.v1.SendRequest.wallet_id",
        "services.verifiablecredentials.v1.SendRequest.did_uri",
        "services.verifiablecredentials.v1.SendRequest.phone_number",
        "services.verifiablecredentials.v1.SendRequest.send_notification",
        "services.verifiablecredentials.v1.SendRequest.document_json",
        "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.UpdateStatusRequest.revoked",
        "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.CheckStatusResponse.revoked",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.template_id",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.values_json",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.holder_binding",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.include_governance",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.generate_share_url",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.signature_type",
        "services.verifiablecredentials.v1.CreateCredentialOfferResponse.document_json",
        "services.verifiablecredentials.v1.CreateCredentialOfferResponse.share_url",
        "services.verifiablecredentials.v1.AcceptCredentialRequest.document_json",
        "services.verifiablecredentials.v1.AcceptCredentialRequest.item_id",
        "services.verifiablecredentials.v1.AcceptCredentialResponse.item_id",
        "services.verifiablecredentials.v1.AcceptCredentialResponse.document_json",
        "services.verifiablecredentials.v1.RejectCredentialRequest.document_json",
        "services.verifiablecredentials.v1.RejectCredentialRequest.item_id"
      ],
      "enums": [
        "services.verifiablecredentials.v1.SignatureType"
      ],
      "enum_values": [
        "services.verifiablecredentials.v1.SignatureType.UNSPECIFIED",
        "services.verifiablecredentials.v1.SignatureType.STANDARD",
        "services.verifiablecredentials.v1.SignatureType.EXPERIMENTAL"
      ]
    }
  },
  "services": {
    "services.connect.v1.Connect": {
      "name": "Connect",
      "full_name": "services.connect.v1.Connect",
      "description": "The Connect service provides access to Trinsic Connect, a reusable identity verification service.",
      "methods": [
        "services.connect.v1.Connect.CreateSession",
        "services.connect.v1.Connect.CancelSession",
        "services.connect.v1.Connect.GetSession",
        "services.connect.v1.Connect.ListSessions",
        "services.connect.v1.Connect.HasValidCredential"
      ]
    },
    "services.filemanagement.v1.FileManagement": {
      "name": "FileManagement",
      "full_name": "services.filemanagement.v1.FileManagement",
      "description": "",
      "methods": [
        "services.filemanagement.v1.FileManagement.UploadFile",
        "services.filemanagement.v1.FileManagement.GetFile",
        "services.filemanagement.v1.FileManagement.DeleteFile",
        "services.filemanagement.v1.FileManagement.ListFiles",
        "services.filemanagement.v1.FileManagement.GetStorageStats"
      ]
    },
    "services.provider.v1.AccessManagement": {
      "name": "AccessManagement",
      "full_name": "services.provider.v1.AccessManagement",
      "description": "Access Management service provides methods to manage access to ecosystem resources\nsuch by assigning roles and permissions to wallet accounts",
      "methods": [
        "services.provider.v1.AccessManagement.AddRoleAssignment",
        "services.provider.v1.AccessManagement.RemoveRoleAssignment",
        "services.provider.v1.AccessManagement.ListRoleAssignments",
        "services.provider.v1.AccessManagement.ListAvailableRoles"
      ]
    },
    "services.provider.v1.Provider": {
      "name": "Provider",
      "full_name": "services.provider.v1.Provider",
      "description": "",
      "methods": [
        "services.provider.v1.Provider.CreateEcosystem",
        "services.provider.v1.Provider.GetOberonKey",
        "services.provider.v1.Provider.UpgradeDID",
        "services.provider.v1.Provider.SearchWalletConfigurations"
      ]
    },
    "services.trustregistry.v1.TrustRegistry": {
      "name": "TrustRegistry",
      "full_name": "services.trustregistry.v1.TrustRegistry",
      "description": "",
      "methods": [
        "services.trustregistry.v1.TrustRegistry.RegisterMember",
        "services.trustregistry.v1.TrustRegistry.UnregisterMember",
        "services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus",
        "services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers",
        "services.trustregistry.v1.TrustRegistry.GetMember"
      ]
    },
    "services.universalwallet.v1.UniversalWallet": {
      "name": "UniversalWallet",
      "full_name": "services.universalwallet.v1.UniversalWallet",
      "description": "Service for managing wallets",
      "methods": [
        "services.universalwallet.v1.UniversalWallet.GetItem",
        "services.universalwallet.v1.UniversalWallet.Search",
        "services.universalwallet.v1.UniversalWallet.InsertItem",
        "services.universalwallet.v1.UniversalWallet.UpdateItem",
        "services.universalwallet.v1.UniversalWallet.DeleteItem",
        "services.universalwallet.v1.UniversalWallet.DeleteWallet",
        "services.universalwallet.v1.UniversalWallet.CreateWallet",
        "services.universalwallet.v1.UniversalWallet.GetWalletInfo",
        "services.universalwallet.v1.UniversalWallet.GetMyInfo",
        "services.universalwallet.v1.UniversalWallet.GetWalletFromExternalIdentity",
        "services.universalwallet.v1.UniversalWallet.GenerateAuthToken",
        "services.universalwallet.v1.UniversalWallet.RevokeAuthToken",
        "services.universalwallet.v1.UniversalWallet.AddExternalIdentityInit",
        "services.universalwallet.v1.UniversalWallet.AddExternalIdentityConfirm",
        "services.universalwallet.v1.UniversalWallet.RemoveExternalIdentity",
        "services.universalwallet.v1.UniversalWallet.AuthenticateInit",
        "services.universalwallet.v1.UniversalWallet.AuthenticateConfirm",
        "services.universalwallet.v1.UniversalWallet.AuthenticateResendCode",
        "services.universalwallet.v1.UniversalWallet.ListWallets",
        "services.universalwallet.v1.UniversalWallet.ListByVerificationTemplate"
      ]
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates": {
      "name": "CredentialTemplates",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates",
      "description": "",
      "methods": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Update",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.CreateVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.ListVerificationTemplates",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.GetVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.UpdateVerificationTemplate",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.DeleteVerificationTemplate"
      ]
    },
    "services.verifiablecredentials.v1.VerifiableCredential": {
      "name": "VerifiableCredential",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential",
      "description": "",
      "methods": [
        "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
        "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
        "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
        "services.verifiablecredentials.v1.VerifiableCredential.Send",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateCredentialOffer",
        "services.verifiablecredentials.v1.VerifiableCredential.AcceptCredential",
        "services.verifiablecredentials.v1.VerifiableCredential.RejectCredential"
      ]
    }
  },
  "methods": {
    "services.connect.v1.Connect.CancelSession": {
      "name": "CancelSession",
      "full_name": "services.connect.v1.Connect.CancelSession",
      "input_type": "services.connect.v1.CancelSessionRequest",
      "output_type": "services.connect.v1.CancelSessionResponse",
      "description": "Cancel an IDVSession",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.connect.v1.Connect.CreateSession": {
      "name": "CreateSession",
      "full_name": "services.connect.v1.Connect.CreateSession",
      "input_type": "services.connect.v1.CreateSessionRequest",
      "output_type": "services.connect.v1.CreateSessionResponse",
      "description": "Create an IDVSession",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.connect.v1.Connect.GetSession": {
      "name": "GetSession",
      "full_name": "services.connect.v1.Connect.GetSession",
      "input_type": "services.connect.v1.GetSessionRequest",
      "output_type": "services.connect.v1.GetSessionResponse",
      "description": "Get an IDVSession",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.connect.v1.Connect.HasValidCredential": {
      "name": "HasValidCredential",
      "full_name": "services.connect.v1.Connect.HasValidCredential",
      "input_type": "services.connect.v1.HasValidCredentialRequest",
      "output_type": "services.connect.v1.HasValidCredentialResponse",
      "description": "Checks if the identity provided in the request has a wallet containing a valid reusable credential",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.connect.v1.Connect.ListSessions": {
      "name": "ListSessions",
      "full_name": "services.connect.v1.Connect.ListSessions",
      "input_type": "services.connect.v1.ListSessionsRequest",
      "output_type": "services.connect.v1.ListSessionsResponse",
      "description": "List IDVSessions created by the calling wallet",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.filemanagement.v1.FileManagement.DeleteFile": {
      "name": "DeleteFile",
      "full_name": "services.filemanagement.v1.FileManagement.DeleteFile",
      "input_type": "services.filemanagement.v1.DeleteFileRequest",
      "output_type": "services.filemanagement.v1.DeleteFileResponse",
      "description": "Delete a file by its ID",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.filemanagement.v1.FileManagement.GetFile": {
      "name": "GetFile",
      "full_name": "services.filemanagement.v1.FileManagement.GetFile",
      "input_type": "services.filemanagement.v1.GetFileRequest",
      "output_type": "services.filemanagement.v1.GetFileResponse",
      "description": "Fetch information about a file by its ID",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.filemanagement.v1.FileManagement.GetStorageStats": {
      "name": "GetStorageStats",
      "full_name": "services.filemanagement.v1.FileManagement.GetStorageStats",
      "input_type": "services.filemanagement.v1.GetStorageStatsRequest",
      "output_type": "services.filemanagement.v1.GetStorageStatsResponse",
      "description": "Get statistics about files uploaded by the calling account",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.filemanagement.v1.FileManagement.ListFiles": {
      "name": "ListFiles",
      "full_name": "services.filemanagement.v1.FileManagement.ListFiles",
      "input_type": "services.filemanagement.v1.ListFilesRequest",
      "output_type": "services.filemanagement.v1.ListFilesResponse",
      "description": "List files the calling account has uploaded",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.filemanagement.v1.FileManagement.UploadFile": {
      "name": "UploadFile",
      "full_name": "services.filemanagement.v1.FileManagement.UploadFile",
      "input_type": "services.filemanagement.v1.UploadFileRequest",
      "output_type": "services.filemanagement.v1.UploadFileResponse",
      "description": "Upload a file to Trinsic's CDN",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.AccessManagement.AddRoleAssignment": {
      "name": "AddRoleAssignment",
      "full_name": "services.provider.v1.AccessManagement.AddRoleAssignment",
      "input_type": "services.provider.v1.AddRoleAssignmentRequest",
      "output_type": "services.provider.v1.AddRoleAssignmentResponse",
      "description": "Adds a role assignment to an account",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.AccessManagement.ListAvailableRoles": {
      "name": "ListAvailableRoles",
      "full_name": "services.provider.v1.AccessManagement.ListAvailableRoles",
      "input_type": "services.provider.v1.ListAvailableRolesRequest",
      "output_type": "services.provider.v1.ListAvailableRolesResponse",
      "description": "List the roles available in the ecosystem",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.AccessManagement.ListRoleAssignments": {
      "name": "ListRoleAssignments",
      "full_name": "services.provider.v1.AccessManagement.ListRoleAssignments",
      "input_type": "services.provider.v1.ListRoleAssignmentsRequest",
      "output_type": "services.provider.v1.ListRoleAssignmentsResponse",
      "description": "List the role assignments for the given account",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.AccessManagement.RemoveRoleAssignment": {
      "name": "RemoveRoleAssignment",
      "full_name": "services.provider.v1.AccessManagement.RemoveRoleAssignment",
      "input_type": "services.provider.v1.RemoveRoleAssignmentRequest",
      "output_type": "services.provider.v1.RemoveRoleAssignmentResponse",
      "description": "Removes a role assignment from the account",
      "options": {
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.Provider.CreateEcosystem": {
      "name": "CreateEcosystem",
      "full_name": "services.provider.v1.Provider.CreateEcosystem",
      "input_type": "services.provider.v1.CreateEcosystemRequest",
      "output_type": "services.provider.v1.CreateEcosystemResponse",
      "description": "Create new ecosystem and assign the authenticated user as owner",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.Provider.GetOberonKey": {
      "name": "GetOberonKey",
      "full_name": "services.provider.v1.Provider.GetOberonKey",
      "input_type": "services.provider.v1.GetOberonKeyRequest",
      "output_type": "services.provider.v1.GetOberonKeyResponse",
      "description": "Returns the public key being used to create/verify oberon tokens",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.provider.v1.Provider.SearchWalletConfigurations": {
      "name": "SearchWalletConfigurations",
      "full_name": "services.provider.v1.Provider.SearchWalletConfigurations",
      "input_type": "services.provider.v1.SearchWalletConfigurationsRequest",
      "output_type": "services.provider.v1.SearchWalletConfigurationResponse",
      "description": "Search for issuers/providers/verifiers in the current ecosystem",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.provider.v1.Provider.UpgradeDID": {
      "name": "UpgradeDID",
      "full_name": "services.provider.v1.Provider.UpgradeDID",
      "input_type": "services.provider.v1.UpgradeDidRequest",
      "output_type": "services.provider.v1.UpgradeDidResponse",
      "description": "Upgrade a wallet's DID from `did:key` to another method",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.trustregistry.v1.TrustRegistry.GetMember": {
      "name": "GetMember",
      "full_name": "services.trustregistry.v1.TrustRegistry.GetMember",
      "input_type": "services.trustregistry.v1.GetMemberRequest",
      "output_type": "services.trustregistry.v1.GetMemberResponse",
      "description": "Get member for a given did in a trust registry",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus": {
      "name": "GetMemberAuthorizationStatus",
      "full_name": "services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus",
      "input_type": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest",
      "output_type": "services.trustregistry.v1.GetMemberAuthorizationStatusResponse",
      "description": "Fetch the status of a member for a given credential schema in a trust registry",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers": {
      "name": "ListAuthorizedMembers",
      "full_name": "services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers",
      "input_type": "services.trustregistry.v1.ListAuthorizedMembersRequest",
      "output_type": "services.trustregistry.v1.ListAuthorizedMembersResponse",
      "description": "Fetch the ecosystem's authorized issuers and the respective templates against which it can issue",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.trustregistry.v1.TrustRegistry.RegisterMember": {
      "name": "RegisterMember",
      "full_name": "services.trustregistry.v1.TrustRegistry.RegisterMember",
      "input_type": "services.trustregistry.v1.RegisterMemberRequest",
      "output_type": "services.trustregistry.v1.RegisterMemberResponse",
      "description": "Register an authoritative issuer for a credential schema",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.trustregistry.v1.TrustRegistry.UnregisterMember": {
      "name": "UnregisterMember",
      "full_name": "services.trustregistry.v1.TrustRegistry.UnregisterMember",
      "input_type": "services.trustregistry.v1.UnregisterMemberRequest",
      "output_type": "services.trustregistry.v1.UnregisterMemberResponse",
      "description": "Removes an authoritative issuer for a credential schema from the trust registry",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.AddExternalIdentityConfirm": {
      "name": "AddExternalIdentityConfirm",
      "full_name": "services.universalwallet.v1.UniversalWallet.AddExternalIdentityConfirm",
      "input_type": "services.universalwallet.v1.AddExternalIdentityConfirmRequest",
      "output_type": "services.universalwallet.v1.AddExternalIdentityConfirmResponse",
      "description": "Confirm identity added to the current wallet using `AddExternalIdentityInit`",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.AddExternalIdentityInit": {
      "name": "AddExternalIdentityInit",
      "full_name": "services.universalwallet.v1.UniversalWallet.AddExternalIdentityInit",
      "input_type": "services.universalwallet.v1.AddExternalIdentityInitRequest",
      "output_type": "services.universalwallet.v1.AddExternalIdentityInitResponse",
      "description": "Add new external identity to the current wallet, such as email, sms, ethereum address, etc.\nThis identity ownership must be confirmed using `AddIdentityConfirm` via OTP, signature, etc.",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateConfirm": {
      "name": "AuthenticateConfirm",
      "full_name": "services.universalwallet.v1.UniversalWallet.AuthenticateConfirm",
      "input_type": "services.universalwallet.v1.AuthenticateConfirmRequest",
      "output_type": "services.universalwallet.v1.AuthenticateConfirmResponse",
      "description": "Confirm sign-in to an already existing wallet and return authentication token",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateInit": {
      "name": "AuthenticateInit",
      "full_name": "services.universalwallet.v1.UniversalWallet.AuthenticateInit",
      "input_type": "services.universalwallet.v1.AuthenticateInitRequest",
      "output_type": "services.universalwallet.v1.AuthenticateInitResponse",
      "description": "Sign-in to an already existing wallet, using an identity added that was previously registered\nThis endpoint does not require authentication, and will return a challenge to be signed or verified",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.AuthenticateResendCode": {
      "name": "AuthenticateResendCode",
      "full_name": "services.universalwallet.v1.UniversalWallet.AuthenticateResendCode",
      "input_type": "services.universalwallet.v1.AuthenticateResendCodeRequest",
      "output_type": "services.universalwallet.v1.AuthenticateResendCodeResponse",
      "description": "Resend previous authentication code",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.CreateWallet": {
      "name": "CreateWallet",
      "full_name": "services.universalwallet.v1.UniversalWallet.CreateWallet",
      "input_type": "services.universalwallet.v1.CreateWalletRequest",
      "output_type": "services.universalwallet.v1.CreateWalletResponse",
      "description": "Create a new wallet and generate an auth token for access",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.DeleteItem": {
      "name": "DeleteItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.DeleteItem",
      "input_type": "services.universalwallet.v1.DeleteItemRequest",
      "output_type": "services.universalwallet.v1.DeleteItemResponse",
      "description": "Delete an item from the wallet permanently",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.DeleteWallet": {
      "name": "DeleteWallet",
      "full_name": "services.universalwallet.v1.UniversalWallet.DeleteWallet",
      "input_type": "services.universalwallet.v1.DeleteWalletRequest",
      "output_type": "services.universalwallet.v1.DeleteWalletResponse",
      "description": "Delete a wallet and its credentials",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.GenerateAuthToken": {
      "name": "GenerateAuthToken",
      "full_name": "services.universalwallet.v1.UniversalWallet.GenerateAuthToken",
      "input_type": "services.universalwallet.v1.GenerateAuthTokenRequest",
      "output_type": "services.universalwallet.v1.GenerateAuthTokenResponse",
      "description": "Generate new token for a given wallet and add it to the collection of known auth tokens.\nThis endpoint requires authentication and will return a new token ID and auth token.\nUse this endpoint if you want to authorize another device, without having to share your\nexisting auth token.",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.GetItem": {
      "name": "GetItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.GetItem",
      "input_type": "services.universalwallet.v1.GetItemRequest",
      "output_type": "services.universalwallet.v1.GetItemResponse",
      "description": "Retrieve an item from the wallet with a given item identifier",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.GetMyInfo": {
      "name": "GetMyInfo",
      "full_name": "services.universalwallet.v1.UniversalWallet.GetMyInfo",
      "input_type": "services.universalwallet.v1.GetMyInfoRequest",
      "output_type": "services.universalwallet.v1.GetMyInfoResponse",
      "description": "Retrieve wallet details and configuration about the currently authenticated wallet",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.universalwallet.v1.UniversalWallet.GetWalletFromExternalIdentity": {
      "name": "GetWalletFromExternalIdentity",
      "full_name": "services.universalwallet.v1.UniversalWallet.GetWalletFromExternalIdentity",
      "input_type": "services.universalwallet.v1.GetWalletFromExternalIdentityRequest",
      "output_type": "services.universalwallet.v1.GetWalletFromExternalIdentityResponse",
      "description": "Retrieve information from an ecosystem wallet by searching for its external identity (email or phone)",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.GetWalletInfo": {
      "name": "GetWalletInfo",
      "full_name": "services.universalwallet.v1.UniversalWallet.GetWalletInfo",
      "input_type": "services.universalwallet.v1.GetWalletInfoRequest",
      "output_type": "services.universalwallet.v1.GetWalletInfoResponse",
      "description": "Retrieve wallet details and configuration",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.InsertItem": {
      "name": "InsertItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.InsertItem",
      "input_type": "services.universalwallet.v1.InsertItemRequest",
      "output_type": "services.universalwallet.v1.InsertItemResponse",
      "description": "Insert an item into the wallet",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.ListByVerificationTemplate": {
      "name": "ListByVerificationTemplate",
      "full_name": "services.universalwallet.v1.UniversalWallet.ListByVerificationTemplate",
      "input_type": "services.universalwallet.v1.ListByVerificationTemplateRequest",
      "output_type": "services.universalwallet.v1.ListByVerificationTemplateResponse",
      "description": "List credentials which match a given verification template",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.ListWallets": {
      "name": "ListWallets",
      "full_name": "services.universalwallet.v1.UniversalWallet.ListWallets",
      "input_type": "services.universalwallet.v1.ListWalletsRequest",
      "output_type": "services.universalwallet.v1.ListWalletsResponse",
      "description": "List all wallets in the ecosystem",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.RemoveExternalIdentity": {
      "name": "RemoveExternalIdentity",
      "full_name": "services.universalwallet.v1.UniversalWallet.RemoveExternalIdentity",
      "input_type": "services.universalwallet.v1.RemoveExternalIdentityRequest",
      "output_type": "services.universalwallet.v1.RemoveExternalIdentityResponse",
      "description": "Remove an external identity from the current wallet",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.RevokeAuthToken": {
      "name": "RevokeAuthToken",
      "full_name": "services.universalwallet.v1.UniversalWallet.RevokeAuthToken",
      "input_type": "services.universalwallet.v1.RevokeAuthTokenRequest",
      "output_type": "services.universalwallet.v1.RevokeAuthTokenResponse",
      "description": "Revokes a previously issued auth token and updates the collection of known auth tokens.\nThis endpoint requires authentication.",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.Search": {
      "name": "Search",
      "full_name": "services.universalwallet.v1.UniversalWallet.Search",
      "input_type": "services.universalwallet.v1.SearchRequest",
      "output_type": "services.universalwallet.v1.SearchResponse",
      "description": "Search the wallet using a SQL syntax",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.universalwallet.v1.UniversalWallet.UpdateItem": {
      "name": "UpdateItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.UpdateItem",
      "input_type": "services.universalwallet.v1.UpdateItemRequest",
      "output_type": "services.universalwallet.v1.UpdateItemResponse",
      "description": "Update an item in the wallet",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Create": {
      "name": "Create",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
      "input_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
      "description": "Create a credential template in the current ecosystem",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.CreateVerificationTemplate": {
      "name": "CreateVerificationTemplate",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.CreateVerificationTemplate",
      "input_type": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse",
      "description": "Create/update verification templates",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete": {
      "name": "Delete",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete",
      "input_type": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
      "description": "Delete a credential template from the current ecosystem by ID",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.DeleteVerificationTemplate": {
      "name": "DeleteVerificationTemplate",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.DeleteVerificationTemplate",
      "input_type": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateResponse",
      "description": "",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Get": {
      "name": "Get",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
      "input_type": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
      "description": "Fetch a credential template by ID",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.GetVerificationTemplate": {
      "name": "GetVerificationTemplate",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.GetVerificationTemplate",
      "input_type": "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse",
      "description": "",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.List": {
      "name": "List",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
      "input_type": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
      "output_type": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
      "description": "Search credential templates using SQL, returning strongly-typed template data",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.ListVerificationTemplates": {
      "name": "ListVerificationTemplates",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.ListVerificationTemplates",
      "input_type": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest",
      "output_type": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse",
      "description": "",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Search": {
      "name": "Search",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
      "input_type": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
      "output_type": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
      "description": "Search credential templates using SQL, returning raw JSON data",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Update": {
      "name": "Update",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Update",
      "input_type": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse",
      "description": "Update metadata of a template",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.UpdateVerificationTemplate": {
      "name": "UpdateVerificationTemplate",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.UpdateVerificationTemplate",
      "input_type": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse",
      "description": "",
      "options": {
        "google.api.http": ".google.api.HttpRule",
        "services.options.sdk_template_option": ".services.options.SdkTemplateOption"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.AcceptCredential": {
      "name": "AcceptCredential",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.AcceptCredential",
      "input_type": "services.verifiablecredentials.v1.AcceptCredentialRequest",
      "output_type": "services.verifiablecredentials.v1.AcceptCredentialResponse",
      "description": "Accept an offer to exchange a credential",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus": {
      "name": "CheckStatus",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
      "input_type": "services.verifiablecredentials.v1.CheckStatusRequest",
      "output_type": "services.verifiablecredentials.v1.CheckStatusResponse",
      "description": "Check credential status in the revocation registry",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateCredentialOffer": {
      "name": "CreateCredentialOffer",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.CreateCredentialOffer",
      "input_type": "services.verifiablecredentials.v1.CreateCredentialOfferRequest",
      "output_type": "services.verifiablecredentials.v1.CreateCredentialOfferResponse",
      "description": "Create credential offer",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateProof": {
      "name": "CreateProof",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
      "input_type": "services.verifiablecredentials.v1.CreateProofRequest",
      "output_type": "services.verifiablecredentials.v1.CreateProofResponse",
      "description": "Create a proof from a signed document that is a valid\nverifiable credential and contains a signature from which a proof can be derived.",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate": {
      "name": "IssueFromTemplate",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
      "input_type": "services.verifiablecredentials.v1.IssueFromTemplateRequest",
      "output_type": "services.verifiablecredentials.v1.IssueFromTemplateResponse",
      "description": "Sign and issue a verifiable credential from a pre-defined template.\nThis process will also add schema validation and\nrevocation registry values to the credential.",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.RejectCredential": {
      "name": "RejectCredential",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.RejectCredential",
      "input_type": "services.verifiablecredentials.v1.RejectCredentialRequest",
      "output_type": "services.verifiablecredentials.v1.RejectCredentialResponse",
      "description": "Reject an offer to exchange a credential",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Send": {
      "name": "Send",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.Send",
      "input_type": "services.verifiablecredentials.v1.SendRequest",
      "output_type": "services.verifiablecredentials.v1.SendResponse",
      "description": "Sends a document directly to a user's email within the given ecosystem",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus": {
      "name": "UpdateStatus",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
      "input_type": "services.verifiablecredentials.v1.UpdateStatusRequest",
      "output_type": "services.verifiablecredentials.v1.UpdateStatusResponse",
      "description": "Update credential status by setting the revocation value",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    },
    "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof": {
      "name": "VerifyProof",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
      "input_type": "services.verifiablecredentials.v1.VerifyProofRequest",
      "output_type": "services.verifiablecredentials.v1.VerifyProofResponse",
      "description": "Verifies a proof by checking the signature value, and if possible schema validation,\nrevocation status, and issuer status against a trust registry",
      "options": {
        "google.api.http": ".google.api.HttpRule"
      }
    }
  },
  "messages": {
    "google.api.CustomHttpPattern": {
      "name": "CustomHttpPattern",
      "full_name": "google.api.CustomHttpPattern",
      "description": "A custom pattern is used for defining custom HTTP verb.",
      "fields": [
        "google.api.CustomHttpPattern.kind",
        "google.api.CustomHttpPattern.path"
      ],
      "messages": [],
      "enums": []
    },
    "google.api.Http": {
      "name": "Http",
      "full_name": "google.api.Http",
      "description": "Defines the HTTP configuration for an API service. It contains a list of\n[HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\nto one or more HTTP REST API methods.",
      "fields": [
        "google.api.Http.rules",
        "google.api.Http.fully_decode_reserved_expansion"
      ],
      "messages": [],
      "enums": []
    },
    "google.api.HttpRule": {
      "name": "HttpRule",
      "full_name": "google.api.HttpRule",
      "description": "# gRPC Transcoding\n\ngRPC Transcoding is a feature for mapping between a gRPC method and one or\nmore HTTP REST endpoints. It allows developers to build a single API service\nthat supports both gRPC APIs and REST APIs. Many systems, including [Google\nAPIs](https://github.com/googleapis/googleapis),\n[Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC\nGateway](https://github.com/grpc-ecosystem/grpc-gateway),\nand [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature\nand use it for large scale production services.\n\n`HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies\nhow different portions of the gRPC request message are mapped to the URL\npath, URL query parameters, and HTTP request body. It also controls how the\ngRPC response message is mapped to the HTTP response body. `HttpRule` is\ntypically specified as an `google.api.http` annotation on the gRPC method.\n\nEach mapping specifies a URL path template and an HTTP method. The path\ntemplate may refer to one or more fields in the gRPC request message, as long\nas each field is a non-repeated field with a primitive (non-message) type.\nThe path template controls how fields of the request message are mapped to\nthe URL path.\n\nExample:\n\n    service Messaging {\n      rpc GetMessage(GetMessageRequest) returns (Message) {\n        option (google.api.http) = {\n            get: \"/v1/{name=messages/*}\"\n        };\n      }\n    }\n    message GetMessageRequest {\n      string name = 1; // Mapped to URL path.\n    }\n    message Message {\n      string text = 1; // The resource content.\n    }\n\nThis enables an HTTP REST to gRPC mapping as below:\n\nHTTP | gRPC\n-----|-----\n`GET /v1/messages/123456`  | `GetMessage(name: \"messages/123456\")`\n\nAny fields in the request message which are not bound by the path template\nautomatically become HTTP query parameters if there is no HTTP request body.\nFor example:\n\n    service Messaging {\n      rpc GetMessage(GetMessageRequest) returns (Message) {\n        option (google.api.http) = {\n            get:\"/v1/messages/{message_id}\"\n        };\n      }\n    }\n    message GetMessageRequest {\n      message SubMessage {\n        string subfield = 1;\n      }\n      string message_id = 1; // Mapped to URL path.\n      int64 revision = 2;    // Mapped to URL query parameter `revision`.\n      SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.\n    }\n\nThis enables a HTTP JSON to RPC mapping as below:\n\nHTTP | gRPC\n-----|-----\n`GET /v1/messages/123456?revision=2\u0026sub.subfield=foo` |\n`GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield:\n\"foo\"))`\n\nNote that fields which are mapped to URL query parameters must have a\nprimitive type or a repeated primitive type or a non-repeated message type.\nIn the case of a repeated type, the parameter can be repeated in the URL\nas `...?param=A\u0026param=B`. In the case of a message type, each field of the\nmessage is mapped to a separate parameter, such as\n`...?foo.a=A\u0026foo.b=B\u0026foo.c=C`.\n\nFor HTTP methods that allow a request body, the `body` field\nspecifies the mapping. Consider a REST update method on the\nmessage resource collection:\n\n    service Messaging {\n      rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n        option (google.api.http) = {\n          patch: \"/v1/messages/{message_id}\"\n          body: \"message\"\n        };\n      }\n    }\n    message UpdateMessageRequest {\n      string message_id = 1; // mapped to the URL\n      Message message = 2;   // mapped to the body\n    }\n\nThe following HTTP JSON to RPC mapping is enabled, where the\nrepresentation of the JSON in the request body is determined by\nprotos JSON encoding:\n\nHTTP | gRPC\n-----|-----\n`PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n\"123456\" message { text: \"Hi!\" })`\n\nThe special name `*` can be used in the body mapping to define that\nevery field not bound by the path template should be mapped to the\nrequest body.  This enables the following alternative definition of\nthe update method:\n\n    service Messaging {\n      rpc UpdateMessage(Message) returns (Message) {\n        option (google.api.http) = {\n          patch: \"/v1/messages/{message_id}\"\n          body: \"*\"\n        };\n      }\n    }\n    message Message {\n      string message_id = 1;\n      string text = 2;\n    }\n\n\nThe following HTTP JSON to RPC mapping is enabled:\n\nHTTP | gRPC\n-----|-----\n`PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n\"123456\" text: \"Hi!\")`\n\nNote that when using `*` in the body mapping, it is not possible to\nhave HTTP parameters, as all fields not bound by the path end in\nthe body. This makes this option more rarely used in practice when\ndefining REST APIs. The common usage of `*` is in custom methods\nwhich don't use the URL at all for transferring data.\n\nIt is possible to define multiple HTTP methods for one RPC by using\nthe `additional_bindings` option. Example:\n\n    service Messaging {\n      rpc GetMessage(GetMessageRequest) returns (Message) {\n        option (google.api.http) = {\n          get: \"/v1/messages/{message_id}\"\n          additional_bindings {\n            get: \"/v1/users/{user_id}/messages/{message_id}\"\n          }\n        };\n      }\n    }\n    message GetMessageRequest {\n      string message_id = 1;\n      string user_id = 2;\n    }\n\nThis enables the following two alternative HTTP JSON to RPC mappings:\n\nHTTP | gRPC\n-----|-----\n`GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n`GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id:\n\"123456\")`\n\n## Rules for HTTP mapping\n\n1. Leaf request fields (recursive expansion nested messages in the request\n   message) are classified into three categories:\n   - Fields referred by the path template. They are passed via the URL path.\n   - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They are passed via the HTTP\n     request body.\n   - All other fields are passed via the URL query parameters, and the\n     parameter name is the field path in the request message. A repeated\n     field can be represented as multiple query parameters under the same\n     name.\n 2. If [HttpRule.body][google.api.HttpRule.body] is \"*\", there is no URL query parameter, all fields\n    are passed via URL path and HTTP request body.\n 3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP request body, all\n    fields are passed via URL path and URL query parameters.\n\n### Path template syntax\n\n    Template = \"/\" Segments [ Verb ] ;\n    Segments = Segment { \"/\" Segment } ;\n    Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n    Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n    FieldPath = IDENT { \".\" IDENT } ;\n    Verb     = \":\" LITERAL ;\n\nThe syntax `*` matches a single URL path segment. The syntax `**` matches\nzero or more URL path segments, which must be the last part of the URL path\nexcept the `Verb`.\n\nThe syntax `Variable` matches part of the URL path as specified by its\ntemplate. A variable template must not contain other variables. If a variable\nmatches a single path segment, its template may be omitted, e.g. `{var}`\nis equivalent to `{var=*}`.\n\nThe syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`\ncontains any reserved character, such characters should be percent-encoded\nbefore the matching.\n\nIf a variable contains exactly one path segment, such as `\"{var}\"` or\n`\"{var=*}\"`, when such a variable is expanded into a URL path on the client\nside, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The\nserver side does the reverse decoding. Such variables show up in the\n[Discovery\nDocument](https://developers.google.com/discovery/v1/reference/apis) as\n`{var}`.\n\nIf a variable contains multiple path segments, such as `\"{var=foo/*}\"`\nor `\"{var=**}\"`, when such a variable is expanded into a URL path on the\nclient side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.\nThe server side does the reverse decoding, except \"%2F\" and \"%2f\" are left\nunchanged. Such variables show up in the\n[Discovery\nDocument](https://developers.google.com/discovery/v1/reference/apis) as\n`{+var}`.\n\n## Using gRPC API Service Configuration\n\ngRPC API Service Configuration (service config) is a configuration language\nfor configuring a gRPC service to become a user-facing product. The\nservice config is simply the YAML representation of the `google.api.Service`\nproto message.\n\nAs an alternative to annotating your proto file, you can configure gRPC\ntranscoding in your service config YAML files. You do this by specifying a\n`HttpRule` that maps the gRPC method to a REST endpoint, achieving the same\neffect as the proto annotation. This can be particularly useful if you\nhave a proto that is reused in multiple services. Note that any transcoding\nspecified in the service config will override any matching transcoding\nconfiguration in the proto.\n\nExample:\n\n    http:\n      rules:\n        # Selects a gRPC method and applies HttpRule to it.\n        - selector: example.v1.Messaging.GetMessage\n          get: /v1/messages/{message_id}/{sub.subfield}\n\n## Special notes\n\nWhen gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the\nproto to JSON conversion must follow the [proto3\nspecification](https://developers.google.com/protocol-buffers/docs/proto3#json).\n\nWhile the single segment variable follows the semantics of\n[RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\nExpansion, the multi segment variable **does not** follow RFC 6570 Section\n3.2.3 Reserved Expansion. The reason is that the Reserved Expansion\ndoes not expand special characters like `?` and `#`, which would lead\nto invalid URLs. As the result, gRPC Transcoding uses a custom encoding\nfor multi segment variables.\n\nThe path variables **must not** refer to any repeated or mapped field,\nbecause client libraries are not capable of handling such variable expansion.\n\nThe path variables **must not** capture the leading \"/\" character. The reason\nis that the most common use case \"{var}\" does not capture the leading \"/\"\ncharacter. For consistency, all path variables must share the same behavior.\n\nRepeated message fields must not be mapped to URL query parameters, because\nno client library can support such complicated mapping.\n\nIf an API needs to use a JSON array for request or response body, it can map\nthe request or response body to a repeated field. However, some gRPC\nTranscoding implementations may not support this feature.",
      "fields": [
        "google.api.HttpRule.selector",
        "google.api.HttpRule.get",
        "google.api.HttpRule.put",
        "google.api.HttpRule.post",
        "google.api.HttpRule.delete",
        "google.api.HttpRule.patch",
        "google.api.HttpRule.custom",
        "google.api.HttpRule.body",
        "google.api.HttpRule.response_body",
        "google.api.HttpRule.additional_bindings"
      ],
      "messages": [],
      "enums": []
    },
    "sdk.options.v1.TrinsicOptions": {
      "name": "TrinsicOptions",
      "full_name": "sdk.options.v1.TrinsicOptions",
      "description": "Configuration for Trinsic SDK Services",
      "fields": [
        "sdk.options.v1.TrinsicOptions.server_endpoint",
        "sdk.options.v1.TrinsicOptions.server_port",
        "sdk.options.v1.TrinsicOptions.server_use_tls",
        "sdk.options.v1.TrinsicOptions.auth_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountDetails": {
      "name": "AccountDetails",
      "full_name": "services.account.v1.AccountDetails",
      "description": "Account registration details",
      "fields": [
        "services.account.v1.AccountDetails.name",
        "services.account.v1.AccountDetails.email",
        "services.account.v1.AccountDetails.sms"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountProfile": {
      "name": "AccountProfile",
      "full_name": "services.account.v1.AccountProfile",
      "description": "Device profile containing sensitive authentication data.\nThis information should be stored securely",
      "fields": [
        "services.account.v1.AccountProfile.profile_type",
        "services.account.v1.AccountProfile.auth_data",
        "services.account.v1.AccountProfile.auth_token",
        "services.account.v1.AccountProfile.protection"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.TokenProtection": {
      "name": "TokenProtection",
      "full_name": "services.account.v1.TokenProtection",
      "description": "Token protection info",
      "fields": [
        "services.account.v1.TokenProtection.enabled",
        "services.account.v1.TokenProtection.method"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.WalletAuthToken": {
      "name": "WalletAuthToken",
      "full_name": "services.account.v1.WalletAuthToken",
      "description": "Information about authentication tokens for a wallet",
      "fields": [
        "services.account.v1.WalletAuthToken.id",
        "services.account.v1.WalletAuthToken.description",
        "services.account.v1.WalletAuthToken.date_created"
      ],
      "messages": [],
      "enums": []
    },
    "services.common.v1.Nonce": {
      "name": "Nonce",
      "full_name": "services.common.v1.Nonce",
      "description": "Nonce used to generate an oberon proof",
      "fields": [
        "services.common.v1.Nonce.timestamp",
        "services.common.v1.Nonce.request_hash"
      ],
      "messages": [],
      "enums": []
    },
    "services.common.v1.TrinsicClientOptions": {
      "name": "TrinsicClientOptions",
      "full_name": "services.common.v1.TrinsicClientOptions",
      "description": "",
      "fields": [
        "services.common.v1.TrinsicClientOptions.server_endpoint",
        "services.common.v1.TrinsicClientOptions.server_port",
        "services.common.v1.TrinsicClientOptions.server_use_tls",
        "services.common.v1.TrinsicClientOptions.auth_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.CancelSessionRequest": {
      "name": "CancelSessionRequest",
      "full_name": "services.connect.v1.CancelSessionRequest",
      "description": "Request to cancel an Identity Verification Session",
      "fields": [
        "services.connect.v1.CancelSessionRequest.idv_session_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.CancelSessionResponse": {
      "name": "CancelSessionResponse",
      "full_name": "services.connect.v1.CancelSessionResponse",
      "description": "Response to `CancelIDVSessionRequest`",
      "fields": [
        "services.connect.v1.CancelSessionResponse.session"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.CreateSessionRequest": {
      "name": "CreateSessionRequest",
      "full_name": "services.connect.v1.CreateSessionRequest",
      "description": "Request to create an Identity Verification Session",
      "fields": [
        "services.connect.v1.CreateSessionRequest.verifications",
        "services.connect.v1.CreateSessionRequest.debug_information"
      ],
      "messages": [
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry"
      ],
      "enums": []
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry": {
      "name": "DebugInformationEntry",
      "full_name": "services.connect.v1.CreateSessionRequest.DebugInformationEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry.key",
        "services.connect.v1.CreateSessionRequest.DebugInformationEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.CreateSessionResponse": {
      "name": "CreateSessionResponse",
      "full_name": "services.connect.v1.CreateSessionResponse",
      "description": "Response to `CreateIDVSessionRequest`",
      "fields": [
        "services.connect.v1.CreateSessionResponse.session"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.CredentialRequestData": {
      "name": "CredentialRequestData",
      "full_name": "services.connect.v1.CredentialRequestData",
      "description": "",
      "fields": [
        "services.connect.v1.CredentialRequestData.type"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.GetSessionRequest": {
      "name": "GetSessionRequest",
      "full_name": "services.connect.v1.GetSessionRequest",
      "description": "Request to get an IDVSession",
      "fields": [
        "services.connect.v1.GetSessionRequest.idv_session_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.GetSessionResponse": {
      "name": "GetSessionResponse",
      "full_name": "services.connect.v1.GetSessionResponse",
      "description": "Response to `GetIDVSessionRequest`",
      "fields": [
        "services.connect.v1.GetSessionResponse.session"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.GovernmentIDFields": {
      "name": "GovernmentIDFields",
      "full_name": "services.connect.v1.GovernmentIDFields",
      "description": "Selection of fields to retrieve from a Government ID. All fields default to `false` unless explicitly set to `true`.",
      "fields": [
        "services.connect.v1.GovernmentIDFields.id_number",
        "services.connect.v1.GovernmentIDFields.given_name",
        "services.connect.v1.GovernmentIDFields.family_name",
        "services.connect.v1.GovernmentIDFields.address",
        "services.connect.v1.GovernmentIDFields.date_of_birth",
        "services.connect.v1.GovernmentIDFields.country",
        "services.connect.v1.GovernmentIDFields.issue_date",
        "services.connect.v1.GovernmentIDFields.expiration_date"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.GovernmentIDOptions": {
      "name": "GovernmentIDOptions",
      "full_name": "services.connect.v1.GovernmentIDOptions",
      "description": "Options for a Verification of type `GOVERNMENT_ID`",
      "fields": [
        "services.connect.v1.GovernmentIDOptions.fields"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.HasValidCredentialRequest": {
      "name": "HasValidCredentialRequest",
      "full_name": "services.connect.v1.HasValidCredentialRequest",
      "description": "Request to preemptively check if an identity has a valid reusable credential",
      "fields": [
        "services.connect.v1.HasValidCredentialRequest.identity",
        "services.connect.v1.HasValidCredentialRequest.credential_request_data"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.HasValidCredentialResponse": {
      "name": "HasValidCredentialResponse",
      "full_name": "services.connect.v1.HasValidCredentialResponse",
      "description": "Response to `HasValidCredentialRequest`",
      "fields": [
        "services.connect.v1.HasValidCredentialResponse.has_valid_credential"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.IDVSession": {
      "name": "IDVSession",
      "full_name": "services.connect.v1.IDVSession",
      "description": "An Identity Verification Session",
      "fields": [
        "services.connect.v1.IDVSession.id",
        "services.connect.v1.IDVSession.client_token",
        "services.connect.v1.IDVSession.state",
        "services.connect.v1.IDVSession.verifications",
        "services.connect.v1.IDVSession.fail_code",
        "services.connect.v1.IDVSession.result_vp",
        "services.connect.v1.IDVSession.created",
        "services.connect.v1.IDVSession.updated"
      ],
      "messages": [
        "services.connect.v1.IDVSession.VerificationsEntry"
      ],
      "enums": []
    },
    "services.connect.v1.IDVSession.VerificationsEntry": {
      "name": "VerificationsEntry",
      "full_name": "services.connect.v1.IDVSession.VerificationsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.connect.v1.IDVSession.VerificationsEntry.key",
        "services.connect.v1.IDVSession.VerificationsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.ListSessionsRequest": {
      "name": "ListSessionsRequest",
      "full_name": "services.connect.v1.ListSessionsRequest",
      "description": "Request to list all IDVSessions you've created",
      "fields": [
        "services.connect.v1.ListSessionsRequest.order_by",
        "services.connect.v1.ListSessionsRequest.order_direction",
        "services.connect.v1.ListSessionsRequest.page_size",
        "services.connect.v1.ListSessionsRequest.page"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.ListSessionsResponse": {
      "name": "ListSessionsResponse",
      "full_name": "services.connect.v1.ListSessionsResponse",
      "description": "Response to `ListIDVSessionsRequest`",
      "fields": [
        "services.connect.v1.ListSessionsResponse.sessions",
        "services.connect.v1.ListSessionsResponse.total",
        "services.connect.v1.ListSessionsResponse.more"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.NormalizedGovernmentIdData": {
      "name": "NormalizedGovernmentIdData",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData",
      "description": "",
      "fields": [
        "services.connect.v1.NormalizedGovernmentIdData.id_number",
        "services.connect.v1.NormalizedGovernmentIdData.given_name",
        "services.connect.v1.NormalizedGovernmentIdData.family_name",
        "services.connect.v1.NormalizedGovernmentIdData.address",
        "services.connect.v1.NormalizedGovernmentIdData.date_of_birth",
        "services.connect.v1.NormalizedGovernmentIdData.country",
        "services.connect.v1.NormalizedGovernmentIdData.issue_date",
        "services.connect.v1.NormalizedGovernmentIdData.expiration_date"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.RequestedVerification": {
      "name": "RequestedVerification",
      "full_name": "services.connect.v1.RequestedVerification",
      "description": "A verification to perform in an IDV flow",
      "fields": [
        "services.connect.v1.RequestedVerification.type",
        "services.connect.v1.RequestedVerification.government_id_options"
      ],
      "messages": [],
      "enums": []
    },
    "services.connect.v1.Verification": {
      "name": "Verification",
      "full_name": "services.connect.v1.Verification",
      "description": "A Verification that is part of an IDVSession",
      "fields": [
        "services.connect.v1.Verification.id",
        "services.connect.v1.Verification.type",
        "services.connect.v1.Verification.state",
        "services.connect.v1.Verification.fail_code",
        "services.connect.v1.Verification.reused",
        "services.connect.v1.Verification.begun",
        "services.connect.v1.Verification.updated",
        "services.connect.v1.Verification.government_id_options",
        "services.connect.v1.Verification.normalized_government_id_data"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.DeleteFileRequest": {
      "name": "DeleteFileRequest",
      "full_name": "services.filemanagement.v1.DeleteFileRequest",
      "description": "Request to delete a file from Trinsic's CDN by ID",
      "fields": [
        "services.filemanagement.v1.DeleteFileRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.DeleteFileResponse": {
      "name": "DeleteFileResponse",
      "full_name": "services.filemanagement.v1.DeleteFileResponse",
      "description": "Response to `DeleteFileRequest`. Empty payload.",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.File": {
      "name": "File",
      "full_name": "services.filemanagement.v1.File",
      "description": "Contains information about a file stored in Trinsic's CDN",
      "fields": [
        "services.filemanagement.v1.File.id",
        "services.filemanagement.v1.File.uploader_id",
        "services.filemanagement.v1.File.size",
        "services.filemanagement.v1.File.mime_type",
        "services.filemanagement.v1.File.uploaded",
        "services.filemanagement.v1.File.url"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.GetFileRequest": {
      "name": "GetFileRequest",
      "full_name": "services.filemanagement.v1.GetFileRequest",
      "description": "Request to fetch information about a stored file",
      "fields": [
        "services.filemanagement.v1.GetFileRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.GetFileResponse": {
      "name": "GetFileResponse",
      "full_name": "services.filemanagement.v1.GetFileResponse",
      "description": "Response to `GetFileRequest`",
      "fields": [
        "services.filemanagement.v1.GetFileResponse.file"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.GetStorageStatsRequest": {
      "name": "GetStorageStatsRequest",
      "full_name": "services.filemanagement.v1.GetStorageStatsRequest",
      "description": "Request to get statistics about files uploaded by this account",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.GetStorageStatsResponse": {
      "name": "GetStorageStatsResponse",
      "full_name": "services.filemanagement.v1.GetStorageStatsResponse",
      "description": "Response to `GetStorageStatsRequest`",
      "fields": [
        "services.filemanagement.v1.GetStorageStatsResponse.stats"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.ListFilesRequest": {
      "name": "ListFilesRequest",
      "full_name": "services.filemanagement.v1.ListFilesRequest",
      "description": "Request to list files",
      "fields": [
        "services.filemanagement.v1.ListFilesRequest.query",
        "services.filemanagement.v1.ListFilesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.ListFilesResponse": {
      "name": "ListFilesResponse",
      "full_name": "services.filemanagement.v1.ListFilesResponse",
      "description": "Response to `ListFilesRequest`",
      "fields": [
        "services.filemanagement.v1.ListFilesResponse.files",
        "services.filemanagement.v1.ListFilesResponse.has_more_results",
        "services.filemanagement.v1.ListFilesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.StorageStats": {
      "name": "StorageStats",
      "full_name": "services.filemanagement.v1.StorageStats",
      "description": "Represents aggregate statistics of all files uploaded by a single issuer",
      "fields": [
        "services.filemanagement.v1.StorageStats.num_files",
        "services.filemanagement.v1.StorageStats.total_size"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.UploadFileRequest": {
      "name": "UploadFileRequest",
      "full_name": "services.filemanagement.v1.UploadFileRequest",
      "description": "Request to upload a file to Trinsic's CDN",
      "fields": [
        "services.filemanagement.v1.UploadFileRequest.contents",
        "services.filemanagement.v1.UploadFileRequest.mime_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.filemanagement.v1.UploadFileResponse": {
      "name": "UploadFileResponse",
      "full_name": "services.filemanagement.v1.UploadFileResponse",
      "description": "Response to `UploadFileRequest`",
      "fields": [
        "services.filemanagement.v1.UploadFileResponse.uploaded_file"
      ],
      "messages": [],
      "enums": []
    },
    "services.options.AnnotationOption": {
      "name": "AnnotationOption",
      "full_name": "services.options.AnnotationOption",
      "description": "",
      "fields": [
        "services.options.AnnotationOption.active",
        "services.options.AnnotationOption.message"
      ],
      "messages": [],
      "enums": []
    },
    "services.options.SdkTemplateOption": {
      "name": "SdkTemplateOption",
      "full_name": "services.options.SdkTemplateOption",
      "description": "",
      "fields": [
        "services.options.SdkTemplateOption.anonymous",
        "services.options.SdkTemplateOption.ignore",
        "services.options.SdkTemplateOption.no_arguments",
        "services.options.SdkTemplateOption.experimental",
        "services.options.SdkTemplateOption.deprecated"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.AddRoleAssignmentRequest": {
      "name": "AddRoleAssignmentRequest",
      "full_name": "services.provider.v1.AddRoleAssignmentRequest",
      "description": "Role management",
      "fields": [
        "services.provider.v1.AddRoleAssignmentRequest.role",
        "services.provider.v1.AddRoleAssignmentRequest.email",
        "services.provider.v1.AddRoleAssignmentRequest.wallet_id",
        "services.provider.v1.AddRoleAssignmentRequest.did_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.AddRoleAssignmentResponse": {
      "name": "AddRoleAssignmentResponse",
      "full_name": "services.provider.v1.AddRoleAssignmentResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.CreateEcosystemRequest": {
      "name": "CreateEcosystemRequest",
      "full_name": "services.provider.v1.CreateEcosystemRequest",
      "description": "Request to create an ecosystem",
      "fields": [
        "services.provider.v1.CreateEcosystemRequest.name",
        "services.provider.v1.CreateEcosystemRequest.description",
        "services.provider.v1.CreateEcosystemRequest.details",
        "services.provider.v1.CreateEcosystemRequest.domain"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.CreateEcosystemResponse": {
      "name": "CreateEcosystemResponse",
      "full_name": "services.provider.v1.CreateEcosystemResponse",
      "description": "Response to `CreateEcosystemRequest`",
      "fields": [
        "services.provider.v1.CreateEcosystemResponse.ecosystem",
        "services.provider.v1.CreateEcosystemResponse.profile",
        "services.provider.v1.CreateEcosystemResponse.confirmation_method"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.Ecosystem": {
      "name": "Ecosystem",
      "full_name": "services.provider.v1.Ecosystem",
      "description": "Details of an ecosystem",
      "fields": [
        "services.provider.v1.Ecosystem.id",
        "services.provider.v1.Ecosystem.name",
        "services.provider.v1.Ecosystem.description"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.EcosystemInfoRequest": {
      "name": "EcosystemInfoRequest",
      "full_name": "services.provider.v1.EcosystemInfoRequest",
      "description": "Request to fetch information about an ecosystem",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.EcosystemInfoResponse": {
      "name": "EcosystemInfoResponse",
      "full_name": "services.provider.v1.EcosystemInfoResponse",
      "description": "Response to `InfoRequest`",
      "fields": [
        "services.provider.v1.EcosystemInfoResponse.ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetOberonKeyRequest": {
      "name": "GetOberonKeyRequest",
      "full_name": "services.provider.v1.GetOberonKeyRequest",
      "description": "Request to fetch the Trinsic public key used\nto verify authentication token validity",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetOberonKeyResponse": {
      "name": "GetOberonKeyResponse",
      "full_name": "services.provider.v1.GetOberonKeyResponse",
      "description": "Response to `GetOberonKeyRequest`",
      "fields": [
        "services.provider.v1.GetOberonKeyResponse.key"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.IndyOptions": {
      "name": "IndyOptions",
      "full_name": "services.provider.v1.IndyOptions",
      "description": "Options for creation of DID on the SOV network",
      "fields": [
        "services.provider.v1.IndyOptions.network"
      ],
      "messages": [],
      "enums": [
        "services.provider.v1.IndyOptions.IndyNetwork"
      ]
    },
    "services.provider.v1.IonOptions": {
      "name": "IonOptions",
      "full_name": "services.provider.v1.IonOptions",
      "description": "Options for creation of DID on the ION network",
      "fields": [
        "services.provider.v1.IonOptions.network"
      ],
      "messages": [],
      "enums": [
        "services.provider.v1.IonOptions.IonNetwork"
      ]
    },
    "services.provider.v1.ListAvailableRolesRequest": {
      "name": "ListAvailableRolesRequest",
      "full_name": "services.provider.v1.ListAvailableRolesRequest",
      "description": "Request to fetch the available roles in the current ecosystem",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.ListAvailableRolesResponse": {
      "name": "ListAvailableRolesResponse",
      "full_name": "services.provider.v1.ListAvailableRolesResponse",
      "description": "",
      "fields": [
        "services.provider.v1.ListAvailableRolesResponse.roles"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.ListRoleAssignmentsRequest": {
      "name": "ListRoleAssignmentsRequest",
      "full_name": "services.provider.v1.ListRoleAssignmentsRequest",
      "description": "Request to fetch the list of roles assigned to the current account",
      "fields": [
        "services.provider.v1.ListRoleAssignmentsRequest.email",
        "services.provider.v1.ListRoleAssignmentsRequest.wallet_id",
        "services.provider.v1.ListRoleAssignmentsRequest.did_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.ListRoleAssignmentsResponse": {
      "name": "ListRoleAssignmentsResponse",
      "full_name": "services.provider.v1.ListRoleAssignmentsResponse",
      "description": "",
      "fields": [
        "services.provider.v1.ListRoleAssignmentsResponse.roles"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.RemoveRoleAssignmentRequest": {
      "name": "RemoveRoleAssignmentRequest",
      "full_name": "services.provider.v1.RemoveRoleAssignmentRequest",
      "description": "",
      "fields": [
        "services.provider.v1.RemoveRoleAssignmentRequest.role",
        "services.provider.v1.RemoveRoleAssignmentRequest.email",
        "services.provider.v1.RemoveRoleAssignmentRequest.wallet_id",
        "services.provider.v1.RemoveRoleAssignmentRequest.did_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.RemoveRoleAssignmentResponse": {
      "name": "RemoveRoleAssignmentResponse",
      "full_name": "services.provider.v1.RemoveRoleAssignmentResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.SearchWalletConfigurationResponse": {
      "name": "SearchWalletConfigurationResponse",
      "full_name": "services.provider.v1.SearchWalletConfigurationResponse",
      "description": "",
      "fields": [
        "services.provider.v1.SearchWalletConfigurationResponse.results",
        "services.provider.v1.SearchWalletConfigurationResponse.has_more_results",
        "services.provider.v1.SearchWalletConfigurationResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.SearchWalletConfigurationsRequest": {
      "name": "SearchWalletConfigurationsRequest",
      "full_name": "services.provider.v1.SearchWalletConfigurationsRequest",
      "description": "Search for issuers/holders/verifiers",
      "fields": [
        "services.provider.v1.SearchWalletConfigurationsRequest.query_filter",
        "services.provider.v1.SearchWalletConfigurationsRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.UpgradeDidRequest": {
      "name": "UpgradeDidRequest",
      "full_name": "services.provider.v1.UpgradeDidRequest",
      "description": "Request to upgrade a wallet",
      "fields": [
        "services.provider.v1.UpgradeDidRequest.email",
        "services.provider.v1.UpgradeDidRequest.wallet_id",
        "services.provider.v1.UpgradeDidRequest.did_uri",
        "services.provider.v1.UpgradeDidRequest.method",
        "services.provider.v1.UpgradeDidRequest.ion_options",
        "services.provider.v1.UpgradeDidRequest.indy_options"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.UpgradeDidResponse": {
      "name": "UpgradeDidResponse",
      "full_name": "services.provider.v1.UpgradeDidResponse",
      "description": "Response to `UpgradeDIDRequest`",
      "fields": [
        "services.provider.v1.UpgradeDidResponse.did"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.WalletConfiguration": {
      "name": "WalletConfiguration",
      "full_name": "services.provider.v1.WalletConfiguration",
      "description": "Strongly typed information about wallet configurations",
      "fields": [
        "services.provider.v1.WalletConfiguration.name",
        "services.provider.v1.WalletConfiguration.email",
        "services.provider.v1.WalletConfiguration.sms",
        "services.provider.v1.WalletConfiguration.wallet_id",
        "services.provider.v1.WalletConfiguration.public_did",
        "services.provider.v1.WalletConfiguration.config_type",
        "services.provider.v1.WalletConfiguration.auth_tokens",
        "services.provider.v1.WalletConfiguration.external_identity_ids",
        "services.provider.v1.WalletConfiguration.ecosystem_id",
        "services.provider.v1.WalletConfiguration.description",
        "services.provider.v1.WalletConfiguration.external_identities"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.WalletExternalIdentity": {
      "name": "WalletExternalIdentity",
      "full_name": "services.provider.v1.WalletExternalIdentity",
      "description": "An external identity (email address, phone number, etc.) associated with a wallet for authentication purposes.",
      "fields": [
        "services.provider.v1.WalletExternalIdentity.provider",
        "services.provider.v1.WalletExternalIdentity.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.AuthorizedMember": {
      "name": "AuthorizedMember",
      "full_name": "services.trustregistry.v1.AuthorizedMember",
      "description": "",
      "fields": [
        "services.trustregistry.v1.AuthorizedMember.did",
        "services.trustregistry.v1.AuthorizedMember.authorized_member_schemas"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.AuthorizedMemberSchema": {
      "name": "AuthorizedMemberSchema",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema",
      "description": "",
      "fields": [
        "services.trustregistry.v1.AuthorizedMemberSchema.schema_uri",
        "services.trustregistry.v1.AuthorizedMemberSchema.status",
        "services.trustregistry.v1.AuthorizedMemberSchema.status_details",
        "services.trustregistry.v1.AuthorizedMemberSchema.valid_from",
        "services.trustregistry.v1.AuthorizedMemberSchema.valid_until"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest": {
      "name": "GetMemberAuthorizationStatusRequest",
      "full_name": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest",
      "description": "Request to fetch member status in Trust Registry for a specific credential schema.",
      "fields": [
        "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.did_uri",
        "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.schema_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusResponse": {
      "name": "GetMemberAuthorizationStatusResponse",
      "full_name": "services.trustregistry.v1.GetMemberAuthorizationStatusResponse",
      "description": "Response to `GetMemberAuthorizationStatusRequest`",
      "fields": [
        "services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMemberRequest": {
      "name": "GetMemberRequest",
      "full_name": "services.trustregistry.v1.GetMemberRequest",
      "description": "Request to get a member of the Trust Registry",
      "fields": [
        "services.trustregistry.v1.GetMemberRequest.did_uri",
        "services.trustregistry.v1.GetMemberRequest.wallet_id",
        "services.trustregistry.v1.GetMemberRequest.email"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMemberResponse": {
      "name": "GetMemberResponse",
      "full_name": "services.trustregistry.v1.GetMemberResponse",
      "description": "Response to `GetMemberAuthorizationStatusRequest`",
      "fields": [
        "services.trustregistry.v1.GetMemberResponse.authorized_member"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest": {
      "name": "ListAuthorizedMembersRequest",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.ListAuthorizedMembersRequest.schema_uri",
        "services.trustregistry.v1.ListAuthorizedMembersRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse": {
      "name": "ListAuthorizedMembersResponse",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersResponse",
      "description": "Response to `ListAuthorizedMembersRequest`",
      "fields": [
        "services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members",
        "services.trustregistry.v1.ListAuthorizedMembersResponse.has_more_results",
        "services.trustregistry.v1.ListAuthorizedMembersResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RegisterMemberRequest": {
      "name": "RegisterMemberRequest",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest",
      "description": "Request to register a member as a valid issuer of a specific credential schema.\nOnly one of `did_uri`, `wallet_id`, or `email` may be specified.",
      "fields": [
        "services.trustregistry.v1.RegisterMemberRequest.did_uri",
        "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
        "services.trustregistry.v1.RegisterMemberRequest.email",
        "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
        "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
        "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RegisterMemberResponse": {
      "name": "RegisterMemberResponse",
      "full_name": "services.trustregistry.v1.RegisterMemberResponse",
      "description": "Response to `RegisterMemberRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.UnregisterMemberRequest": {
      "name": "UnregisterMemberRequest",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest",
      "description": "Request to unregister a member as a valid issuer of a specific credential schema.\nOnly one of `did_uri`, `wallet_id`, or `email` may be specified.\nThe URI of the credential schema must be specified.",
      "fields": [
        "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
        "services.trustregistry.v1.UnregisterMemberRequest.email",
        "services.trustregistry.v1.UnregisterMemberRequest.schema_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.UnregisterMemberResponse": {
      "name": "UnregisterMemberResponse",
      "full_name": "services.trustregistry.v1.UnregisterMemberResponse",
      "description": "Response to `UnregisterMemberRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest": {
      "name": "AddExternalIdentityConfirmRequest",
      "full_name": "services.universalwallet.v1.AddExternalIdentityConfirmRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AddExternalIdentityConfirmRequest.challenge",
        "services.universalwallet.v1.AddExternalIdentityConfirmRequest.response"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmResponse": {
      "name": "AddExternalIdentityConfirmResponse",
      "full_name": "services.universalwallet.v1.AddExternalIdentityConfirmResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest": {
      "name": "AddExternalIdentityInitRequest",
      "full_name": "services.universalwallet.v1.AddExternalIdentityInitRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AddExternalIdentityInitRequest.identity",
        "services.universalwallet.v1.AddExternalIdentityInitRequest.provider"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AddExternalIdentityInitResponse": {
      "name": "AddExternalIdentityInitResponse",
      "full_name": "services.universalwallet.v1.AddExternalIdentityInitResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AddExternalIdentityInitResponse.challenge"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest": {
      "name": "AuthenticateConfirmRequest",
      "full_name": "services.universalwallet.v1.AuthenticateConfirmRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AuthenticateConfirmRequest.challenge",
        "services.universalwallet.v1.AuthenticateConfirmRequest.response"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateConfirmResponse": {
      "name": "AuthenticateConfirmResponse",
      "full_name": "services.universalwallet.v1.AuthenticateConfirmResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AuthenticateConfirmResponse.auth_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateInitRequest": {
      "name": "AuthenticateInitRequest",
      "full_name": "services.universalwallet.v1.AuthenticateInitRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AuthenticateInitRequest.identity",
        "services.universalwallet.v1.AuthenticateInitRequest.provider",
        "services.universalwallet.v1.AuthenticateInitRequest.ecosystem_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateInitResponse": {
      "name": "AuthenticateInitResponse",
      "full_name": "services.universalwallet.v1.AuthenticateInitResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AuthenticateInitResponse.challenge"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateResendCodeRequest": {
      "name": "AuthenticateResendCodeRequest",
      "full_name": "services.universalwallet.v1.AuthenticateResendCodeRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.AuthenticateResendCodeRequest.challenge"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.AuthenticateResendCodeResponse": {
      "name": "AuthenticateResendCodeResponse",
      "full_name": "services.universalwallet.v1.AuthenticateResendCodeResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.CreateWalletRequest": {
      "name": "CreateWalletRequest",
      "full_name": "services.universalwallet.v1.CreateWalletRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.CreateWalletRequest.ecosystem_id",
        "services.universalwallet.v1.CreateWalletRequest.description",
        "services.universalwallet.v1.CreateWalletRequest.identity"
      ],
      "messages": [
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity"
      ],
      "enums": []
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity": {
      "name": "ExternalIdentity",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity",
      "description": "",
      "fields": [
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.identity",
        "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.provider"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.CreateWalletResponse": {
      "name": "CreateWalletResponse",
      "full_name": "services.universalwallet.v1.CreateWalletResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.CreateWalletResponse.auth_token",
        "services.universalwallet.v1.CreateWalletResponse.token_id",
        "services.universalwallet.v1.CreateWalletResponse.wallet"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteItemRequest": {
      "name": "DeleteItemRequest",
      "full_name": "services.universalwallet.v1.DeleteItemRequest",
      "description": "Request to delete an item in a wallet",
      "fields": [
        "services.universalwallet.v1.DeleteItemRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteItemResponse": {
      "name": "DeleteItemResponse",
      "full_name": "services.universalwallet.v1.DeleteItemResponse",
      "description": "Response to `DeleteItemRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteWalletRequest": {
      "name": "DeleteWalletRequest",
      "full_name": "services.universalwallet.v1.DeleteWalletRequest",
      "description": "Request to delete a wallet",
      "fields": [
        "services.universalwallet.v1.DeleteWalletRequest.email",
        "services.universalwallet.v1.DeleteWalletRequest.wallet_id",
        "services.universalwallet.v1.DeleteWalletRequest.did_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteWalletResponse": {
      "name": "DeleteWalletResponse",
      "full_name": "services.universalwallet.v1.DeleteWalletResponse",
      "description": "Response to `DeleteWalletRequest`. Empty payload.",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest": {
      "name": "GenerateAuthTokenRequest",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.GenerateAuthTokenRequest.wallet_id",
        "services.universalwallet.v1.GenerateAuthTokenRequest.token_description"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse": {
      "name": "GenerateAuthTokenResponse",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.GenerateAuthTokenResponse.token_id",
        "services.universalwallet.v1.GenerateAuthTokenResponse.auth_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetItemRequest": {
      "name": "GetItemRequest",
      "full_name": "services.universalwallet.v1.GetItemRequest",
      "description": "Request to fetch an item from wallet",
      "fields": [
        "services.universalwallet.v1.GetItemRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetItemResponse": {
      "name": "GetItemResponse",
      "full_name": "services.universalwallet.v1.GetItemResponse",
      "description": "Response to `GetItemRequest`",
      "fields": [
        "services.universalwallet.v1.GetItemResponse.item_json",
        "services.universalwallet.v1.GetItemResponse.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetMyInfoRequest": {
      "name": "GetMyInfoRequest",
      "full_name": "services.universalwallet.v1.GetMyInfoRequest",
      "description": "Request to retrieve wallet information about the currently authenticated wallet",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetMyInfoResponse": {
      "name": "GetMyInfoResponse",
      "full_name": "services.universalwallet.v1.GetMyInfoResponse",
      "description": "Response to `GetMyInfoRequest`",
      "fields": [
        "services.universalwallet.v1.GetMyInfoResponse.wallet"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityRequest": {
      "name": "GetWalletFromExternalIdentityRequest",
      "full_name": "services.universalwallet.v1.GetWalletFromExternalIdentityRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.GetWalletFromExternalIdentityRequest.identity"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityResponse": {
      "name": "GetWalletFromExternalIdentityResponse",
      "full_name": "services.universalwallet.v1.GetWalletFromExternalIdentityResponse",
      "description": "Response to `GetWalletFromExternalIdentityRequest`",
      "fields": [
        "services.universalwallet.v1.GetWalletFromExternalIdentityResponse.wallet"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetWalletInfoRequest": {
      "name": "GetWalletInfoRequest",
      "full_name": "services.universalwallet.v1.GetWalletInfoRequest",
      "description": "Request to retrieve wallet information about a given wallet identified by its wallet ID",
      "fields": [
        "services.universalwallet.v1.GetWalletInfoRequest.wallet_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetWalletInfoResponse": {
      "name": "GetWalletInfoResponse",
      "full_name": "services.universalwallet.v1.GetWalletInfoResponse",
      "description": "Response to `GetWalletInfoRequest`",
      "fields": [
        "services.universalwallet.v1.GetWalletInfoResponse.wallet"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.InsertItemRequest": {
      "name": "InsertItemRequest",
      "full_name": "services.universalwallet.v1.InsertItemRequest",
      "description": "Request to insert a JSON document into a wallet",
      "fields": [
        "services.universalwallet.v1.InsertItemRequest.item_json",
        "services.universalwallet.v1.InsertItemRequest.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.InsertItemResponse": {
      "name": "InsertItemResponse",
      "full_name": "services.universalwallet.v1.InsertItemResponse",
      "description": "Response to `InsertItemRequest`",
      "fields": [
        "services.universalwallet.v1.InsertItemResponse.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest": {
      "name": "ListByVerificationTemplateRequest",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateRequest",
      "description": "Request to list templates by",
      "fields": [
        "services.universalwallet.v1.ListByVerificationTemplateRequest.verification_template_id",
        "services.universalwallet.v1.ListByVerificationTemplateRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse": {
      "name": "ListByVerificationTemplateResponse",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateResponse",
      "description": "Response to `ListByVerificationTemplateRequest`",
      "fields": [
        "services.universalwallet.v1.ListByVerificationTemplateResponse.items",
        "services.universalwallet.v1.ListByVerificationTemplateResponse.has_more_results",
        "services.universalwallet.v1.ListByVerificationTemplateResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.ListWalletsRequest": {
      "name": "ListWalletsRequest",
      "full_name": "services.universalwallet.v1.ListWalletsRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.ListWalletsRequest.filter"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.ListWalletsResponse": {
      "name": "ListWalletsResponse",
      "full_name": "services.universalwallet.v1.ListWalletsResponse",
      "description": "",
      "fields": [
        "services.universalwallet.v1.ListWalletsResponse.wallets"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.RemoveExternalIdentityRequest": {
      "name": "RemoveExternalIdentityRequest",
      "full_name": "services.universalwallet.v1.RemoveExternalIdentityRequest",
      "description": "",
      "fields": [
        "services.universalwallet.v1.RemoveExternalIdentityRequest.identity"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.RemoveExternalIdentityResponse": {
      "name": "RemoveExternalIdentityResponse",
      "full_name": "services.universalwallet.v1.RemoveExternalIdentityResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest": {
      "name": "RevokeAuthTokenRequest",
      "full_name": "services.universalwallet.v1.RevokeAuthTokenRequest",
      "description": "Request to revoke a previously issued auth token",
      "fields": [
        "services.universalwallet.v1.RevokeAuthTokenRequest.wallet_id",
        "services.universalwallet.v1.RevokeAuthTokenRequest.token_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.RevokeAuthTokenResponse": {
      "name": "RevokeAuthTokenResponse",
      "full_name": "services.universalwallet.v1.RevokeAuthTokenResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.SearchRequest": {
      "name": "SearchRequest",
      "full_name": "services.universalwallet.v1.SearchRequest",
      "description": "Request to search items in wallet",
      "fields": [
        "services.universalwallet.v1.SearchRequest.query",
        "services.universalwallet.v1.SearchRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.SearchResponse": {
      "name": "SearchResponse",
      "full_name": "services.universalwallet.v1.SearchResponse",
      "description": "Response to `SearchRequest`",
      "fields": [
        "services.universalwallet.v1.SearchResponse.items",
        "services.universalwallet.v1.SearchResponse.has_more_results",
        "services.universalwallet.v1.SearchResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.UpdateItemRequest": {
      "name": "UpdateItemRequest",
      "full_name": "services.universalwallet.v1.UpdateItemRequest",
      "description": "Request to update item in wallet",
      "fields": [
        "services.universalwallet.v1.UpdateItemRequest.item_id",
        "services.universalwallet.v1.UpdateItemRequest.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.UpdateItemResponse": {
      "name": "UpdateItemResponse",
      "full_name": "services.universalwallet.v1.UpdateItemResponse",
      "description": "Response to `UpdateItemRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions": {
      "name": "AppleWalletOptions",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions",
      "description": "Configuration options for Apple Wallet when",
      "fields": [
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.background_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.foreground_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.label_color",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.primary_field",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.secondary_fields",
        "services.verifiablecredentials.templates.v1.AppleWalletOptions.auxiliary_fields"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest": {
      "name": "CreateCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
      "description": "Request to create a new template",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.field_ordering",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.apple_wallet_options"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry": {
      "name": "FieldOrderingEntry",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse": {
      "name": "CreateCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
      "description": "Response to `CreateCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest": {
      "name": "CreateVerificationTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.credential_template_id",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.description"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse": {
      "name": "CreateVerificationTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse.data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest": {
      "name": "DeleteCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
      "description": "Request to delete a template by ID",
      "fields": [
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse": {
      "name": "DeleteCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
      "description": "Response to `DeleteCredentialTemplateRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest": {
      "name": "DeleteVerificationTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest.verification_template_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateResponse": {
      "name": "DeleteVerificationTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateResponse",
      "description": "This space intentionally left blank",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering": {
      "name": "FieldOrdering",
      "full_name": "services.verifiablecredentials.templates.v1.FieldOrdering",
      "description": "Ordering information for a template field",
      "fields": [
        "services.verifiablecredentials.templates.v1.FieldOrdering.order",
        "services.verifiablecredentials.templates.v1.FieldOrdering.section"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest": {
      "name": "GetCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
      "description": "Request to fetch a template by ID",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse": {
      "name": "GetCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
      "description": "Response to `GetCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest": {
      "name": "GetVerificationTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest",
      "description": "Request to fetch a template by ID",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse": {
      "name": "GetVerificationTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse",
      "description": "Response to `GetCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse.template"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest": {
      "name": "ListCredentialTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
      "description": "Request to list templates using a SQL query",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse": {
      "name": "ListCredentialTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
      "description": "Response to `ListCredentialTemplatesRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest": {
      "name": "ListVerificationTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest",
      "description": "Request to list templates using a SQL query",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse": {
      "name": "ListVerificationTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest": {
      "name": "SearchCredentialTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
      "description": "Request to search templates using a SQL query",
      "fields": [
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse": {
      "name": "SearchCredentialTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
      "description": "Response to `SearchCredentialTemplatesRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateData": {
      "name": "TemplateData",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Credential Template",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateData.id",
        "services.verifiablecredentials.templates.v1.TemplateData.name",
        "services.verifiablecredentials.templates.v1.TemplateData.version",
        "services.verifiablecredentials.templates.v1.TemplateData.fields",
        "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.TemplateData.type",
        "services.verifiablecredentials.templates.v1.TemplateData.created_by",
        "services.verifiablecredentials.templates.v1.TemplateData.date_created",
        "services.verifiablecredentials.templates.v1.TemplateData.title",
        "services.verifiablecredentials.templates.v1.TemplateData.description",
        "services.verifiablecredentials.templates.v1.TemplateData.field_ordering",
        "services.verifiablecredentials.templates.v1.TemplateData.apple_wallet_options"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry": {
      "name": "FieldOrderingEntry",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateField": {
      "name": "TemplateField",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": "A field defined in a template",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateField.title",
        "services.verifiablecredentials.templates.v1.TemplateField.description",
        "services.verifiablecredentials.templates.v1.TemplateField.optional",
        "services.verifiablecredentials.templates.v1.TemplateField.type",
        "services.verifiablecredentials.templates.v1.TemplateField.uri_data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch": {
      "name": "TemplateFieldPatch",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateFieldPatch",
      "description": "A patch to apply to an existing template field",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.title",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.description",
        "services.verifiablecredentials.templates.v1.TemplateFieldPatch.uri_data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest": {
      "name": "UpdateCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest",
      "description": "Request to update display information for a template",
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.field_ordering",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.apple_wallet_options"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry": {
      "name": "FieldOrderingEntry",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse": {
      "name": "UpdateCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse",
      "description": "Response to `UpdateCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse.updated_template"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest": {
      "name": "UpdateVerificationTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.title",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.description",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.fields"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse": {
      "name": "UpdateVerificationTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse.template"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.UriFieldData": {
      "name": "UriFieldData",
      "full_name": "services.verifiablecredentials.templates.v1.UriFieldData",
      "description": "Data pertaining to a URI Field",
      "fields": [
        "services.verifiablecredentials.templates.v1.UriFieldData.mime_type",
        "services.verifiablecredentials.templates.v1.UriFieldData.render_method"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData": {
      "name": "VerificationTemplateData",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData",
      "description": "Verification Template",
      "fields": [
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.name",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.version",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.fields",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.credential_template_id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.created_by",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.date_created",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.title",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.description"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField": {
      "name": "VerificationTemplateField",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateField",
      "description": "A field defined in a template",
      "fields": [
        "services.verifiablecredentials.templates.v1.VerificationTemplateField.field_share_type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateField.usage_policy"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch": {
      "name": "VerificationTemplateFieldPatch",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch",
      "description": "A patch to apply to an existing template field",
      "fields": [
        "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.field_share_type",
        "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.usage_policy"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest": {
      "name": "AcceptCredentialRequest",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.AcceptCredentialRequest.document_json",
        "services.verifiablecredentials.v1.AcceptCredentialRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse": {
      "name": "AcceptCredentialResponse",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialResponse",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.AcceptCredentialResponse.item_id",
        "services.verifiablecredentials.v1.AcceptCredentialResponse.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CheckStatusRequest": {
      "name": "CheckStatusRequest",
      "full_name": "services.verifiablecredentials.v1.CheckStatusRequest",
      "description": "Request to check a credential's revocation status",
      "fields": [
        "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CheckStatusResponse": {
      "name": "CheckStatusResponse",
      "full_name": "services.verifiablecredentials.v1.CheckStatusResponse",
      "description": "Response to `CheckStatusRequest`",
      "fields": [
        "services.verifiablecredentials.v1.CheckStatusResponse.revoked"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest": {
      "name": "CreateCredentialOfferRequest",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.template_id",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.values_json",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.holder_binding",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.include_governance",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.generate_share_url",
        "services.verifiablecredentials.v1.CreateCredentialOfferRequest.signature_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse": {
      "name": "CreateCredentialOfferResponse",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferResponse",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.CreateCredentialOfferResponse.document_json",
        "services.verifiablecredentials.v1.CreateCredentialOfferResponse.share_url"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateProofRequest": {
      "name": "CreateProofRequest",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest",
      "description": "Request to create a proof for a Verifiable Credential using public key tied to caller.\nEither `item_id`, or `document_json` may be provided, not both.",
      "fields": [
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_template",
        "services.verifiablecredentials.v1.CreateProofRequest.verification_template_id",
        "services.verifiablecredentials.v1.CreateProofRequest.item_id",
        "services.verifiablecredentials.v1.CreateProofRequest.document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.use_verifiable_presentation",
        "services.verifiablecredentials.v1.CreateProofRequest.nonce"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateProofResponse": {
      "name": "CreateProofResponse",
      "full_name": "services.verifiablecredentials.v1.CreateProofResponse",
      "description": "Response to `CreateProofRequest`",
      "fields": [
        "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest": {
      "name": "IssueFromTemplateRequest",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest",
      "description": "Request to create and sign a JSON-LD Verifiable Credential from a template using public key tied to caller",
      "fields": [
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.save_copy",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.expiration_date",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.include_governance",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.signature_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse": {
      "name": "IssueFromTemplateResponse",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateResponse",
      "description": "Response to `IssueFromTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest": {
      "name": "RejectCredentialRequest",
      "full_name": "services.verifiablecredentials.v1.RejectCredentialRequest",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.RejectCredentialRequest.document_json",
        "services.verifiablecredentials.v1.RejectCredentialRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.RejectCredentialResponse": {
      "name": "RejectCredentialResponse",
      "full_name": "services.verifiablecredentials.v1.RejectCredentialResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.RevealTemplateAttributes": {
      "name": "RevealTemplateAttributes",
      "full_name": "services.verifiablecredentials.v1.RevealTemplateAttributes",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.RevealTemplateAttributes.template_attributes"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.SendRequest": {
      "name": "SendRequest",
      "full_name": "services.verifiablecredentials.v1.SendRequest",
      "description": "Request to send a document to another user's wallet",
      "fields": [
        "services.verifiablecredentials.v1.SendRequest.email",
        "services.verifiablecredentials.v1.SendRequest.wallet_id",
        "services.verifiablecredentials.v1.SendRequest.did_uri",
        "services.verifiablecredentials.v1.SendRequest.phone_number",
        "services.verifiablecredentials.v1.SendRequest.send_notification",
        "services.verifiablecredentials.v1.SendRequest.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.SendResponse": {
      "name": "SendResponse",
      "full_name": "services.verifiablecredentials.v1.SendResponse",
      "description": "Response to `SendRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest": {
      "name": "UpdateStatusRequest",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest",
      "description": "Request to update a credential's revocation status",
      "fields": [
        "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.UpdateStatusRequest.revoked"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.UpdateStatusResponse": {
      "name": "UpdateStatusResponse",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusResponse",
      "description": "Response to `UpdateStatusRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.ValidationMessage": {
      "name": "ValidationMessage",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage",
      "description": "Result of a validation check on a proof",
      "fields": [
        "services.verifiablecredentials.v1.ValidationMessage.is_valid",
        "services.verifiablecredentials.v1.ValidationMessage.messages"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofRequest": {
      "name": "VerifyProofRequest",
      "full_name": "services.verifiablecredentials.v1.VerifyProofRequest",
      "description": "Request to verify a proof",
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofResponse": {
      "name": "VerifyProofResponse",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse",
      "description": "Response to `VerifyProofRequest`",
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_results"
      ],
      "messages": [
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry": {
      "name": "ValidationResultsEntry",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
      "description": "",
      "is_map_entry": true,
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value"
      ],
      "messages": [],
      "enums": []
    }
  },
  "fields": {
    "google.api.CustomHttpPattern.kind": {
      "name": "kind",
      "full_name": "google.api.CustomHttpPattern.kind",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The name of this custom HTTP verb."
    },
    "google.api.CustomHttpPattern.path": {
      "name": "path",
      "full_name": "google.api.CustomHttpPattern.path",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The path matched by this custom verb."
    },
    "google.api.Http.fully_decode_reserved_expansion": {
      "name": "fully_decode_reserved_expansion",
      "full_name": "google.api.Http.fully_decode_reserved_expansion",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "When set to true, URL path parameters will be fully URI-decoded except in\ncases of single segment matches in reserved expansion, where \"%2F\" will be\nleft encoded.\n\nThe default behavior is to not decode RFC 6570 reserved characters in multi\nsegment matches."
    },
    "google.api.Http.rules": {
      "name": "rules",
      "full_name": "google.api.Http.rules",
      "label": "LABEL_REPEATED",
      "type": "HttpRule",
      "full_type": "google.api.HttpRule",
      "description": "A list of HTTP configuration rules that apply to individual API methods.\n\n**NOTE:** All service configuration rules follow \"last one wins\" order."
    },
    "google.api.HttpRule.additional_bindings": {
      "name": "additional_bindings",
      "full_name": "google.api.HttpRule.additional_bindings",
      "label": "LABEL_REPEATED",
      "type": "HttpRule",
      "full_type": "google.api.HttpRule",
      "description": "Additional HTTP bindings for the selector. Nested bindings must\nnot contain an `additional_bindings` field themselves (that is,\nthe nesting may only be one level deep)."
    },
    "google.api.HttpRule.body": {
      "name": "body",
      "full_name": "google.api.HttpRule.body",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The name of the request field whose value is mapped to the HTTP request\nbody, or `*` for mapping all request fields not captured by the path\npattern to the HTTP body, or omitted for not having any HTTP request body.\n\nNOTE: the referred field must be present at the top-level of the request\nmessage type."
    },
    "google.api.HttpRule.custom": {
      "name": "custom",
      "full_name": "google.api.HttpRule.custom",
      "label": "LABEL_OPTIONAL",
      "type": "CustomHttpPattern",
      "full_type": "google.api.CustomHttpPattern",
      "description": "The custom pattern is used for specifying an HTTP method that is not\nincluded in the `pattern` field, such as HEAD, or \"*\" to leave the\nHTTP method unspecified for this rule. The wild-card rule is useful\nfor services that provide content to Web (HTML) clients."
    },
    "google.api.HttpRule.delete": {
      "name": "delete",
      "full_name": "google.api.HttpRule.delete",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Maps to HTTP DELETE. Used for deleting a resource."
    },
    "google.api.HttpRule.get": {
      "name": "get",
      "full_name": "google.api.HttpRule.get",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Maps to HTTP GET. Used for listing and getting information about\nresources."
    },
    "google.api.HttpRule.patch": {
      "name": "patch",
      "full_name": "google.api.HttpRule.patch",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Maps to HTTP PATCH. Used for updating a resource."
    },
    "google.api.HttpRule.post": {
      "name": "post",
      "full_name": "google.api.HttpRule.post",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Maps to HTTP POST. Used for creating a resource or performing an action."
    },
    "google.api.HttpRule.put": {
      "name": "put",
      "full_name": "google.api.HttpRule.put",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Maps to HTTP PUT. Used for replacing a resource."
    },
    "google.api.HttpRule.response_body": {
      "name": "response_body",
      "full_name": "google.api.HttpRule.response_body",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Optional. The name of the response field whose value is mapped to the HTTP\nresponse body. When omitted, the entire response message will be used\nas the HTTP response body.\n\nNOTE: The referred field must be present at the top-level of the response\nmessage type."
    },
    "google.api.HttpRule.selector": {
      "name": "selector",
      "full_name": "google.api.HttpRule.selector",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Selects a method to which this rule applies.\n\nRefer to [selector][google.api.DocumentationRule.selector] for syntax details."
    },
    "sdk.options.v1.TrinsicOptions.auth_token": {
      "name": "auth_token",
      "full_name": "sdk.options.v1.TrinsicOptions.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Authentication token for SDK calls; defaults to empty string (unauthenticated)\n\nDefault ecosystem ID to use for various SDK calls; defaults to `default`\nstring default_ecosystem = 5;"
    },
    "sdk.options.v1.TrinsicOptions.server_endpoint": {
      "name": "server_endpoint",
      "full_name": "sdk.options.v1.TrinsicOptions.server_endpoint",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic API endpoint. Defaults to `prod.trinsic.cloud`"
    },
    "sdk.options.v1.TrinsicOptions.server_port": {
      "name": "server_port",
      "full_name": "sdk.options.v1.TrinsicOptions.server_port",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Trinsic API port; defaults to `443`"
    },
    "sdk.options.v1.TrinsicOptions.server_use_tls": {
      "name": "server_use_tls",
      "full_name": "sdk.options.v1.TrinsicOptions.server_use_tls",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether TLS is enabled between SDK and Trinsic API; defaults to `true`"
    },
    "services.account.v1.AccountDetails.email": {
      "name": "email",
      "full_name": "services.account.v1.AccountDetails.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account.",
      "options": {
        "deprecated": true,
        "services.options.optional": true
      }
    },
    "services.account.v1.AccountDetails.name": {
      "name": "name",
      "full_name": "services.account.v1.AccountDetails.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Account name",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.AccountDetails.sms": {
      "name": "sms",
      "full_name": "services.account.v1.AccountDetails.sms",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SMS number including country code",
      "options": {
        "deprecated": true,
        "services.options.optional": true
      }
    },
    "services.account.v1.AccountProfile.auth_data": {
      "name": "auth_data",
      "full_name": "services.account.v1.AccountProfile.auth_data",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Auth data containg information about the current device access"
    },
    "services.account.v1.AccountProfile.auth_token": {
      "name": "auth_token",
      "full_name": "services.account.v1.AccountProfile.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Secure token issued by server used to generate zero-knowledge proofs"
    },
    "services.account.v1.AccountProfile.profile_type": {
      "name": "profile_type",
      "full_name": "services.account.v1.AccountProfile.profile_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The type of profile, used to differentiate between\nprotocol schemes or versions"
    },
    "services.account.v1.AccountProfile.protection": {
      "name": "protection",
      "full_name": "services.account.v1.AccountProfile.protection",
      "label": "LABEL_OPTIONAL",
      "type": "TokenProtection",
      "full_type": "services.account.v1.TokenProtection",
      "description": "Token security information about the token.\nIf token protection is enabled, implementations must supply\nprotection secret before using the token for authentication."
    },
    "services.account.v1.TokenProtection.enabled": {
      "name": "enabled",
      "full_name": "services.account.v1.TokenProtection.enabled",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Indicates if token is protected using a PIN,\nsecurity code, HSM secret, etc."
    },
    "services.account.v1.TokenProtection.method": {
      "name": "method",
      "full_name": "services.account.v1.TokenProtection.method",
      "label": "LABEL_OPTIONAL",
      "type": "ConfirmationMethod",
      "full_type": "services.account.v1.ConfirmationMethod",
      "description": "The method used to protect the token"
    },
    "services.account.v1.WalletAuthToken.date_created": {
      "name": "date_created",
      "full_name": "services.account.v1.WalletAuthToken.date_created",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Date when the token was created in ISO 8601 format"
    },
    "services.account.v1.WalletAuthToken.description": {
      "name": "description",
      "full_name": "services.account.v1.WalletAuthToken.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Device name/description"
    },
    "services.account.v1.WalletAuthToken.id": {
      "name": "id",
      "full_name": "services.account.v1.WalletAuthToken.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Unique identifier for the token.\nThis field will match the `DeviceId` in the WalletAuthData"
    },
    "services.common.v1.Nonce.request_hash": {
      "name": "request_hash",
      "full_name": "services.common.v1.Nonce.request_hash",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "blake3256 hash of the request body"
    },
    "services.common.v1.Nonce.timestamp": {
      "name": "timestamp",
      "full_name": "services.common.v1.Nonce.timestamp",
      "label": "LABEL_OPTIONAL",
      "type": "int64",
      "full_type": "int64",
      "description": "UTC unix millisecond timestamp the request was made"
    },
    "services.common.v1.TrinsicClientOptions.auth_token": {
      "name": "auth_token",
      "full_name": "services.common.v1.TrinsicClientOptions.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Authentication token for SDK calls; defaults to empty string (unauthenticated)"
    },
    "services.common.v1.TrinsicClientOptions.server_endpoint": {
      "name": "server_endpoint",
      "full_name": "services.common.v1.TrinsicClientOptions.server_endpoint",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic API endpoint. Defaults to `prod.trinsic.cloud`"
    },
    "services.common.v1.TrinsicClientOptions.server_port": {
      "name": "server_port",
      "full_name": "services.common.v1.TrinsicClientOptions.server_port",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Trinsic API port; defaults to `443`"
    },
    "services.common.v1.TrinsicClientOptions.server_use_tls": {
      "name": "server_use_tls",
      "full_name": "services.common.v1.TrinsicClientOptions.server_use_tls",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether TLS is enabled between SDK and Trinsic API; defaults to `true`"
    },
    "services.connect.v1.CancelSessionRequest.idv_session_id": {
      "name": "idv_session_id",
      "full_name": "services.connect.v1.CancelSessionRequest.idv_session_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the IDVSession to cancel"
    },
    "services.connect.v1.CancelSessionResponse.session": {
      "name": "session",
      "full_name": "services.connect.v1.CancelSessionResponse.session",
      "label": "LABEL_OPTIONAL",
      "type": "IDVSession",
      "full_type": "services.connect.v1.IDVSession",
      "description": "The IDVSession in its current state after cancellation"
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry.key": {
      "name": "key",
      "full_name": "services.connect.v1.CreateSessionRequest.DebugInformationEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.connect.v1.CreateSessionRequest.DebugInformationEntry.value": {
      "name": "value",
      "full_name": "services.connect.v1.CreateSessionRequest.DebugInformationEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.connect.v1.CreateSessionRequest.debug_information": {
      "name": "debug_information",
      "full_name": "services.connect.v1.CreateSessionRequest.debug_information",
      "label": "LABEL_REPEATED",
      "type": "DebugInformationEntry",
      "full_type": "services.connect.v1.CreateSessionRequest.DebugInformationEntry",
      "description": "Debugging information used to help diagnose issues"
    },
    "services.connect.v1.CreateSessionRequest.verifications": {
      "name": "verifications",
      "full_name": "services.connect.v1.CreateSessionRequest.verifications",
      "label": "LABEL_REPEATED",
      "type": "RequestedVerification",
      "full_type": "services.connect.v1.RequestedVerification",
      "description": "Array of verifications to perform"
    },
    "services.connect.v1.CreateSessionResponse.session": {
      "name": "session",
      "full_name": "services.connect.v1.CreateSessionResponse.session",
      "label": "LABEL_OPTIONAL",
      "type": "IDVSession",
      "full_type": "services.connect.v1.IDVSession",
      "description": "The created IDVSession"
    },
    "services.connect.v1.CredentialRequestData.type": {
      "name": "type",
      "full_name": "services.connect.v1.CredentialRequestData.type",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationType",
      "full_type": "services.connect.v1.VerificationType",
      "description": "The type of verification for which the credential can be used\n\nName of the IDV issuer"
    },
    "services.connect.v1.GetSessionRequest.idv_session_id": {
      "name": "idv_session_id",
      "full_name": "services.connect.v1.GetSessionRequest.idv_session_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the IDVSession to get"
    },
    "services.connect.v1.GetSessionResponse.session": {
      "name": "session",
      "full_name": "services.connect.v1.GetSessionResponse.session",
      "label": "LABEL_OPTIONAL",
      "type": "IDVSession",
      "full_type": "services.connect.v1.IDVSession",
      "description": "The IDVSession"
    },
    "services.connect.v1.GovernmentIDFields.address": {
      "name": "address",
      "full_name": "services.connect.v1.GovernmentIDFields.address",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Full address of the document holder"
    },
    "services.connect.v1.GovernmentIDFields.country": {
      "name": "country",
      "full_name": "services.connect.v1.GovernmentIDFields.country",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "ISO3 country code of the document"
    },
    "services.connect.v1.GovernmentIDFields.date_of_birth": {
      "name": "date_of_birth",
      "full_name": "services.connect.v1.GovernmentIDFields.date_of_birth",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Date of birth of the document holder"
    },
    "services.connect.v1.GovernmentIDFields.expiration_date": {
      "name": "expiration_date",
      "full_name": "services.connect.v1.GovernmentIDFields.expiration_date",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Expiration date date of the document"
    },
    "services.connect.v1.GovernmentIDFields.family_name": {
      "name": "family_name",
      "full_name": "services.connect.v1.GovernmentIDFields.family_name",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Family (\"last\") name of the document holder"
    },
    "services.connect.v1.GovernmentIDFields.given_name": {
      "name": "given_name",
      "full_name": "services.connect.v1.GovernmentIDFields.given_name",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Given (\"first\") name of the document holder"
    },
    "services.connect.v1.GovernmentIDFields.id_number": {
      "name": "id_number",
      "full_name": "services.connect.v1.GovernmentIDFields.id_number",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "ID number of the underlying identity document"
    },
    "services.connect.v1.GovernmentIDFields.issue_date": {
      "name": "issue_date",
      "full_name": "services.connect.v1.GovernmentIDFields.issue_date",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Issuance date of the document"
    },
    "services.connect.v1.GovernmentIDOptions.fields": {
      "name": "fields",
      "full_name": "services.connect.v1.GovernmentIDOptions.fields",
      "label": "LABEL_OPTIONAL",
      "type": "GovernmentIDFields",
      "full_type": "services.connect.v1.GovernmentIDFields",
      "description": "The fields to retrieve from the Government ID.\nIf this object is not set, all fields will be retrieved."
    },
    "services.connect.v1.HasValidCredentialRequest.credential_request_data": {
      "name": "credential_request_data",
      "full_name": "services.connect.v1.HasValidCredentialRequest.credential_request_data",
      "label": "LABEL_OPTIONAL",
      "type": "CredentialRequestData",
      "full_type": "services.connect.v1.CredentialRequestData",
      "description": "The criteria used to find a valid credential"
    },
    "services.connect.v1.HasValidCredentialRequest.identity": {
      "name": "identity",
      "full_name": "services.connect.v1.HasValidCredentialRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "ExternalIdentity",
      "full_type": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity",
      "description": "The identity used to find a credential"
    },
    "services.connect.v1.HasValidCredentialResponse.has_valid_credential": {
      "name": "has_valid_credential",
      "full_name": "services.connect.v1.HasValidCredentialResponse.has_valid_credential",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether the identity has a valid credential"
    },
    "services.connect.v1.IDVSession.VerificationsEntry.key": {
      "name": "key",
      "full_name": "services.connect.v1.IDVSession.VerificationsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.connect.v1.IDVSession.VerificationsEntry.value": {
      "name": "value",
      "full_name": "services.connect.v1.IDVSession.VerificationsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "Verification",
      "full_type": "services.connect.v1.Verification",
      "description": ""
    },
    "services.connect.v1.IDVSession.client_token": {
      "name": "client_token",
      "full_name": "services.connect.v1.IDVSession.client_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The Client Token for this IDVSession. This should be passed to your frontend to initiate\nthe IDV flow using Trinsic's Web SDK."
    },
    "services.connect.v1.IDVSession.created": {
      "name": "created",
      "full_name": "services.connect.v1.IDVSession.created",
      "label": "LABEL_OPTIONAL",
      "type": "fixed64",
      "full_type": "fixed64",
      "description": "The unix timestamp, in seconds, that this IDVSession was created"
    },
    "services.connect.v1.IDVSession.fail_code": {
      "name": "fail_code",
      "full_name": "services.connect.v1.IDVSession.fail_code",
      "label": "LABEL_OPTIONAL",
      "type": "SessionFailCode",
      "full_type": "services.connect.v1.SessionFailCode",
      "description": "The reason for the IDVSession's failure.\nOnly set if `state` is `IDV_FAILED`."
    },
    "services.connect.v1.IDVSession.id": {
      "name": "id",
      "full_name": "services.connect.v1.IDVSession.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the IDVSession."
    },
    "services.connect.v1.IDVSession.result_vp": {
      "name": "result_vp",
      "full_name": "services.connect.v1.IDVSession.result_vp",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The resultant signed VP combining the results of all verifications"
    },
    "services.connect.v1.IDVSession.state": {
      "name": "state",
      "full_name": "services.connect.v1.IDVSession.state",
      "label": "LABEL_OPTIONAL",
      "type": "IDVSessionState",
      "full_type": "services.connect.v1.IDVSessionState",
      "description": "State of the IDVSession"
    },
    "services.connect.v1.IDVSession.updated": {
      "name": "updated",
      "full_name": "services.connect.v1.IDVSession.updated",
      "label": "LABEL_OPTIONAL",
      "type": "fixed64",
      "full_type": "fixed64",
      "description": "The unix timestamp, in seconds, that this IDVSession's `state` was last updated"
    },
    "services.connect.v1.IDVSession.verifications": {
      "name": "verifications",
      "full_name": "services.connect.v1.IDVSession.verifications",
      "label": "LABEL_REPEATED",
      "type": "VerificationsEntry",
      "full_type": "services.connect.v1.IDVSession.VerificationsEntry",
      "description": "The actual Verifications to perform in this IDV flow"
    },
    "services.connect.v1.ListSessionsRequest.order_by": {
      "name": "order_by",
      "full_name": "services.connect.v1.ListSessionsRequest.order_by",
      "label": "LABEL_OPTIONAL",
      "type": "SessionOrdering",
      "full_type": "services.connect.v1.SessionOrdering",
      "description": "The field by which sessions should be sorted. Defaults to `CREATED`."
    },
    "services.connect.v1.ListSessionsRequest.order_direction": {
      "name": "order_direction",
      "full_name": "services.connect.v1.ListSessionsRequest.order_direction",
      "label": "LABEL_OPTIONAL",
      "type": "OrderDirection",
      "full_type": "services.common.v1.OrderDirection",
      "description": "The order in which sessions should be sorted. Defaults to `ASCENDING`."
    },
    "services.connect.v1.ListSessionsRequest.page": {
      "name": "page",
      "full_name": "services.connect.v1.ListSessionsRequest.page",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "The page index of results to return.\nStarts at `1`.\nDefaults to `1`."
    },
    "services.connect.v1.ListSessionsRequest.page_size": {
      "name": "page_size",
      "full_name": "services.connect.v1.ListSessionsRequest.page_size",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "The number of results to return per page.\nMust be between `1` and `10`, inclusive.\nDefaults to `10`."
    },
    "services.connect.v1.ListSessionsResponse.more": {
      "name": "more",
      "full_name": "services.connect.v1.ListSessionsResponse.more",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "If `true`, this is not the last page of results.\nIf `false`, this is the last page of results."
    },
    "services.connect.v1.ListSessionsResponse.sessions": {
      "name": "sessions",
      "full_name": "services.connect.v1.ListSessionsResponse.sessions",
      "label": "LABEL_REPEATED",
      "type": "IDVSession",
      "full_type": "services.connect.v1.IDVSession",
      "description": "The sessions you've created"
    },
    "services.connect.v1.ListSessionsResponse.total": {
      "name": "total",
      "full_name": "services.connect.v1.ListSessionsResponse.total",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "The total number of sessions you've created"
    },
    "services.connect.v1.NormalizedGovernmentIdData.address": {
      "name": "address",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.address",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Full address of the document holder"
    },
    "services.connect.v1.NormalizedGovernmentIdData.country": {
      "name": "country",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.country",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ISO3 country code of the document"
    },
    "services.connect.v1.NormalizedGovernmentIdData.date_of_birth": {
      "name": "date_of_birth",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.date_of_birth",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Date of birth of the document holder"
    },
    "services.connect.v1.NormalizedGovernmentIdData.expiration_date": {
      "name": "expiration_date",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.expiration_date",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Expiration date date of the document"
    },
    "services.connect.v1.NormalizedGovernmentIdData.family_name": {
      "name": "family_name",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.family_name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Family (\"last\") name of the document holder"
    },
    "services.connect.v1.NormalizedGovernmentIdData.given_name": {
      "name": "given_name",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.given_name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Given (\"first\") name of the document holder"
    },
    "services.connect.v1.NormalizedGovernmentIdData.id_number": {
      "name": "id_number",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.id_number",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID number of the underlying identity document"
    },
    "services.connect.v1.NormalizedGovernmentIdData.issue_date": {
      "name": "issue_date",
      "full_name": "services.connect.v1.NormalizedGovernmentIdData.issue_date",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Issuance date of the document"
    },
    "services.connect.v1.RequestedVerification.government_id_options": {
      "name": "government_id_options",
      "full_name": "services.connect.v1.RequestedVerification.government_id_options",
      "label": "LABEL_OPTIONAL",
      "type": "GovernmentIDOptions",
      "full_type": "services.connect.v1.GovernmentIDOptions",
      "description": "Options for a Verification of type `GOVERNMENT_ID`"
    },
    "services.connect.v1.RequestedVerification.type": {
      "name": "type",
      "full_name": "services.connect.v1.RequestedVerification.type",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationType",
      "full_type": "services.connect.v1.VerificationType",
      "description": "The type of verification to perform"
    },
    "services.connect.v1.Verification.begun": {
      "name": "begun",
      "full_name": "services.connect.v1.Verification.begun",
      "label": "LABEL_OPTIONAL",
      "type": "fixed64",
      "full_type": "fixed64",
      "description": "The unix timestamp, in seconds, when this verification was begun\nby the user -- or `0` if not yet begun."
    },
    "services.connect.v1.Verification.fail_code": {
      "name": "fail_code",
      "full_name": "services.connect.v1.Verification.fail_code",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationFailCode",
      "full_type": "services.connect.v1.VerificationFailCode",
      "description": "The reason for the Verification's failure.\nOnly set if `state` is `VERIFICATION_FAILED`."
    },
    "services.connect.v1.Verification.government_id_options": {
      "name": "government_id_options",
      "full_name": "services.connect.v1.Verification.government_id_options",
      "label": "LABEL_OPTIONAL",
      "type": "GovernmentIDOptions",
      "full_type": "services.connect.v1.GovernmentIDOptions",
      "description": "The Government ID options for this Verification.\nOnly set if this Verification is of type `GOVERNMENT_ID`."
    },
    "services.connect.v1.Verification.id": {
      "name": "id",
      "full_name": "services.connect.v1.Verification.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the verification"
    },
    "services.connect.v1.Verification.normalized_government_id_data": {
      "name": "normalized_government_id_data",
      "full_name": "services.connect.v1.Verification.normalized_government_id_data",
      "label": "LABEL_OPTIONAL",
      "type": "NormalizedGovernmentIdData",
      "full_type": "services.connect.v1.NormalizedGovernmentIdData",
      "description": "Normalized output for manual parsing and usage for this verification\nOnly set if this Verification is of type `GOVERNMENT_ID` and has succeeded."
    },
    "services.connect.v1.Verification.reused": {
      "name": "reused",
      "full_name": "services.connect.v1.Verification.reused",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether this was a reused (true) or fresh (false) verification.\nIf `state` is not `VERIFICATION_SUCCESS`, this field is `false` and does not convey useful information."
    },
    "services.connect.v1.Verification.state": {
      "name": "state",
      "full_name": "services.connect.v1.Verification.state",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationState",
      "full_type": "services.connect.v1.VerificationState",
      "description": "The state of the verification"
    },
    "services.connect.v1.Verification.type": {
      "name": "type",
      "full_name": "services.connect.v1.Verification.type",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationType",
      "full_type": "services.connect.v1.VerificationType",
      "description": "The type of verification (driver's license, passport, proof of address, etc)"
    },
    "services.connect.v1.Verification.updated": {
      "name": "updated",
      "full_name": "services.connect.v1.Verification.updated",
      "label": "LABEL_OPTIONAL",
      "type": "fixed64",
      "full_type": "fixed64",
      "description": "The unix timestamp, in seconds, when this verification last changed state -- or `0` if it has not yet\nbegun."
    },
    "services.filemanagement.v1.DeleteFileRequest.id": {
      "name": "id",
      "full_name": "services.filemanagement.v1.DeleteFileRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of file to delete"
    },
    "services.filemanagement.v1.File.id": {
      "name": "id",
      "full_name": "services.filemanagement.v1.File.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of file, generated randomly by Trinsic on upload"
    },
    "services.filemanagement.v1.File.mime_type": {
      "name": "mime_type",
      "full_name": "services.filemanagement.v1.File.mime_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Uploader-provided MIME type of file"
    },
    "services.filemanagement.v1.File.size": {
      "name": "size",
      "full_name": "services.filemanagement.v1.File.size",
      "label": "LABEL_OPTIONAL",
      "type": "uint32",
      "full_type": "uint32",
      "description": "Size, in bytes, of file"
    },
    "services.filemanagement.v1.File.uploaded": {
      "name": "uploaded",
      "full_name": "services.filemanagement.v1.File.uploaded",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ISO 8601 timestamp of when file was uploaded to Trinsic"
    },
    "services.filemanagement.v1.File.uploader_id": {
      "name": "uploader_id",
      "full_name": "services.filemanagement.v1.File.uploader_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of uploader"
    },
    "services.filemanagement.v1.File.url": {
      "name": "url",
      "full_name": "services.filemanagement.v1.File.url",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "CDN URL of file"
    },
    "services.filemanagement.v1.GetFileRequest.id": {
      "name": "id",
      "full_name": "services.filemanagement.v1.GetFileRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of file to fetch"
    },
    "services.filemanagement.v1.GetFileResponse.file": {
      "name": "file",
      "full_name": "services.filemanagement.v1.GetFileResponse.file",
      "label": "LABEL_OPTIONAL",
      "type": "File",
      "full_type": "services.filemanagement.v1.File",
      "description": "File specified by `id` parameter of `GetFileRequest`."
    },
    "services.filemanagement.v1.GetStorageStatsResponse.stats": {
      "name": "stats",
      "full_name": "services.filemanagement.v1.GetStorageStatsResponse.stats",
      "label": "LABEL_OPTIONAL",
      "type": "StorageStats",
      "full_type": "services.filemanagement.v1.StorageStats",
      "description": "Statistics about files uploaded by the calling account"
    },
    "services.filemanagement.v1.ListFilesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.filemanagement.v1.ListFilesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `ListFilesRequest`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.filemanagement.v1.ListFilesRequest.query": {
      "name": "query",
      "full_name": "services.filemanagement.v1.ListFilesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Query to search with. If not specified, will return the most recent 100 files."
    },
    "services.filemanagement.v1.ListFilesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.filemanagement.v1.ListFilesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `ListFilesRequest`"
    },
    "services.filemanagement.v1.ListFilesResponse.files": {
      "name": "files",
      "full_name": "services.filemanagement.v1.ListFilesResponse.files",
      "label": "LABEL_REPEATED",
      "type": "File",
      "full_type": "services.filemanagement.v1.File",
      "description": "Files found by query"
    },
    "services.filemanagement.v1.ListFilesResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.filemanagement.v1.ListFilesResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.filemanagement.v1.StorageStats.num_files": {
      "name": "num_files",
      "full_name": "services.filemanagement.v1.StorageStats.num_files",
      "label": "LABEL_OPTIONAL",
      "type": "uint32",
      "full_type": "uint32",
      "description": "Number of files uploaded by this account"
    },
    "services.filemanagement.v1.StorageStats.total_size": {
      "name": "total_size",
      "full_name": "services.filemanagement.v1.StorageStats.total_size",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": "Sum total size of all files, in bytes"
    },
    "services.filemanagement.v1.UploadFileRequest.contents": {
      "name": "contents",
      "full_name": "services.filemanagement.v1.UploadFileRequest.contents",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Raw content of file"
    },
    "services.filemanagement.v1.UploadFileRequest.mime_type": {
      "name": "mime_type",
      "full_name": "services.filemanagement.v1.UploadFileRequest.mime_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "MIME type describing file contents"
    },
    "services.filemanagement.v1.UploadFileResponse.uploaded_file": {
      "name": "uploaded_file",
      "full_name": "services.filemanagement.v1.UploadFileResponse.uploaded_file",
      "label": "LABEL_OPTIONAL",
      "type": "File",
      "full_type": "services.filemanagement.v1.File",
      "description": "Information about newly-uploaded file"
    },
    "services.options.AnnotationOption.active": {
      "name": "active",
      "full_name": "services.options.AnnotationOption.active",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Is this annotation active"
    },
    "services.options.AnnotationOption.message": {
      "name": "message",
      "full_name": "services.options.AnnotationOption.message",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Custom annotation message to provide"
    },
    "services.options.SdkTemplateOption.anonymous": {
      "name": "anonymous",
      "full_name": "services.options.SdkTemplateOption.anonymous",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether the service endpoint allows anonymous (no auth token necessary) authentication\nThis is used by the `protoc-gen-trinsic-sdk` plugin for metadata."
    },
    "services.options.SdkTemplateOption.deprecated": {
      "name": "deprecated",
      "full_name": "services.options.SdkTemplateOption.deprecated",
      "label": "LABEL_OPTIONAL",
      "type": "AnnotationOption",
      "full_type": "services.options.AnnotationOption",
      "description": "This endpoint is deprecated. It will be removed in the future."
    },
    "services.options.SdkTemplateOption.experimental": {
      "name": "experimental",
      "full_name": "services.options.SdkTemplateOption.experimental",
      "label": "LABEL_OPTIONAL",
      "type": "AnnotationOption",
      "full_type": "services.options.AnnotationOption",
      "description": "This endpoint is experimental. Consider it in beta, so documentation may be incomplete or incorrect."
    },
    "services.options.SdkTemplateOption.ignore": {
      "name": "ignore",
      "full_name": "services.options.SdkTemplateOption.ignore",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether the SDK template generator should ignore this method. This method will\nbe wrapped manually."
    },
    "services.options.SdkTemplateOption.no_arguments": {
      "name": "no_arguments",
      "full_name": "services.options.SdkTemplateOption.no_arguments",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether the SDK template generator should generate this method without arguments, eg\nProviderService.GetEcosystemInfo() where the request object is empty"
    },
    "services.provider.v1.AddRoleAssignmentRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.provider.v1.AddRoleAssignmentRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the account to assign role.\nMutually exclusive with `email` and `walletId`."
    },
    "services.provider.v1.AddRoleAssignmentRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.AddRoleAssignmentRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account to assign role.\nMutually exclusive with `walletId` and `didUri`."
    },
    "services.provider.v1.AddRoleAssignmentRequest.role": {
      "name": "role",
      "full_name": "services.provider.v1.AddRoleAssignmentRequest.role",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Role to assign"
    },
    "services.provider.v1.AddRoleAssignmentRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.provider.v1.AddRoleAssignmentRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of account to assign role to.\nMutually exclusive with `email` and `didUri`."
    },
    "services.provider.v1.CreateEcosystemRequest.description": {
      "name": "description",
      "full_name": "services.provider.v1.CreateEcosystemRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem description",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.CreateEcosystemRequest.details": {
      "name": "details",
      "full_name": "services.provider.v1.CreateEcosystemRequest.details",
      "label": "LABEL_OPTIONAL",
      "type": "AccountDetails",
      "full_type": "services.account.v1.AccountDetails",
      "description": "The account details of the owner of the ecosystem"
    },
    "services.provider.v1.CreateEcosystemRequest.domain": {
      "name": "domain",
      "full_name": "services.provider.v1.CreateEcosystemRequest.domain",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New domain URL"
    },
    "services.provider.v1.CreateEcosystemRequest.name": {
      "name": "name",
      "full_name": "services.provider.v1.CreateEcosystemRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Globally unique name for the Ecosystem. This name will be\npart of the ecosystem-specific URLs and namespaces.\nAllowed characters are lowercase letters, numbers, underscore and hyphen.\nIf not passed, ecosystem name will be auto-generated.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.CreateEcosystemResponse.confirmation_method": {
      "name": "confirmation_method",
      "full_name": "services.provider.v1.CreateEcosystemResponse.confirmation_method",
      "label": "LABEL_OPTIONAL",
      "type": "ConfirmationMethod",
      "full_type": "services.account.v1.ConfirmationMethod",
      "description": "Indicates if confirmation of account is required."
    },
    "services.provider.v1.CreateEcosystemResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.CreateEcosystemResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Details of the created ecosystem"
    },
    "services.provider.v1.CreateEcosystemResponse.profile": {
      "name": "profile",
      "full_name": "services.provider.v1.CreateEcosystemResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Account profile for auth of the owner of the ecosystem"
    },
    "services.provider.v1.Ecosystem.description": {
      "name": "description",
      "full_name": "services.provider.v1.Ecosystem.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem description"
    },
    "services.provider.v1.Ecosystem.id": {
      "name": "id",
      "full_name": "services.provider.v1.Ecosystem.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URN of the ecosystem"
    },
    "services.provider.v1.Ecosystem.name": {
      "name": "name",
      "full_name": "services.provider.v1.Ecosystem.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Globally unique name for the ecosystem"
    },
    "services.provider.v1.EcosystemInfoResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.EcosystemInfoResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Ecosystem corresponding to current ecosystem in the account token"
    },
    "services.provider.v1.GetOberonKeyResponse.key": {
      "name": "key",
      "full_name": "services.provider.v1.GetOberonKeyResponse.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Oberon Public Key as RAW base64-url encoded string"
    },
    "services.provider.v1.IndyOptions.network": {
      "name": "network",
      "full_name": "services.provider.v1.IndyOptions.network",
      "label": "LABEL_OPTIONAL",
      "type": "IndyNetwork",
      "full_type": "services.provider.v1.IndyOptions.IndyNetwork",
      "description": "SOV network on which DID should be published"
    },
    "services.provider.v1.IonOptions.network": {
      "name": "network",
      "full_name": "services.provider.v1.IonOptions.network",
      "label": "LABEL_OPTIONAL",
      "type": "IonNetwork",
      "full_type": "services.provider.v1.IonOptions.IonNetwork",
      "description": "ION network on which DID should be published"
    },
    "services.provider.v1.ListAvailableRolesResponse.roles": {
      "name": "roles",
      "full_name": "services.provider.v1.ListAvailableRolesResponse.roles",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "List of roles"
    },
    "services.provider.v1.ListRoleAssignmentsRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.provider.v1.ListRoleAssignmentsRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the account to list roles.\nMutually exclusive with `email` and `walletId`."
    },
    "services.provider.v1.ListRoleAssignmentsRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.ListRoleAssignmentsRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account to list roles.\nMutually exclusive with `walletId` and `didUri`."
    },
    "services.provider.v1.ListRoleAssignmentsRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.provider.v1.ListRoleAssignmentsRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of account to list roles.\nMutually exclusive with `email` and `didUri`."
    },
    "services.provider.v1.ListRoleAssignmentsResponse.roles": {
      "name": "roles",
      "full_name": "services.provider.v1.ListRoleAssignmentsResponse.roles",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "List of roles"
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.provider.v1.RemoveRoleAssignmentRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the account to unassign role.\nMutually exclusive with `email` and `walletId`."
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.RemoveRoleAssignmentRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account to unassign role.\nMutually exclusive with `walletId` and `didUri`."
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.role": {
      "name": "role",
      "full_name": "services.provider.v1.RemoveRoleAssignmentRequest.role",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Role to unassign"
    },
    "services.provider.v1.RemoveRoleAssignmentRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.provider.v1.RemoveRoleAssignmentRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of account to unassign role.\nMutually exclusive with `email` and `didUri`."
    },
    "services.provider.v1.SearchWalletConfigurationResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.provider.v1.SearchWalletConfigurationResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `SearchRequest`"
    },
    "services.provider.v1.SearchWalletConfigurationResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.provider.v1.SearchWalletConfigurationResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.provider.v1.SearchWalletConfigurationResponse.results": {
      "name": "results",
      "full_name": "services.provider.v1.SearchWalletConfigurationResponse.results",
      "label": "LABEL_REPEATED",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": "Results matching the search query"
    },
    "services.provider.v1.SearchWalletConfigurationsRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.provider.v1.SearchWalletConfigurationsRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `SearchResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.SearchWalletConfigurationsRequest.query_filter": {
      "name": "query_filter",
      "full_name": "services.provider.v1.SearchWalletConfigurationsRequest.query_filter",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL filter to execute. `SELECT * FROM c WHERE [**queryFilter**]`"
    },
    "services.provider.v1.UpgradeDidRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.provider.v1.UpgradeDidRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the account to upgrade.\nMutually exclusive with `email` and `walletId`."
    },
    "services.provider.v1.UpgradeDidRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.UpgradeDidRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account to upgrade.\nMutually exclusive with `walletId` and `didUri`."
    },
    "services.provider.v1.UpgradeDidRequest.indy_options": {
      "name": "indy_options",
      "full_name": "services.provider.v1.UpgradeDidRequest.indy_options",
      "label": "LABEL_OPTIONAL",
      "type": "IndyOptions",
      "full_type": "services.provider.v1.IndyOptions",
      "description": "Configuration for creation of DID on INDY network"
    },
    "services.provider.v1.UpgradeDidRequest.ion_options": {
      "name": "ion_options",
      "full_name": "services.provider.v1.UpgradeDidRequest.ion_options",
      "label": "LABEL_OPTIONAL",
      "type": "IonOptions",
      "full_type": "services.provider.v1.IonOptions",
      "description": "Configuration for creation of DID on ION network"
    },
    "services.provider.v1.UpgradeDidRequest.method": {
      "name": "method",
      "full_name": "services.provider.v1.UpgradeDidRequest.method",
      "label": "LABEL_OPTIONAL",
      "type": "SupportedDidMethod",
      "full_type": "services.common.v1.SupportedDidMethod",
      "description": "DID Method to which wallet should be upgraded"
    },
    "services.provider.v1.UpgradeDidRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.provider.v1.UpgradeDidRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of account to upgrade.\nMutually exclusive with `email` and `didUri`."
    },
    "services.provider.v1.UpgradeDidResponse.did": {
      "name": "did",
      "full_name": "services.provider.v1.UpgradeDidResponse.did",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New DID of wallet"
    },
    "services.provider.v1.WalletConfiguration.auth_tokens": {
      "name": "auth_tokens",
      "full_name": "services.provider.v1.WalletConfiguration.auth_tokens",
      "label": "LABEL_REPEATED",
      "type": "WalletAuthToken",
      "full_type": "services.account.v1.WalletAuthToken",
      "description": "List of active authentication tokens for this wallet.\nThis list does not contain the issued token, only metadata\nsuch as ID, description, and creation date."
    },
    "services.provider.v1.WalletConfiguration.config_type": {
      "name": "config_type",
      "full_name": "services.provider.v1.WalletConfiguration.config_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.WalletConfiguration.description": {
      "name": "description",
      "full_name": "services.provider.v1.WalletConfiguration.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.WalletConfiguration.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.provider.v1.WalletConfiguration.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem in which this wallet is contained."
    },
    "services.provider.v1.WalletConfiguration.email": {
      "name": "email",
      "full_name": "services.provider.v1.WalletConfiguration.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Deprecated and will be removed on August 1, 2023 -- use external_identities.\nThis field is set to the first email address present in `external_identities`, if any.",
      "options": {
        "deprecated": true,
        "services.options.optional": true
      }
    },
    "services.provider.v1.WalletConfiguration.external_identities": {
      "name": "external_identities",
      "full_name": "services.provider.v1.WalletConfiguration.external_identities",
      "label": "LABEL_REPEATED",
      "type": "WalletExternalIdentity",
      "full_type": "services.provider.v1.WalletExternalIdentity",
      "description": "List of external identities associated with this wallet."
    },
    "services.provider.v1.WalletConfiguration.external_identity_ids": {
      "name": "external_identity_ids",
      "full_name": "services.provider.v1.WalletConfiguration.external_identity_ids",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "List of external identity IDs (email addresses, phone numbers, etc.) associated with this wallet.\nThis is deprecated; use `external_identities` instead.",
      "options": {
        "deprecated": true
      }
    },
    "services.provider.v1.WalletConfiguration.name": {
      "name": "name",
      "full_name": "services.provider.v1.WalletConfiguration.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Name/description of the wallet"
    },
    "services.provider.v1.WalletConfiguration.public_did": {
      "name": "public_did",
      "full_name": "services.provider.v1.WalletConfiguration.public_did",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The DID of the wallet"
    },
    "services.provider.v1.WalletConfiguration.sms": {
      "name": "sms",
      "full_name": "services.provider.v1.WalletConfiguration.sms",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Deprecated -- use external_identities",
      "options": {
        "deprecated": true,
        "services.options.optional": true
      }
    },
    "services.provider.v1.WalletConfiguration.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.provider.v1.WalletConfiguration.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.WalletExternalIdentity.id": {
      "name": "id",
      "full_name": "services.provider.v1.WalletExternalIdentity.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The actual email address/phone number/etc. for this identity"
    },
    "services.provider.v1.WalletExternalIdentity.provider": {
      "name": "provider",
      "full_name": "services.provider.v1.WalletExternalIdentity.provider",
      "label": "LABEL_OPTIONAL",
      "type": "IdentityProvider",
      "full_type": "services.provider.v1.IdentityProvider",
      "description": "The type of this identity (whether this identity is an email address, phone number, etc.)"
    },
    "services.trustregistry.v1.AuthorizedMember.authorized_member_schemas": {
      "name": "authorized_member_schemas",
      "full_name": "services.trustregistry.v1.AuthorizedMember.authorized_member_schemas",
      "label": "LABEL_REPEATED",
      "type": "AuthorizedMemberSchema",
      "full_type": "services.trustregistry.v1.AuthorizedMemberSchema",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMember.did": {
      "name": "did",
      "full_name": "services.trustregistry.v1.AuthorizedMember.did",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.status": {
      "name": "status",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema.status",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.status_details": {
      "name": "status_details",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema.status_details",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.valid_from": {
      "name": "valid_from",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema.valid_from",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": ""
    },
    "services.trustregistry.v1.AuthorizedMemberSchema.valid_until": {
      "name": "valid_until",
      "full_name": "services.trustregistry.v1.AuthorizedMemberSchema.valid_until",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": ""
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of member"
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.GetMemberAuthorizationStatusRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI of credential schema associated with member"
    },
    "services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status": {
      "name": "status",
      "full_name": "services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status",
      "label": "LABEL_OPTIONAL",
      "type": "RegistrationStatus",
      "full_type": "services.trustregistry.v1.RegistrationStatus",
      "description": "Status of member for given credential schema"
    },
    "services.trustregistry.v1.GetMemberRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.GetMemberRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of member to get"
    },
    "services.trustregistry.v1.GetMemberRequest.email": {
      "name": "email",
      "full_name": "services.trustregistry.v1.GetMemberRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of member to get. Must be associated with an existing Trinsic account."
    },
    "services.trustregistry.v1.GetMemberRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.trustregistry.v1.GetMemberRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic Wallet ID of member to get"
    },
    "services.trustregistry.v1.GetMemberResponse.authorized_member": {
      "name": "authorized_member",
      "full_name": "services.trustregistry.v1.GetMemberResponse.authorized_member",
      "label": "LABEL_OPTIONAL",
      "type": "AuthorizedMember",
      "full_type": "services.trustregistry.v1.AuthorizedMember",
      "description": "Member for given did in given framework"
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results, from previous `ListAuthorizedMembersResponse`"
    },
    "services.trustregistry.v1.ListAuthorizedMembersRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "id of schema that needs to be checked"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members": {
      "name": "authorized_members",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members",
      "label": "LABEL_REPEATED",
      "type": "AuthorizedMember",
      "full_type": "services.trustregistry.v1.AuthorizedMember",
      "description": "JSON string containing array of resultant objects"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `ListAuthorizedMembersRequest`"
    },
    "services.trustregistry.v1.ListAuthorizedMembersResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.trustregistry.v1.ListAuthorizedMembersResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more data is available to fetch for query"
    },
    "services.trustregistry.v1.RegisterMemberRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of member to register"
    },
    "services.trustregistry.v1.RegisterMemberRequest.email": {
      "name": "email",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of member to register. Must be associated with an existing Trinsic account."
    },
    "services.trustregistry.v1.RegisterMemberRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI of credential schema to register member as authorized issuer of"
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc": {
      "name": "valid_from_utc",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": "Unix Timestamp member is valid from. Member will not be considered valid before this timestamp."
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc": {
      "name": "valid_until_utc",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": "Unix Timestamp member is valid until. Member will not be considered valid after this timestamp."
    },
    "services.trustregistry.v1.RegisterMemberRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic Wallet ID of member to register"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of member to unregister"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.email": {
      "name": "email",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of member to unregister. Must be associated with an existing Trinsic account."
    },
    "services.trustregistry.v1.UnregisterMemberRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI of credential schema to unregister member as authorized issuer of"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic Wallet ID of member to unregister"
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest.challenge": {
      "name": "challenge",
      "full_name": "services.universalwallet.v1.AddExternalIdentityConfirmRequest.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The challenge received from the `AddExternalIdentityInit` endpoint"
    },
    "services.universalwallet.v1.AddExternalIdentityConfirmRequest.response": {
      "name": "response",
      "full_name": "services.universalwallet.v1.AddExternalIdentityConfirmRequest.response",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The response to the challenge. If using Email or Phone,\nthis is the OTP code sent to the user's email or phone"
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.AddExternalIdentityInitRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The user identity to add to the wallet\nThis can be an email address or phone number (formatted as +[country code][phone number])"
    },
    "services.universalwallet.v1.AddExternalIdentityInitRequest.provider": {
      "name": "provider",
      "full_name": "services.universalwallet.v1.AddExternalIdentityInitRequest.provider",
      "label": "LABEL_OPTIONAL",
      "type": "IdentityProvider",
      "full_type": "services.provider.v1.IdentityProvider",
      "description": "The type of identity provider, like EMAIL or PHONE"
    },
    "services.universalwallet.v1.AddExternalIdentityInitResponse.challenge": {
      "name": "challenge",
      "full_name": "services.universalwallet.v1.AddExternalIdentityInitResponse.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Challenge or reference to the challenge to be used in the `AddExternalIdentityConfirm` endpoint"
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest.challenge": {
      "name": "challenge",
      "full_name": "services.universalwallet.v1.AuthenticateConfirmRequest.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The challenge received from the `AcquireAuthTokenInit` endpoint"
    },
    "services.universalwallet.v1.AuthenticateConfirmRequest.response": {
      "name": "response",
      "full_name": "services.universalwallet.v1.AuthenticateConfirmRequest.response",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The response to the challenge. If using Email or Phone,\nthis is the OTP code sent to the user's email or phone"
    },
    "services.universalwallet.v1.AuthenticateConfirmResponse.auth_token": {
      "name": "auth_token",
      "full_name": "services.universalwallet.v1.AuthenticateConfirmResponse.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Auth token for the wallet"
    },
    "services.universalwallet.v1.AuthenticateInitRequest.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.universalwallet.v1.AuthenticateInitRequest.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem ID to which the wallet belongs"
    },
    "services.universalwallet.v1.AuthenticateInitRequest.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.AuthenticateInitRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Identity to add to the wallet"
    },
    "services.universalwallet.v1.AuthenticateInitRequest.provider": {
      "name": "provider",
      "full_name": "services.universalwallet.v1.AuthenticateInitRequest.provider",
      "label": "LABEL_OPTIONAL",
      "type": "IdentityProvider",
      "full_type": "services.provider.v1.IdentityProvider",
      "description": "Identity provider"
    },
    "services.universalwallet.v1.AuthenticateInitResponse.challenge": {
      "name": "challenge",
      "full_name": "services.universalwallet.v1.AuthenticateInitResponse.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The challenge received from the `AcquireAuthTokenInit` endpoint\nPass this challenge back to the `AcquireAuthTokenConfirm` endpoint"
    },
    "services.universalwallet.v1.AuthenticateResendCodeRequest.challenge": {
      "name": "challenge",
      "full_name": "services.universalwallet.v1.AuthenticateResendCodeRequest.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Challenge for the code you want resent."
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.identity",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The user identity to add to the wallet\nThis can be an email address or phone number (formatted as +[country code][phone number])"
    },
    "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.provider": {
      "name": "provider",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity.provider",
      "label": "LABEL_OPTIONAL",
      "type": "IdentityProvider",
      "full_type": "services.provider.v1.IdentityProvider",
      "description": "The type of identity provider, like EMAIL or PHONE"
    },
    "services.universalwallet.v1.CreateWalletRequest.description": {
      "name": "description",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet name or description.\nUse this field to add vendor specific information about this wallet,\nsuch as email, phone, internal ID, or anything you'd like to associate\nwith this wallet. This field is searchable.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.CreateWalletRequest.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem ID of the wallet to create"
    },
    "services.universalwallet.v1.CreateWalletRequest.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.CreateWalletRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "ExternalIdentity",
      "full_type": "services.universalwallet.v1.CreateWalletRequest.ExternalIdentity",
      "description": "Optional identity to add to the wallet (email or sms).\nUse this field when inviting participants into an ecosystem.\nIf this field is set, an auth token will not be sent in the response.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.CreateWalletResponse.auth_token": {
      "name": "auth_token",
      "full_name": "services.universalwallet.v1.CreateWalletResponse.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Auth token for the newly created wallet"
    },
    "services.universalwallet.v1.CreateWalletResponse.token_id": {
      "name": "token_id",
      "full_name": "services.universalwallet.v1.CreateWalletResponse.token_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token ID of the newly generated token"
    },
    "services.universalwallet.v1.CreateWalletResponse.wallet": {
      "name": "wallet",
      "full_name": "services.universalwallet.v1.CreateWalletResponse.wallet",
      "label": "LABEL_OPTIONAL",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": "Wallet configuration"
    },
    "services.universalwallet.v1.DeleteItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.DeleteItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item to delete"
    },
    "services.universalwallet.v1.DeleteWalletRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.universalwallet.v1.DeleteWalletRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the account to delete.\nMutually exclusive with `email` and `walletId`."
    },
    "services.universalwallet.v1.DeleteWalletRequest.email": {
      "name": "email",
      "full_name": "services.universalwallet.v1.DeleteWalletRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of account to delete.\nMutually exclusive with `walletId` and `didUri`."
    },
    "services.universalwallet.v1.DeleteWalletRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.universalwallet.v1.DeleteWalletRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of account to delete.\nMutually exclusive with `email` and `didUri`."
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest.token_description": {
      "name": "token_description",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenRequest.token_description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse.auth_token": {
      "name": "auth_token",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenResponse.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.GenerateAuthTokenResponse.token_id": {
      "name": "token_id",
      "full_name": "services.universalwallet.v1.GenerateAuthTokenResponse.token_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.GetItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.GetItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item in wallet"
    },
    "services.universalwallet.v1.GetItemResponse.item_json": {
      "name": "item_json",
      "full_name": "services.universalwallet.v1.GetItemResponse.item_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item data as a JSON string"
    },
    "services.universalwallet.v1.GetItemResponse.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.GetItemResponse.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Type of item specified when item was inserted into wallet"
    },
    "services.universalwallet.v1.GetMyInfoResponse.wallet": {
      "name": "wallet",
      "full_name": "services.universalwallet.v1.GetMyInfoResponse.wallet",
      "label": "LABEL_OPTIONAL",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": "Wallet configuration"
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityRequest.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.GetWalletFromExternalIdentityRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "WalletExternalIdentity",
      "full_type": "services.provider.v1.WalletExternalIdentity",
      "description": ""
    },
    "services.universalwallet.v1.GetWalletFromExternalIdentityResponse.wallet": {
      "name": "wallet",
      "full_name": "services.universalwallet.v1.GetWalletFromExternalIdentityResponse.wallet",
      "label": "LABEL_OPTIONAL",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": "Wallet configuration"
    },
    "services.universalwallet.v1.GetWalletInfoRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.universalwallet.v1.GetWalletInfoRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of the wallet to retrieve"
    },
    "services.universalwallet.v1.GetWalletInfoResponse.wallet": {
      "name": "wallet",
      "full_name": "services.universalwallet.v1.GetWalletInfoResponse.wallet",
      "label": "LABEL_OPTIONAL",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": "Wallet configuration"
    },
    "services.universalwallet.v1.InsertItemRequest.item_json": {
      "name": "item_json",
      "full_name": "services.universalwallet.v1.InsertItemRequest.item_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Document to insert; must be stringified JSON"
    },
    "services.universalwallet.v1.InsertItemRequest.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.InsertItemRequest.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item type (ex. \"VerifiableCredential\")",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.InsertItemResponse.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.InsertItemResponse.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item inserted into wallet"
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `ListCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.ListByVerificationTemplateRequest.verification_template_id": {
      "name": "verification_template_id",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateRequest.verification_template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of verification template to list matching credentials"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `ListByVerificationTemplateRequest`"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.universalwallet.v1.ListByVerificationTemplateResponse.items": {
      "name": "items",
      "full_name": "services.universalwallet.v1.ListByVerificationTemplateResponse.items",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Array of query results, as JSON strings"
    },
    "services.universalwallet.v1.ListWalletsRequest.filter": {
      "name": "filter",
      "full_name": "services.universalwallet.v1.ListWalletsRequest.filter",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.ListWalletsResponse.wallets": {
      "name": "wallets",
      "full_name": "services.universalwallet.v1.ListWalletsResponse.wallets",
      "label": "LABEL_REPEATED",
      "type": "WalletConfiguration",
      "full_type": "services.provider.v1.WalletConfiguration",
      "description": ""
    },
    "services.universalwallet.v1.RemoveExternalIdentityRequest.identity": {
      "name": "identity",
      "full_name": "services.universalwallet.v1.RemoveExternalIdentityRequest.identity",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The user identity to remove from the wallet\nThis can be an email address or phone number (formatted as +[country code][phone number])"
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest.token_id": {
      "name": "token_id",
      "full_name": "services.universalwallet.v1.RevokeAuthTokenRequest.token_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token ID of the token to revoke"
    },
    "services.universalwallet.v1.RevokeAuthTokenRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.universalwallet.v1.RevokeAuthTokenRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of the wallet to from which to revoke the token"
    },
    "services.universalwallet.v1.SearchRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.SearchRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `SearchResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.SearchRequest.query": {
      "name": "query",
      "full_name": "services.universalwallet.v1.SearchRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL Query to execute against items in wallet"
    },
    "services.universalwallet.v1.SearchResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.SearchResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `SearchRequest`"
    },
    "services.universalwallet.v1.SearchResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.universalwallet.v1.SearchResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.universalwallet.v1.SearchResponse.items": {
      "name": "items",
      "full_name": "services.universalwallet.v1.SearchResponse.items",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Array of query results, as JSON strings"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.UpdateItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item in wallet"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.UpdateItemRequest.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item type (ex. \"VerifiableCredential\")",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.auxiliary_fields": {
      "name": "auxiliary_fields",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.auxiliary_fields",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "The auxiliary fields of the credential. This is a mapping between the order of an auxiliary field (0 or 1) and the field name."
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.background_color": {
      "name": "background_color",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.background_color",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Background color, in hex format, of credential when stored in an Apple Wallet."
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.foreground_color": {
      "name": "foreground_color",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.foreground_color",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Foreground color, in hex format, of credential when stored in an Apple Wallet."
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.label_color": {
      "name": "label_color",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.label_color",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Label color, in hex format, of credential when stored in an Apple Wallet."
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.primary_field": {
      "name": "primary_field",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.primary_field",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the template field which should be used as the primary field of a credential."
    },
    "services.verifiablecredentials.templates.v1.AppleWalletOptions.secondary_fields": {
      "name": "secondary_fields",
      "full_name": "services.verifiablecredentials.templates.v1.AppleWalletOptions.secondary_fields",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "The secondary fields of the credential. This is a mapping between the order of a secondary field (0 or 1) and the field name."
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "FieldOrdering",
      "full_type": "services.verifiablecredentials.templates.v1.FieldOrdering",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields": {
      "name": "allow_additional_fields",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether credentials may be issued against this template which have fields\nnot specified in `fields`"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.apple_wallet_options": {
      "name": "apple_wallet_options",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.apple_wallet_options",
      "label": "LABEL_OPTIONAL",
      "type": "AppleWalletOptions",
      "full_type": "services.verifiablecredentials.templates.v1.AppleWalletOptions",
      "description": "Options for rendering the template in Apple Wallet"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable description of template"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.field_ordering": {
      "name": "field_ordering",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.field_ordering",
      "label": "LABEL_REPEATED",
      "type": "FieldOrderingEntry",
      "full_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldOrderingEntry",
      "description": "Optional map describing how to order and categorize the fields within the template. The key of this map is the field `name`.\nIf not provided, this will be auto-generated."
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
      "description": "Fields which compose the template"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Name of new template. Must be a unique identifier within its ecosystem."
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable name of template"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data": {
      "name": "data",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Created template"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.credential_template_id": {
      "name": "credential_template_id",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.credential_template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Source credential template, used for verifying that the specified `fields` are present in the credential template"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable description of template"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.FieldsEntry",
      "description": "Fields which will be required in the verification proof template\n\nTODO - Add support for predicate types - currently only equality."
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Name of new template. Must be a unique identifier within its ecosystem."
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateRequest.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable name of template"
    },
    "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse.data": {
      "name": "data",
      "full_name": "services.verifiablecredentials.templates.v1.CreateVerificationTemplateResponse.data",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateData",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to delete"
    },
    "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest.verification_template_id": {
      "name": "verification_template_id",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteVerificationTemplateRequest.verification_template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering.order": {
      "name": "order",
      "full_name": "services.verifiablecredentials.templates.v1.FieldOrdering.order",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "The order of the field; must be unique within the Template. Fields are sorted by order ascending when displaying a credential.\nField orders must be contiguous from `0` to the number of fields minus 1."
    },
    "services.verifiablecredentials.templates.v1.FieldOrdering.section": {
      "name": "section",
      "full_name": "services.verifiablecredentials.templates.v1.FieldOrdering.section",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The human-readable name of the section this field appears in; used to group together fields when displaying a credential.\nSections must be contiguous with respect to `order`."
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to fetch"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template": {
      "name": "template",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Template fetched by ID"
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.GetVerificationTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to fetch"
    },
    "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse.template": {
      "name": "template",
      "full_name": "services.verifiablecredentials.templates.v1.GetVerificationTemplateResponse.template",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateData",
      "description": "Template fetched by ID"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `ListCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query": {
      "name": "query",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `ListCredentialTemplatesRequest`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates": {
      "name": "templates",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
      "label": "LABEL_REPEATED",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Templates found by query"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `ListCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.query": {
      "name": "query",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `ListVerificationTemplatesRequest`"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.templates": {
      "name": "templates",
      "full_name": "services.verifiablecredentials.templates.v1.ListVerificationTemplatesResponse.templates",
      "label": "LABEL_REPEATED",
      "type": "VerificationTemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateData",
      "description": "Templates found by query"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `SearchCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query": {
      "name": "query",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `SearchCredentialTemplatesRequest`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json": {
      "name": "items_json",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Raw JSON data returned from query"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "FieldOrdering",
      "full_type": "services.verifiablecredentials.templates.v1.FieldOrdering",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields": {
      "name": "allow_additional_fields",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether credentials issued against this template may\ncontain fields not defined by template"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.apple_wallet_options": {
      "name": "apple_wallet_options",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.apple_wallet_options",
      "label": "LABEL_OPTIONAL",
      "type": "AppleWalletOptions",
      "full_type": "services.verifiablecredentials.templates.v1.AppleWalletOptions",
      "description": "Options for rendering the template in Apple Wallet"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.created_by": {
      "name": "created_by",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.created_by",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template creator"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.date_created": {
      "name": "date_created",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.date_created",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Date when template was created as ISO 8601 utc string"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable template description"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of ecosystem in which template resides"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.field_ordering": {
      "name": "field_ordering",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.field_ordering",
      "label": "LABEL_REPEATED",
      "type": "FieldOrderingEntry",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData.FieldOrderingEntry",
      "description": "Map describing how to order and categorize the fields within the template. The key of this map is the field `name`."
    },
    "services.verifiablecredentials.templates.v1.TemplateData.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
      "description": "Fields defined for the template"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template ID"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template name"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI pointing to template JSON schema document"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable template title"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.type": {
      "name": "type",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template type (`VerifiableCredential`)"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.version": {
      "name": "version",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.version",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Template version number"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable description of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.optional": {
      "name": "optional",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.optional",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether this field may be omitted when a credential is issued against the template"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable name of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.type": {
      "name": "type",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.type",
      "label": "LABEL_OPTIONAL",
      "type": "FieldType",
      "full_type": "services.verifiablecredentials.templates.v1.FieldType",
      "description": "The type of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.uri_data": {
      "name": "uri_data",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.uri_data",
      "label": "LABEL_OPTIONAL",
      "type": "UriFieldData",
      "full_type": "services.verifiablecredentials.templates.v1.UriFieldData",
      "description": "How to deal with this URI field when rendering credential. Only use if `type` is `URI`."
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateFieldPatch.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable description of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateFieldPatch.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable name of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateFieldPatch.uri_data": {
      "name": "uri_data",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateFieldPatch.uri_data",
      "label": "LABEL_OPTIONAL",
      "type": "UriFieldData",
      "full_type": "services.verifiablecredentials.templates.v1.UriFieldData",
      "description": "How to deal with this URI field when rendering credential. Only use if `type` is `URI`."
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "FieldOrdering",
      "full_type": "services.verifiablecredentials.templates.v1.FieldOrdering",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateFieldPatch",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateFieldPatch",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.apple_wallet_options": {
      "name": "apple_wallet_options",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.apple_wallet_options",
      "label": "LABEL_OPTIONAL",
      "type": "AppleWalletOptions",
      "full_type": "services.verifiablecredentials.templates.v1.AppleWalletOptions",
      "description": "New Apple Wallet configuration"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New human-readable description of Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.field_ordering": {
      "name": "field_ordering",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.field_ordering",
      "label": "LABEL_REPEATED",
      "type": "FieldOrderingEntry",
      "full_type": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldOrderingEntry",
      "description": "New field ordering options. See documentation for template creation for usage information."
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.FieldsEntry",
      "description": "Fields to update within the Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of Template to update"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateRequest.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New human-readable title of Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse.updated_template": {
      "name": "updated_template",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateCredentialTemplateResponse.updated_template",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "The Template after the update has been applied"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateFieldPatch",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New human-readable description of Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.FieldsEntry",
      "description": "Fields to update within the Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of Template to update"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateRequest.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "New human-readable title of Template"
    },
    "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse.template": {
      "name": "template",
      "full_name": "services.verifiablecredentials.templates.v1.UpdateVerificationTemplateResponse.template",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateData",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.UriFieldData.mime_type": {
      "name": "mime_type",
      "full_name": "services.verifiablecredentials.templates.v1.UriFieldData.mime_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Expected MIME Type of content pointed to by URI. Can be generic (eg, \"image/\") or specific (\"image/png\").\nDefaults to \"application/octet-stream\"."
    },
    "services.verifiablecredentials.templates.v1.UriFieldData.render_method": {
      "name": "render_method",
      "full_name": "services.verifiablecredentials.templates.v1.UriFieldData.render_method",
      "label": "LABEL_OPTIONAL",
      "type": "UriRenderMethod",
      "full_type": "services.verifiablecredentials.templates.v1.UriRenderMethod",
      "description": "How to display the URI value when rendering a credential."
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationTemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.created_by": {
      "name": "created_by",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.created_by",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template creator"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.credential_template_id": {
      "name": "credential_template_id",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.credential_template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Source credential template, used for verifying that the specified `fields` are present in the credential template"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.date_created": {
      "name": "date_created",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.date_created",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Date when template was created as ISO 8601 utc string"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable template description"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of ecosystem in which template resides"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationTemplateData.FieldsEntry",
      "description": "Fields defined for the template"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template ID"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template name"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.title": {
      "name": "title",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.title",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable template title"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.type": {
      "name": "type",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template type (`VerificationTemplate`)"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateData.version": {
      "name": "version",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateData.version",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Template version number"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField.field_share_type": {
      "name": "field_share_type",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateField.field_share_type",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationShareType",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationShareType",
      "description": "Whether this field may be omitted on proof creation"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateField.usage_policy": {
      "name": "usage_policy",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateField.usage_policy",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "User-facing explanation of what is done with this data\n\nTODO - Future work supporting proof conditionals/ranges/etc"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.field_share_type": {
      "name": "field_share_type",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.field_share_type",
      "label": "LABEL_OPTIONAL",
      "type": "VerificationShareType",
      "full_type": "services.verifiablecredentials.templates.v1.VerificationShareType",
      "description": "Human-readable name of the field"
    },
    "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.usage_policy": {
      "name": "usage_policy",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationTemplateFieldPatch.usage_policy",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "User-facing explanation of what is done with this data"
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The JSON document that contains the credential offer"
    },
    "services.verifiablecredentials.v1.AcceptCredentialRequest.item_id": {
      "name": "item_id",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the credential offer (Parameter ID inside the JSON document)",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialResponse.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The JSON document that contains the issued credential.\nThis item is already stored in the wallet."
    },
    "services.verifiablecredentials.v1.AcceptCredentialResponse.item_id": {
      "name": "item_id",
      "full_name": "services.verifiablecredentials.v1.AcceptCredentialResponse.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the item in the wallet that contains the issued credential"
    },
    "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id": {
      "name": "credential_status_id",
      "full_name": "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Credential Status ID to check. This is not the same as the credential's ID."
    },
    "services.verifiablecredentials.v1.CheckStatusResponse.revoked": {
      "name": "revoked",
      "full_name": "services.verifiablecredentials.v1.CheckStatusResponse.revoked",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "The credential's revocation status"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.generate_share_url": {
      "name": "generate_share_url",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.generate_share_url",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "If true, a short URL link will be generated that can be used to share the credential offer with the holder.\nThis link will point to the credential offer in the wallet app.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.holder_binding": {
      "name": "holder_binding",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.holder_binding",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "If true, the credential will be issued with holder binding by specifying\nthe holder DID in the credential subject",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.include_governance": {
      "name": "include_governance",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.include_governance",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "If true, the issued credential will contain an attestation of the issuer's membership in the ecosystem's\nTrust Registry.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.signature_type": {
      "name": "signature_type",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.signature_type",
      "label": "LABEL_OPTIONAL",
      "type": "SignatureType",
      "full_type": "services.verifiablecredentials.v1.SignatureType",
      "description": "The type of signature to use when signing the credential. Defaults to `EXPERIMENTAL`.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.template_id": {
      "name": "template_id",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to use"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferRequest.values_json": {
      "name": "values_json",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferRequest.values_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON document string with keys corresponding to the fields of\nthe template referenced by `template_id`"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferResponse.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The JSON document that contains the credential offer"
    },
    "services.verifiablecredentials.v1.CreateCredentialOfferResponse.share_url": {
      "name": "share_url",
      "full_name": "services.verifiablecredentials.v1.CreateCredentialOfferResponse.share_url",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "If requested, a URL that can be used to share the credential offer with the holder.\nThis is a short URL that can be used in a QR code and will redirect the\nholder to the credential offer using the wallet app."
    },
    "services.verifiablecredentials.v1.CreateProofRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "A valid JSON-LD Verifiable Credential document string\nwith an unbound signature. The proof will be derived from this\ndocument directly. The document will not be stored in the wallet."
    },
    "services.verifiablecredentials.v1.CreateProofRequest.item_id": {
      "name": "item_id",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of wallet item stored in a Trinsic cloud wallet"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.nonce": {
      "name": "nonce",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.nonce",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Nonce value used to derive the proof. If not specified, a random nonce will be generated.\nThis value may be represented in base64 format in the proof model.",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json": {
      "name": "reveal_document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "A valid JSON-LD frame describing which fields should be\nrevealed in the generated proof.\nIf unspecified, all fields in the document will be revealed"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_template": {
      "name": "reveal_template",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.reveal_template",
      "label": "LABEL_OPTIONAL",
      "type": "RevealTemplateAttributes",
      "full_type": "services.verifiablecredentials.v1.RevealTemplateAttributes",
      "description": "Information about what sections of the document to reveal"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.use_verifiable_presentation": {
      "name": "use_verifiable_presentation",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.use_verifiable_presentation",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Wrap the output in a verifiable presentation.\nIf the credential used in the proof is bound to the holder DID,\nthe output will always use a verifiable presentation and this field will be ignored."
    },
    "services.verifiablecredentials.v1.CreateProofRequest.verification_template_id": {
      "name": "verification_template_id",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.verification_template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Id of verification template with which to construct the JSON-LD proof document"
    },
    "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json": {
      "name": "proof_document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Valid JSON-LD proof for the specified credential"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.expiration_date": {
      "name": "expiration_date",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.expiration_date",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ISO8601 expiration UTC date of the credential. This is a reserved field in the VC specification.\nIf specified, the issued credential will contain an expiration date.\nhttps://www.w3.org/TR/vc-data-model/#expiration"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.include_governance": {
      "name": "include_governance",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.include_governance",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "If true, the issued credential will contain an attestation of the issuer's membership in the ecosystem's\nTrust Registry."
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.save_copy": {
      "name": "save_copy",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.save_copy",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Save a copy of the issued credential to this user's wallet. This copy will only contain\nthe credential data, but not the secret proof value. Issuers may use this data to\nkeep track of the details for revocation status."
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.signature_type": {
      "name": "signature_type",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.signature_type",
      "label": "LABEL_OPTIONAL",
      "type": "SignatureType",
      "full_type": "services.verifiablecredentials.v1.SignatureType",
      "description": "The type of signature to use when signing the credential. Defaults to `EXPERIMENTAL`."
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id": {
      "name": "template_id",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to use"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json": {
      "name": "values_json",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON document string with keys corresponding to the fields of\nthe template referenced by `template_id`"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Verifiable Credential document, in JSON-LD form,\nconstructed from the specified template and values; signed\nwith public key tied to caller of `IssueFromTemplateRequest`"
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.RejectCredentialRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The JSON document that contains the credential offer"
    },
    "services.verifiablecredentials.v1.RejectCredentialRequest.item_id": {
      "name": "item_id",
      "full_name": "services.verifiablecredentials.v1.RejectCredentialRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ID of the credential offer (Parameter ID inside the JSON document)",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.RevealTemplateAttributes.template_attributes": {
      "name": "template_attributes",
      "full_name": "services.verifiablecredentials.v1.RevealTemplateAttributes.template_attributes",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "A list of document attributes to reveal. If unset, all attributes will be returned."
    },
    "services.verifiablecredentials.v1.SendRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.verifiablecredentials.v1.SendRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID URI of the recipient"
    },
    "services.verifiablecredentials.v1.SendRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.SendRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON document to send to recipient"
    },
    "services.verifiablecredentials.v1.SendRequest.email": {
      "name": "email",
      "full_name": "services.verifiablecredentials.v1.SendRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of user to whom you'll send the item"
    },
    "services.verifiablecredentials.v1.SendRequest.phone_number": {
      "name": "phone_number",
      "full_name": "services.verifiablecredentials.v1.SendRequest.phone_number",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SMS of user to whom you'll send the item"
    },
    "services.verifiablecredentials.v1.SendRequest.send_notification": {
      "name": "send_notification",
      "full_name": "services.verifiablecredentials.v1.SendRequest.send_notification",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Send email notification that credential has been sent to a wallet",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.SendRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.verifiablecredentials.v1.SendRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Wallet ID of the recipient within the ecosystem"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id": {
      "name": "credential_status_id",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Credential Status ID to update. This is not the same as the credential's ID."
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.revoked": {
      "name": "revoked",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest.revoked",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "New revocation status of credential"
    },
    "services.verifiablecredentials.v1.ValidationMessage.is_valid": {
      "name": "is_valid",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage.is_valid",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether this validation check passed"
    },
    "services.verifiablecredentials.v1.ValidationMessage.messages": {
      "name": "messages",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage.messages",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "If validation failed, contains messages explaining why"
    },
    "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json": {
      "name": "proof_document_json",
      "full_name": "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON-LD proof document string to verify"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "ValidationMessage",
      "full_type": "services.verifiablecredentials.v1.ValidationMessage",
      "description": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.is_valid": {
      "name": "is_valid",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether all validations in `validation_results` passed"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_results": {
      "name": "validation_results",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.validation_results",
      "label": "LABEL_REPEATED",
      "type": "ValidationResultsEntry",
      "full_type": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
      "description": "Results of each validation check performed,\nsuch as schema conformance, revocation status, signature, etc.\nDetailed results are provided for failed validations."
    }
  },
  "enums": {
    "services.account.v1.ConfirmationMethod": {
      "name": "ConfirmationMethod",
      "full_name": "services.account.v1.ConfirmationMethod",
      "description": "Confirmation method type for two-factor workflows",
      "values": [
        "services.account.v1.ConfirmationMethod.None",
        "services.account.v1.ConfirmationMethod.Email",
        "services.account.v1.ConfirmationMethod.Sms",
        "services.account.v1.ConfirmationMethod.ConnectedDevice",
        "services.account.v1.ConfirmationMethod.Other"
      ]
    },
    "services.common.v1.OrderDirection": {
      "name": "OrderDirection",
      "full_name": "services.common.v1.OrderDirection",
      "description": "The direction to order results",
      "values": [
        "services.common.v1.OrderDirection.ASCENDING",
        "services.common.v1.OrderDirection.DESCENDING"
      ]
    },
    "services.common.v1.ResponseStatus": {
      "name": "ResponseStatus",
      "full_name": "services.common.v1.ResponseStatus",
      "description": "",
      "values": [
        "services.common.v1.ResponseStatus.SUCCESS",
        "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
        "services.common.v1.ResponseStatus.WALLET_EXISTS",
        "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
        "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
        "services.common.v1.ResponseStatus.UNKNOWN_ERROR"
      ]
    },
    "services.common.v1.SupportedDidMethod": {
      "name": "SupportedDidMethod",
      "full_name": "services.common.v1.SupportedDidMethod",
      "description": "Enum of all supported DID Methods\nhttps://docs.godiddy.com/en/supported-methods",
      "values": [
        "services.common.v1.SupportedDidMethod.KEY",
        "services.common.v1.SupportedDidMethod.ION",
        "services.common.v1.SupportedDidMethod.INDY"
      ]
    },
    "services.connect.v1.IDVSessionState": {
      "name": "IDVSessionState",
      "full_name": "services.connect.v1.IDVSessionState",
      "description": "The states a VerificationSession can be in",
      "values": [
        "services.connect.v1.IDVSessionState.IDV_CREATED",
        "services.connect.v1.IDVSessionState.IDV_INITIATED",
        "services.connect.v1.IDVSessionState.IDV_AUTHENTICATING",
        "services.connect.v1.IDVSessionState.IDV_IN_PROGRESS",
        "services.connect.v1.IDVSessionState.IDV_SUCCESS",
        "services.connect.v1.IDVSessionState.IDV_FAILED"
      ]
    },
    "services.connect.v1.SessionFailCode": {
      "name": "SessionFailCode",
      "full_name": "services.connect.v1.SessionFailCode",
      "description": "The specific reason an IDVSession is in the `Failed` state",
      "values": [
        "services.connect.v1.SessionFailCode.SESSION_FAIL_NONE",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_INTERNAL",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_VERIFICATION_FAILED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_AUTHENTICATION",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_EXPIRED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_USER_CANCELED",
        "services.connect.v1.SessionFailCode.SESSION_FAIL_RP_CANCELED"
      ]
    },
    "services.connect.v1.SessionOrdering": {
      "name": "SessionOrdering",
      "full_name": "services.connect.v1.SessionOrdering",
      "description": "Controls how sessions are ordered in `ListSessions`",
      "values": [
        "services.connect.v1.SessionOrdering.CREATED",
        "services.connect.v1.SessionOrdering.UPDATED",
        "services.connect.v1.SessionOrdering.STATE"
      ]
    },
    "services.connect.v1.VerificationFailCode": {
      "name": "VerificationFailCode",
      "full_name": "services.connect.v1.VerificationFailCode",
      "description": "The specific reason a Verification is in the `Failed` state",
      "values": [
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_NONE",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INTERNAL",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INVALID_IMAGE",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INAUTHENTIC",
        "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT"
      ]
    },
    "services.connect.v1.VerificationState": {
      "name": "VerificationState",
      "full_name": "services.connect.v1.VerificationState",
      "description": "The states an individual Verification can be in",
      "values": [
        "services.connect.v1.VerificationState.VERIFICATION_PENDING",
        "services.connect.v1.VerificationState.VERIFICATION_PENDING_REUSE",
        "services.connect.v1.VerificationState.VERIFICATION_STARTED",
        "services.connect.v1.VerificationState.VERIFICATION_SUCCESS",
        "services.connect.v1.VerificationState.VERIFICATION_FAILED"
      ]
    },
    "services.connect.v1.VerificationType": {
      "name": "VerificationType",
      "full_name": "services.connect.v1.VerificationType",
      "description": "The type of verification to perform",
      "values": [
        "services.connect.v1.VerificationType.GOVERNMENT_ID"
      ]
    },
    "services.provider.v1.IdentityProvider": {
      "name": "IdentityProvider",
      "full_name": "services.provider.v1.IdentityProvider",
      "description": "",
      "values": [
        "services.provider.v1.IdentityProvider.Unknown",
        "services.provider.v1.IdentityProvider.Email",
        "services.provider.v1.IdentityProvider.Phone",
        "services.provider.v1.IdentityProvider.Passkey",
        "services.provider.v1.IdentityProvider.TrinsicAuthenticator"
      ]
    },
    "services.provider.v1.IndyOptions.IndyNetwork": {
      "name": "IndyNetwork",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork",
      "description": "",
      "values": [
        "services.provider.v1.IndyOptions.IndyNetwork.Danube",
        "services.provider.v1.IndyOptions.IndyNetwork.SovrinBuilder",
        "services.provider.v1.IndyOptions.IndyNetwork.SovrinStaging",
        "services.provider.v1.IndyOptions.IndyNetwork.Sovrin",
        "services.provider.v1.IndyOptions.IndyNetwork.IdUnionTest",
        "services.provider.v1.IndyOptions.IndyNetwork.IdUnion",
        "services.provider.v1.IndyOptions.IndyNetwork.IndicioTest",
        "services.provider.v1.IndyOptions.IndyNetwork.IndicioDemo",
        "services.provider.v1.IndyOptions.IndyNetwork.Indicio"
      ]
    },
    "services.provider.v1.IonOptions.IonNetwork": {
      "name": "IonNetwork",
      "full_name": "services.provider.v1.IonOptions.IonNetwork",
      "description": "",
      "values": [
        "services.provider.v1.IonOptions.IonNetwork.TestNet",
        "services.provider.v1.IonOptions.IonNetwork.MainNet"
      ]
    },
    "services.trustregistry.v1.RegistrationStatus": {
      "name": "RegistrationStatus",
      "full_name": "services.trustregistry.v1.RegistrationStatus",
      "description": "",
      "values": [
        "services.trustregistry.v1.RegistrationStatus.CURRENT",
        "services.trustregistry.v1.RegistrationStatus.EXPIRED",
        "services.trustregistry.v1.RegistrationStatus.TERMINATED",
        "services.trustregistry.v1.RegistrationStatus.REVOKED",
        "services.trustregistry.v1.RegistrationStatus.NOT_FOUND"
      ]
    },
    "services.verifiablecredentials.templates.v1.FieldType": {
      "name": "FieldType",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType",
      "description": "Valid types for credential fields",
      "values": [
        "services.verifiablecredentials.templates.v1.FieldType.STRING",
        "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
        "services.verifiablecredentials.templates.v1.FieldType.BOOL",
        "services.verifiablecredentials.templates.v1.FieldType.DATETIME",
        "services.verifiablecredentials.templates.v1.FieldType.URI"
      ]
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod": {
      "name": "UriRenderMethod",
      "full_name": "services.verifiablecredentials.templates.v1.UriRenderMethod",
      "description": "How to display a URI value when rendering a credential.",
      "values": [
        "services.verifiablecredentials.templates.v1.UriRenderMethod.TEXT",
        "services.verifiablecredentials.templates.v1.UriRenderMethod.LINK",
        "services.verifiablecredentials.templates.v1.UriRenderMethod.INLINE_IMAGE"
      ]
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType": {
      "name": "VerificationShareType",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationShareType",
      "description": "",
      "values": [
        "services.verifiablecredentials.templates.v1.VerificationShareType.OPTIONAL",
        "services.verifiablecredentials.templates.v1.VerificationShareType.REQUIRED"
      ]
    },
    "services.verifiablecredentials.v1.SignatureType": {
      "name": "SignatureType",
      "full_name": "services.verifiablecredentials.v1.SignatureType",
      "description": "",
      "values": [
        "services.verifiablecredentials.v1.SignatureType.UNSPECIFIED",
        "services.verifiablecredentials.v1.SignatureType.STANDARD",
        "services.verifiablecredentials.v1.SignatureType.EXPERIMENTAL"
      ]
    }
  },
  "enum_values": {
    "services.account.v1.ConfirmationMethod.ConnectedDevice": {
      "name": "ConnectedDevice",
      "full_name": "services.account.v1.ConfirmationMethod.ConnectedDevice",
      "description": "Confirmation from a connected device is required",
      "value": 3
    },
    "services.account.v1.ConfirmationMethod.Email": {
      "name": "Email",
      "full_name": "services.account.v1.ConfirmationMethod.Email",
      "description": "Email confirmation required",
      "value": 1
    },
    "services.account.v1.ConfirmationMethod.None": {
      "name": "None",
      "full_name": "services.account.v1.ConfirmationMethod.None",
      "description": "No confirmation required",
      "value": 0
    },
    "services.account.v1.ConfirmationMethod.Other": {
      "name": "Other",
      "full_name": "services.account.v1.ConfirmationMethod.Other",
      "description": "Third-party method of confirmation is required",
      "value": 10
    },
    "services.account.v1.ConfirmationMethod.Sms": {
      "name": "Sms",
      "full_name": "services.account.v1.ConfirmationMethod.Sms",
      "description": "SMS confirmation required",
      "value": 2
    },
    "services.common.v1.OrderDirection.ASCENDING": {
      "name": "ASCENDING",
      "full_name": "services.common.v1.OrderDirection.ASCENDING",
      "description": "",
      "value": 0
    },
    "services.common.v1.OrderDirection.DESCENDING": {
      "name": "DESCENDING",
      "full_name": "services.common.v1.OrderDirection.DESCENDING",
      "description": "",
      "value": 1
    },
    "services.common.v1.ResponseStatus.ITEM_NOT_FOUND": {
      "name": "ITEM_NOT_FOUND",
      "full_name": "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
      "description": "",
      "value": 20
    },
    "services.common.v1.ResponseStatus.SERIALIZATION_ERROR": {
      "name": "SERIALIZATION_ERROR",
      "full_name": "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
      "description": "",
      "value": 200
    },
    "services.common.v1.ResponseStatus.SUCCESS": {
      "name": "SUCCESS",
      "full_name": "services.common.v1.ResponseStatus.SUCCESS",
      "description": "",
      "value": 0
    },
    "services.common.v1.ResponseStatus.UNKNOWN_ERROR": {
      "name": "UNKNOWN_ERROR",
      "full_name": "services.common.v1.ResponseStatus.UNKNOWN_ERROR",
      "description": "",
      "value": 100
    },
    "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED": {
      "name": "WALLET_ACCESS_DENIED",
      "full_name": "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
      "description": "",
      "value": 10
    },
    "services.common.v1.ResponseStatus.WALLET_EXISTS": {
      "name": "WALLET_EXISTS",
      "full_name": "services.common.v1.ResponseStatus.WALLET_EXISTS",
      "description": "",
      "value": 11
    },
    "services.common.v1.SupportedDidMethod.INDY": {
      "name": "INDY",
      "full_name": "services.common.v1.SupportedDidMethod.INDY",
      "description": "The did:sov method -- Hyperledger Indy based by Sovrin Foundation",
      "value": 2
    },
    "services.common.v1.SupportedDidMethod.ION": {
      "name": "ION",
      "full_name": "services.common.v1.SupportedDidMethod.ION",
      "description": "The did:ion method -- Sidetree implementation on top of Bitcoin by Microsoft",
      "value": 1
    },
    "services.common.v1.SupportedDidMethod.KEY": {
      "name": "KEY",
      "full_name": "services.common.v1.SupportedDidMethod.KEY",
      "description": "The did:key method -- all wallets use this by default",
      "value": 0
    },
    "services.connect.v1.IDVSessionState.IDV_AUTHENTICATING": {
      "name": "IDV_AUTHENTICATING",
      "full_name": "services.connect.v1.IDVSessionState.IDV_AUTHENTICATING",
      "description": "User has entered their phone number, but not yet authenticated with the code sent via SMS",
      "value": 2
    },
    "services.connect.v1.IDVSessionState.IDV_CREATED": {
      "name": "IDV_CREATED",
      "full_name": "services.connect.v1.IDVSessionState.IDV_CREATED",
      "description": "Session has been created, but not yet shown to user",
      "value": 0
    },
    "services.connect.v1.IDVSessionState.IDV_FAILED": {
      "name": "IDV_FAILED",
      "full_name": "services.connect.v1.IDVSessionState.IDV_FAILED",
      "description": "The session failed; reason is present in `fail_code`.",
      "value": 5
    },
    "services.connect.v1.IDVSessionState.IDV_INITIATED": {
      "name": "IDV_INITIATED",
      "full_name": "services.connect.v1.IDVSessionState.IDV_INITIATED",
      "description": "Session has been shown to user (iframe / popup opened), but\nuser has not yet logged in.",
      "value": 1
    },
    "services.connect.v1.IDVSessionState.IDV_IN_PROGRESS": {
      "name": "IDV_IN_PROGRESS",
      "full_name": "services.connect.v1.IDVSessionState.IDV_IN_PROGRESS",
      "description": "User has been authenticated and is performing identity verification",
      "value": 3
    },
    "services.connect.v1.IDVSessionState.IDV_SUCCESS": {
      "name": "IDV_SUCCESS",
      "full_name": "services.connect.v1.IDVSessionState.IDV_SUCCESS",
      "description": "Session was completed successfully and IDV data is available to RP",
      "value": 4
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_AUTHENTICATION": {
      "name": "SESSION_FAIL_AUTHENTICATION",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_AUTHENTICATION",
      "description": "The session failed because the user failed to authenticate with their phone number too many times.",
      "value": 3
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_EXPIRED": {
      "name": "SESSION_FAIL_EXPIRED",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_EXPIRED",
      "description": "The session expired",
      "value": 4
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_INTERNAL": {
      "name": "SESSION_FAIL_INTERNAL",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_INTERNAL",
      "description": "An internal Trinsic error caused this session to fail",
      "value": 1
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_NONE": {
      "name": "SESSION_FAIL_NONE",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_NONE",
      "description": "The Session is not in a failure state.",
      "value": 0
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_RP_CANCELED": {
      "name": "SESSION_FAIL_RP_CANCELED",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_RP_CANCELED",
      "description": "The RP canceled the session",
      "value": 6
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_USER_CANCELED": {
      "name": "SESSION_FAIL_USER_CANCELED",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_USER_CANCELED",
      "description": "The user canceled / rejected the session",
      "value": 5
    },
    "services.connect.v1.SessionFailCode.SESSION_FAIL_VERIFICATION_FAILED": {
      "name": "SESSION_FAIL_VERIFICATION_FAILED",
      "full_name": "services.connect.v1.SessionFailCode.SESSION_FAIL_VERIFICATION_FAILED",
      "description": "The session failed because one or more of the verifications failed.\nThe reason for the failure is present in the `fail_reason` field of the relevant `Verification` object(s).",
      "value": 2
    },
    "services.connect.v1.SessionOrdering.CREATED": {
      "name": "CREATED",
      "full_name": "services.connect.v1.SessionOrdering.CREATED",
      "description": "Order sessions according to when they were created",
      "value": 0
    },
    "services.connect.v1.SessionOrdering.STATE": {
      "name": "STATE",
      "full_name": "services.connect.v1.SessionOrdering.STATE",
      "description": "Order sessions according to their numerical state",
      "value": 2
    },
    "services.connect.v1.SessionOrdering.UPDATED": {
      "name": "UPDATED",
      "full_name": "services.connect.v1.SessionOrdering.UPDATED",
      "description": "Order sessions according to when they last changed state",
      "value": 1
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INAUTHENTIC": {
      "name": "VERIFICATION_FAIL_INAUTHENTIC",
      "full_name": "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INAUTHENTIC",
      "description": "The identity data/images provided are suspected to be inauthentic, fraudulent, or forged.",
      "value": 3
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INTERNAL": {
      "name": "VERIFICATION_FAIL_INTERNAL",
      "full_name": "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INTERNAL",
      "description": "An internal Trinsic error caused this verification to fail",
      "value": 1
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INVALID_IMAGE": {
      "name": "VERIFICATION_FAIL_INVALID_IMAGE",
      "full_name": "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_INVALID_IMAGE",
      "description": "The image(s) provided for this verification were either too low-quality, not of the correct type, or otherwise\nunable to be processed.\nThis failure reason is non-terminal; the user is able to retry the verification.",
      "value": 2
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_NONE": {
      "name": "VERIFICATION_FAIL_NONE",
      "full_name": "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_NONE",
      "description": "The verification is not in a failure state",
      "value": 0
    },
    "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT": {
      "name": "VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT",
      "full_name": "services.connect.v1.VerificationFailCode.VERIFICATION_FAIL_UNSUPPORTED_DOCUMENT",
      "description": "The document provided is either of an unsupported type, or from an unsupported country.",
      "value": 4
    },
    "services.connect.v1.VerificationState.VERIFICATION_FAILED": {
      "name": "VERIFICATION_FAILED",
      "full_name": "services.connect.v1.VerificationState.VERIFICATION_FAILED",
      "description": "This verification has failed",
      "value": 4
    },
    "services.connect.v1.VerificationState.VERIFICATION_PENDING": {
      "name": "VERIFICATION_PENDING",
      "full_name": "services.connect.v1.VerificationState.VERIFICATION_PENDING",
      "description": "This verification has not yet been performed in the flow",
      "value": 0
    },
    "services.connect.v1.VerificationState.VERIFICATION_PENDING_REUSE": {
      "name": "VERIFICATION_PENDING_REUSE",
      "full_name": "services.connect.v1.VerificationState.VERIFICATION_PENDING_REUSE",
      "description": "This verification has been started by the user, and can be reused from a previous verification, but the user\nhas not yet decided whether to reuse it.",
      "value": 1
    },
    "services.connect.v1.VerificationState.VERIFICATION_STARTED": {
      "name": "VERIFICATION_STARTED",
      "full_name": "services.connect.v1.VerificationState.VERIFICATION_STARTED",
      "description": "This verification has been started by the user, but not yet completed",
      "value": 2
    },
    "services.connect.v1.VerificationState.VERIFICATION_SUCCESS": {
      "name": "VERIFICATION_SUCCESS",
      "full_name": "services.connect.v1.VerificationState.VERIFICATION_SUCCESS",
      "description": "This verification has been successfully completed",
      "value": 3
    },
    "services.connect.v1.VerificationType.GOVERNMENT_ID": {
      "name": "GOVERNMENT_ID",
      "full_name": "services.connect.v1.VerificationType.GOVERNMENT_ID",
      "description": "Government-issued ID (driver's license, passport, etc)",
      "value": 0
    },
    "services.provider.v1.IdentityProvider.Email": {
      "name": "Email",
      "full_name": "services.provider.v1.IdentityProvider.Email",
      "description": "Identity provider is email",
      "value": 1
    },
    "services.provider.v1.IdentityProvider.Passkey": {
      "name": "Passkey",
      "full_name": "services.provider.v1.IdentityProvider.Passkey",
      "description": "Identity provider is passkey (WebAuthn) -- for Trinsic internal use only",
      "value": 3
    },
    "services.provider.v1.IdentityProvider.Phone": {
      "name": "Phone",
      "full_name": "services.provider.v1.IdentityProvider.Phone",
      "description": "Identity provider is phone",
      "value": 2
    },
    "services.provider.v1.IdentityProvider.TrinsicAuthenticator": {
      "name": "TrinsicAuthenticator",
      "full_name": "services.provider.v1.IdentityProvider.TrinsicAuthenticator",
      "description": "Identity provider is passkey using Trinsic Authenticator for mobile phones",
      "value": 4
    },
    "services.provider.v1.IdentityProvider.Unknown": {
      "name": "Unknown",
      "full_name": "services.provider.v1.IdentityProvider.Unknown",
      "description": "Identity provider is unknown",
      "value": 0
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Danube": {
      "name": "Danube",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.Danube",
      "description": "",
      "value": 0
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IdUnion": {
      "name": "IdUnion",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.IdUnion",
      "description": "",
      "value": 5
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IdUnionTest": {
      "name": "IdUnionTest",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.IdUnionTest",
      "description": "",
      "value": 4
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Indicio": {
      "name": "Indicio",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.Indicio",
      "description": "",
      "value": 8
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IndicioDemo": {
      "name": "IndicioDemo",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.IndicioDemo",
      "description": "",
      "value": 7
    },
    "services.provider.v1.IndyOptions.IndyNetwork.IndicioTest": {
      "name": "IndicioTest",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.IndicioTest",
      "description": "",
      "value": 6
    },
    "services.provider.v1.IndyOptions.IndyNetwork.Sovrin": {
      "name": "Sovrin",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.Sovrin",
      "description": "",
      "value": 3
    },
    "services.provider.v1.IndyOptions.IndyNetwork.SovrinBuilder": {
      "name": "SovrinBuilder",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.SovrinBuilder",
      "description": "",
      "value": 1
    },
    "services.provider.v1.IndyOptions.IndyNetwork.SovrinStaging": {
      "name": "SovrinStaging",
      "full_name": "services.provider.v1.IndyOptions.IndyNetwork.SovrinStaging",
      "description": "",
      "value": 2
    },
    "services.provider.v1.IonOptions.IonNetwork.MainNet": {
      "name": "MainNet",
      "full_name": "services.provider.v1.IonOptions.IonNetwork.MainNet",
      "description": "",
      "value": 1
    },
    "services.provider.v1.IonOptions.IonNetwork.TestNet": {
      "name": "TestNet",
      "full_name": "services.provider.v1.IonOptions.IonNetwork.TestNet",
      "description": "",
      "value": 0
    },
    "services.trustregistry.v1.RegistrationStatus.CURRENT": {
      "name": "CURRENT",
      "full_name": "services.trustregistry.v1.RegistrationStatus.CURRENT",
      "description": "Member is currently authorized, as of the time of the query",
      "value": 0
    },
    "services.trustregistry.v1.RegistrationStatus.EXPIRED": {
      "name": "EXPIRED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.EXPIRED",
      "description": "Member's authorization has expired",
      "value": 1
    },
    "services.trustregistry.v1.RegistrationStatus.NOT_FOUND": {
      "name": "NOT_FOUND",
      "full_name": "services.trustregistry.v1.RegistrationStatus.NOT_FOUND",
      "description": "Member is not associated with given credential schema in the EGF",
      "value": 10
    },
    "services.trustregistry.v1.RegistrationStatus.REVOKED": {
      "name": "REVOKED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.REVOKED",
      "description": "Member authority under specific EGF was terminated by the governing authority",
      "value": 3
    },
    "services.trustregistry.v1.RegistrationStatus.TERMINATED": {
      "name": "TERMINATED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.TERMINATED",
      "description": "Member has voluntarily ceased Issuer role under the specific EGF",
      "value": 2
    },
    "services.verifiablecredentials.templates.v1.FieldType.BOOL": {
      "name": "BOOL",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.BOOL",
      "description": "",
      "value": 2
    },
    "services.verifiablecredentials.templates.v1.FieldType.DATETIME": {
      "name": "DATETIME",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.DATETIME",
      "description": "",
      "value": 4
    },
    "services.verifiablecredentials.templates.v1.FieldType.NUMBER": {
      "name": "NUMBER",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
      "description": "",
      "value": 1
    },
    "services.verifiablecredentials.templates.v1.FieldType.STRING": {
      "name": "STRING",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.STRING",
      "description": "",
      "value": 0
    },
    "services.verifiablecredentials.templates.v1.FieldType.URI": {
      "name": "URI",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.URI",
      "description": "",
      "value": 5
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.INLINE_IMAGE": {
      "name": "INLINE_IMAGE",
      "full_name": "services.verifiablecredentials.templates.v1.UriRenderMethod.INLINE_IMAGE",
      "description": "Display URI as an inline image. Only takes effect if the template field's MIME Type is an image type.",
      "value": 2
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.LINK": {
      "name": "LINK",
      "full_name": "services.verifiablecredentials.templates.v1.UriRenderMethod.LINK",
      "description": "Display URI as a clickable link",
      "value": 1
    },
    "services.verifiablecredentials.templates.v1.UriRenderMethod.TEXT": {
      "name": "TEXT",
      "full_name": "services.verifiablecredentials.templates.v1.UriRenderMethod.TEXT",
      "description": "Display URI as text",
      "value": 0
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType.OPTIONAL": {
      "name": "OPTIONAL",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationShareType.OPTIONAL",
      "description": "",
      "value": 0
    },
    "services.verifiablecredentials.templates.v1.VerificationShareType.REQUIRED": {
      "name": "REQUIRED",
      "full_name": "services.verifiablecredentials.templates.v1.VerificationShareType.REQUIRED",
      "description": "",
      "value": 1
    },
    "services.verifiablecredentials.v1.SignatureType.EXPERIMENTAL": {
      "name": "EXPERIMENTAL",
      "full_name": "services.verifiablecredentials.v1.SignatureType.EXPERIMENTAL",
      "description": "The signature type uses BBS signatures with BLS12-381 curve (experimental).\nThis type of signature allows for selective disclosure of attributes.",
      "value": 2
    },
    "services.verifiablecredentials.v1.SignatureType.STANDARD": {
      "name": "STANDARD",
      "full_name": "services.verifiablecredentials.v1.SignatureType.STANDARD",
      "description": "The signature type uses EdDSA with the Ed25519 curve (NIST compliant).\nThis type of signature does not support selective disclosure of attributes.",
      "value": 1
    },
    "services.verifiablecredentials.v1.SignatureType.UNSPECIFIED": {
      "name": "UNSPECIFIED",
      "full_name": "services.verifiablecredentials.v1.SignatureType.UNSPECIFIED",
      "description": "The signature type is not specified. The experimental signature type will be used.",
      "value": 0
    }
  }
}
