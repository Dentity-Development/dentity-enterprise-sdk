import ServiceBase from "./ServiceBase";
import {
  CreateCredentialTemplateRequest,
  CreateCredentialTemplateResponse,
  CredentialTemplatesDefinition,
  DeleteCredentialTemplateRequest,
  DeleteCredentialTemplateResponse,
  GetCredentialTemplateRequest,
  GetCredentialTemplateResponse,
  ListCredentialTemplatesRequest,
  ListCredentialTemplatesResponse,
  SearchCredentialTemplatesRequest,
  SearchCredentialTemplatesResponse,
  ServiceOptions,
} from "./proto";

import type { Client as BrowserClient } from "nice-grpc-web";

export class TemplateService extends ServiceBase {
  client: BrowserClient<typeof CredentialTemplatesDefinition>;

  constructor(options?: ServiceOptions) {
    super(options);

    this.client = this.createClient(CredentialTemplatesDefinition);
  }
  
// BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: ..\sdk\web\src\templateService.ts

  public async create(
    request: CreateCredentialTemplateRequest
  ): Promise<CreateCredentialTemplateResponse> {
    return await this.client.create(request, {
      metadata: await this.buildMetadata(CreateCredentialTemplateRequest.encode(request).finish())
    });
  }
  public async get(
    request: GetCredentialTemplateRequest
  ): Promise<GetCredentialTemplateResponse> {
    return await this.client.get(request, {
      metadata: await this.buildMetadata(GetCredentialTemplateRequest.encode(request).finish())
    });
  }
  public async list(
    request: ListCredentialTemplatesRequest
  ): Promise<ListCredentialTemplatesResponse> {
    return await this.client.list(request, {
      metadata: await this.buildMetadata(ListCredentialTemplatesRequest.encode(request).finish())
    });
  }
  public async search(
    request: SearchCredentialTemplatesRequest
  ): Promise<SearchCredentialTemplatesResponse> {
    return await this.client.search(request, {
      metadata: await this.buildMetadata(SearchCredentialTemplatesRequest.encode(request).finish())
    });
  }
  public async delete(
    request: DeleteCredentialTemplateRequest
  ): Promise<DeleteCredentialTemplateResponse> {
    return await this.client.delete(request, {
      metadata: await this.buildMetadata(DeleteCredentialTemplateRequest.encode(request).finish())
    });
  }
// END Code generated by protoc-gen-trinsic. DO NOT EDIT.
}
