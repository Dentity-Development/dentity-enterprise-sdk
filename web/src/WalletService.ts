import ServiceBase from "./ServiceBase";
import {
    DeleteItemRequest,
    DeleteItemResponse,
    GetItemRequest,
    GetItemResponse,
    InsertItemRequest,
    InsertItemResponse,
    SearchRequest,
    SearchResponse,
    ServiceOptions,
    UniversalWalletDefinition, UpdateItemRequest, UpdateItemResponse,
} from "./proto";

import type { Client as BrowserClient } from "nice-grpc-web";

export class WalletService extends ServiceBase {
  client: BrowserClient<typeof UniversalWalletDefinition>;

  constructor(options?: ServiceOptions) {
    super(options);

    this.client = this.createClient(UniversalWalletDefinition);
  }

  public async search(
    request: SearchRequest = SearchRequest.fromPartial({
      query: "SELECT c.id, c.type, c.data FROM c OFFSET 0 LIMIT 100",
    })
  ): Promise<SearchResponse> {
    return this.client.search(request, {
      metadata: await this.buildMetadata(SearchRequest.encode(request).finish()),
    });
  }
// BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: /home/runner/work/sdk/sdk/web/src/WalletService.ts

  public async getItem(
    request: GetItemRequest
  ): Promise<GetItemResponse> {
    return this.client.getItem(request, {
      metadata: await this.buildMetadata(GetItemRequest.encode(request).finish())
    });
  }
  public async search(
    request: SearchRequest
  ): Promise<SearchResponse> {
    return this.client.search(request, {
      metadata: await this.buildMetadata(SearchRequest.encode(request).finish())
    });
  }
  public async insertItem(
    request: InsertItemRequest
  ): Promise<InsertItemResponse> {
    return this.client.insertItem(request, {
      metadata: await this.buildMetadata(InsertItemRequest.encode(request).finish())
    });
  }
  public async updateItem(
    request: UpdateItemRequest
  ): Promise<UpdateItemResponse> {
    return this.client.updateItem(request, {
      metadata: await this.buildMetadata(UpdateItemRequest.encode(request).finish())
    });
  }
  public async deleteItem(
    request: DeleteItemRequest
  ): Promise<DeleteItemResponse> {
    return this.client.deleteItem(request, {
      metadata: await this.buildMetadata(DeleteItemRequest.encode(request).finish())
    });
  }
// END Code generated by protoc-gen-trinsic. DO NOT EDIT.
}
