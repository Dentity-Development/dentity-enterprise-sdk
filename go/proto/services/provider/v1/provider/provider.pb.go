// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.3
// source: services/provider/v1/provider.proto

package provider

import (
	account "github.com/trinsic-id/sdk/go/proto/services/account/v1/account"
	common "github.com/trinsic-id/sdk/go/proto/services/common/v1/common"
	_ "github.com/trinsic-id/sdk/go/proto/services/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DEPRECATED, will be removed April 1st 2023
// Type of participant being invited to ecosystem
type ParticipantType int32

const (
	// Participant is an individual
	ParticipantType_participant_type_individual ParticipantType = 0
	// Participant is an organization
	ParticipantType_participant_type_organization ParticipantType = 1
)

// Enum value maps for ParticipantType.
var (
	ParticipantType_name = map[int32]string{
		0: "participant_type_individual",
		1: "participant_type_organization",
	}
	ParticipantType_value = map[string]int32{
		"participant_type_individual":   0,
		"participant_type_organization": 1,
	}
)

func (x ParticipantType) Enum() *ParticipantType {
	p := new(ParticipantType)
	*p = x
	return p
}

func (x ParticipantType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_provider_v1_provider_proto_enumTypes[0].Descriptor()
}

func (ParticipantType) Type() protoreflect.EnumType {
	return &file_services_provider_v1_provider_proto_enumTypes[0]
}

func (x ParticipantType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantType.Descriptor instead.
func (ParticipantType) EnumDescriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

type InvitationStatusResponse_Status int32

const (
	// Onboarding resulted in error
	InvitationStatusResponse_Error InvitationStatusResponse_Status = 0
	// The participant has been invited
	InvitationStatusResponse_InvitationSent InvitationStatusResponse_Status = 1
	// The participant has been onboarded
	InvitationStatusResponse_Completed InvitationStatusResponse_Status = 2
	// The invite has expired
	InvitationStatusResponse_Expired InvitationStatusResponse_Status = 3
)

// Enum value maps for InvitationStatusResponse_Status.
var (
	InvitationStatusResponse_Status_name = map[int32]string{
		0: "Error",
		1: "InvitationSent",
		2: "Completed",
		3: "Expired",
	}
	InvitationStatusResponse_Status_value = map[string]int32{
		"Error":          0,
		"InvitationSent": 1,
		"Completed":      2,
		"Expired":        3,
	}
)

func (x InvitationStatusResponse_Status) Enum() *InvitationStatusResponse_Status {
	p := new(InvitationStatusResponse_Status)
	*p = x
	return p
}

func (x InvitationStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_services_provider_v1_provider_proto_enumTypes[1].Descriptor()
}

func (InvitationStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_services_provider_v1_provider_proto_enumTypes[1]
}

func (x InvitationStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationStatusResponse_Status.Descriptor instead.
func (InvitationStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{3, 0}
}

type IonOptions_IonNetwork int32

const (
	IonOptions_TestNet IonOptions_IonNetwork = 0
	IonOptions_MainNet IonOptions_IonNetwork = 1
)

// Enum value maps for IonOptions_IonNetwork.
var (
	IonOptions_IonNetwork_name = map[int32]string{
		0: "TestNet",
		1: "MainNet",
	}
	IonOptions_IonNetwork_value = map[string]int32{
		"TestNet": 0,
		"MainNet": 1,
	}
)

func (x IonOptions_IonNetwork) Enum() *IonOptions_IonNetwork {
	p := new(IonOptions_IonNetwork)
	*p = x
	return p
}

func (x IonOptions_IonNetwork) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IonOptions_IonNetwork) Descriptor() protoreflect.EnumDescriptor {
	return file_services_provider_v1_provider_proto_enumTypes[2].Descriptor()
}

func (IonOptions_IonNetwork) Type() protoreflect.EnumType {
	return &file_services_provider_v1_provider_proto_enumTypes[2]
}

func (x IonOptions_IonNetwork) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IonOptions_IonNetwork.Descriptor instead.
func (IonOptions_IonNetwork) EnumDescriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{32, 0}
}

type IndyOptions_IndyNetwork int32

const (
	IndyOptions_Danube        IndyOptions_IndyNetwork = 0
	IndyOptions_SovrinBuilder IndyOptions_IndyNetwork = 1
	IndyOptions_SovrinStaging IndyOptions_IndyNetwork = 2
	IndyOptions_Sovrin        IndyOptions_IndyNetwork = 3
	IndyOptions_IdUnionTest   IndyOptions_IndyNetwork = 4
	IndyOptions_IdUnion       IndyOptions_IndyNetwork = 5
	IndyOptions_IndicioTest   IndyOptions_IndyNetwork = 6
	IndyOptions_IndicioDemo   IndyOptions_IndyNetwork = 7
	IndyOptions_Indicio       IndyOptions_IndyNetwork = 8
)

// Enum value maps for IndyOptions_IndyNetwork.
var (
	IndyOptions_IndyNetwork_name = map[int32]string{
		0: "Danube",
		1: "SovrinBuilder",
		2: "SovrinStaging",
		3: "Sovrin",
		4: "IdUnionTest",
		5: "IdUnion",
		6: "IndicioTest",
		7: "IndicioDemo",
		8: "Indicio",
	}
	IndyOptions_IndyNetwork_value = map[string]int32{
		"Danube":        0,
		"SovrinBuilder": 1,
		"SovrinStaging": 2,
		"Sovrin":        3,
		"IdUnionTest":   4,
		"IdUnion":       5,
		"IndicioTest":   6,
		"IndicioDemo":   7,
		"Indicio":       8,
	}
)

func (x IndyOptions_IndyNetwork) Enum() *IndyOptions_IndyNetwork {
	p := new(IndyOptions_IndyNetwork)
	*p = x
	return p
}

func (x IndyOptions_IndyNetwork) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndyOptions_IndyNetwork) Descriptor() protoreflect.EnumDescriptor {
	return file_services_provider_v1_provider_proto_enumTypes[3].Descriptor()
}

func (IndyOptions_IndyNetwork) Type() protoreflect.EnumType {
	return &file_services_provider_v1_provider_proto_enumTypes[3]
}

func (x IndyOptions_IndyNetwork) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndyOptions_IndyNetwork.Descriptor instead.
func (IndyOptions_IndyNetwork) EnumDescriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{33, 0}
}

// Request to invite a participant to an ecosystem
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of participant being invited (individual/organization)
	Participant ParticipantType `protobuf:"varint,1,opt,name=participant,proto3,enum=services.provider.v1.ParticipantType" json:"participant,omitempty"`
	// Description of invitation
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Account details of invitee
	Details *account.AccountDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{0}
}

func (x *InviteRequest) GetParticipant() ParticipantType {
	if x != nil {
		return x.Participant
	}
	return ParticipantType_participant_type_individual
}

func (x *InviteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InviteRequest) GetDetails() *account.AccountDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

// DEPRECATED, will be removed April 1st 2023
// Response to `InviteRequest`
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type InviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of created invitation
	InvitationId string `protobuf:"bytes,10,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	// Invitation code -- must be passed back in `LoginRequest`
	InvitationCode string `protobuf:"bytes,11,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
}

func (x *InviteResponse) Reset() {
	*x = InviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResponse) ProtoMessage() {}

func (x *InviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResponse.ProtoReflect.Descriptor instead.
func (*InviteResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{1}
}

func (x *InviteResponse) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

func (x *InviteResponse) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Request details for the status of an invitation
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type InvitationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of invitation, received from `InviteResponse`
	InvitationId string `protobuf:"bytes,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
}

func (x *InvitationStatusRequest) Reset() {
	*x = InvitationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationStatusRequest) ProtoMessage() {}

func (x *InvitationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationStatusRequest.ProtoReflect.Descriptor instead.
func (*InvitationStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{2}
}

func (x *InvitationStatusRequest) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Response to `InvitationStatusRequest`
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type InvitationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of invitation
	Status InvitationStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=services.provider.v1.InvitationStatusResponse_Status" json:"status,omitempty"`
	// Human-readable string with details about invitation status
	StatusDetails string `protobuf:"bytes,2,opt,name=status_details,json=statusDetails,proto3" json:"status_details,omitempty"`
}

func (x *InvitationStatusResponse) Reset() {
	*x = InvitationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationStatusResponse) ProtoMessage() {}

func (x *InvitationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationStatusResponse.ProtoReflect.Descriptor instead.
func (*InvitationStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{3}
}

func (x *InvitationStatusResponse) GetStatus() InvitationStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return InvitationStatusResponse_Error
}

func (x *InvitationStatusResponse) GetStatusDetails() string {
	if x != nil {
		return x.StatusDetails
	}
	return ""
}

// Details of an ecosystem
type Ecosystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URN of the ecosystem
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Globally unique name for the ecosystem
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Ecosystem description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// DEPRECATED, will be removed April 1st 2023
	// External URL associated with the organization or ecosystem entity
	//
	// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	// Display details
	Display *EcosystemDisplay `protobuf:"bytes,6,opt,name=display,proto3" json:"display,omitempty"`
	// Domain
	Domain string `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *Ecosystem) Reset() {
	*x = Ecosystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ecosystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ecosystem) ProtoMessage() {}

func (x *Ecosystem) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ecosystem.ProtoReflect.Descriptor instead.
func (*Ecosystem) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{4}
}

func (x *Ecosystem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ecosystem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ecosystem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
func (x *Ecosystem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Ecosystem) GetDisplay() *EcosystemDisplay {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *Ecosystem) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Webhook configured on an ecosystem
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type WebhookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID of the webhook
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// HTTPS URL to POST webhook calls to
	DestinationUrl string `protobuf:"bytes,2,opt,name=destination_url,json=destinationUrl,proto3" json:"destination_url,omitempty"`
	// Events the webhook is subscribed to
	Events []string `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	// Last known status of webhook (whether or not Trinsic can successfully reach destination)
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *WebhookConfig) Reset() {
	*x = WebhookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookConfig) ProtoMessage() {}

func (x *WebhookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookConfig.ProtoReflect.Descriptor instead.
func (*WebhookConfig) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{5}
}

func (x *WebhookConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WebhookConfig) GetDestinationUrl() string {
	if x != nil {
		return x.DestinationUrl
	}
	return ""
}

func (x *WebhookConfig) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *WebhookConfig) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request to create an ecosystem
type CreateEcosystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Globally unique name for the Ecosystem. This name will be
	// part of the ecosystem-specific URLs and namespaces.
	// Allowed characters are lowercase letters, numbers, underscore and hyphen.
	// If not passed, ecosystem name will be auto-generated.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Ecosystem description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// DEPRECATED, will be removed April 1st 2023
	// External URL associated with your organization or ecosystem entity
	//
	// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// The account details of the owner of the ecosystem
	Details *account.AccountDetails `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	// New domain URL
	Domain string `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *CreateEcosystemRequest) Reset() {
	*x = CreateEcosystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEcosystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEcosystemRequest) ProtoMessage() {}

func (x *CreateEcosystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEcosystemRequest.ProtoReflect.Descriptor instead.
func (*CreateEcosystemRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{6}
}

func (x *CreateEcosystemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEcosystemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
func (x *CreateEcosystemRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateEcosystemRequest) GetDetails() *account.AccountDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateEcosystemRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Response to `CreateEcosystemRequest`
type CreateEcosystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Details of the created ecosystem
	Ecosystem *Ecosystem `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
	// Account profile for auth of the owner of the ecosystem
	Profile *account.AccountProfile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	// Indicates if confirmation of account is required.
	ConfirmationMethod account.ConfirmationMethod `protobuf:"varint,3,opt,name=confirmation_method,json=confirmationMethod,proto3,enum=services.account.v1.ConfirmationMethod" json:"confirmation_method,omitempty"`
}

func (x *CreateEcosystemResponse) Reset() {
	*x = CreateEcosystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEcosystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEcosystemResponse) ProtoMessage() {}

func (x *CreateEcosystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEcosystemResponse.ProtoReflect.Descriptor instead.
func (*CreateEcosystemResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{7}
}

func (x *CreateEcosystemResponse) GetEcosystem() *Ecosystem {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

func (x *CreateEcosystemResponse) GetProfile() *account.AccountProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *CreateEcosystemResponse) GetConfirmationMethod() account.ConfirmationMethod {
	if x != nil {
		return x.ConfirmationMethod
	}
	return account.ConfirmationMethod(0)
}

// Request to update an ecosystem's metadata
type UpdateEcosystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// New description of the ecosystem
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// DEPRECATED, will be removed April 1st 2023
	// New external URL associated with the organization or ecosystem entity
	//
	// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// New domain URL
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Display details
	//
	// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
	Display *EcosystemDisplayRequest `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *UpdateEcosystemRequest) Reset() {
	*x = UpdateEcosystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEcosystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEcosystemRequest) ProtoMessage() {}

func (x *UpdateEcosystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEcosystemRequest.ProtoReflect.Descriptor instead.
func (*UpdateEcosystemRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateEcosystemRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
func (x *UpdateEcosystemRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *UpdateEcosystemRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
func (x *UpdateEcosystemRequest) GetDisplay() *EcosystemDisplayRequest {
	if x != nil {
		return x.Display
	}
	return nil
}

type EcosystemDisplayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Removed the Dark after discussion with team, as we don't provide a dark UI anywhere (yet) in our platform.
	// EcosystemDisplayDetailsRequest dark = 1;
	Light *EcosystemDisplayDetailsRequest `protobuf:"bytes,2,opt,name=light,proto3" json:"light,omitempty"`
}

func (x *EcosystemDisplayRequest) Reset() {
	*x = EcosystemDisplayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemDisplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemDisplayRequest) ProtoMessage() {}

func (x *EcosystemDisplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemDisplayRequest.ProtoReflect.Descriptor instead.
func (*EcosystemDisplayRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{9}
}

func (x *EcosystemDisplayRequest) GetLight() *EcosystemDisplayDetailsRequest {
	if x != nil {
		return x.Light
	}
	return nil
}

type EcosystemDisplayDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color    string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	LogoData []byte `protobuf:"bytes,5,opt,name=logo_data,json=logoData,proto3" json:"logo_data,omitempty"`
	// MIME type of the file
	LogoFormat string `protobuf:"bytes,6,opt,name=logo_format,json=logoFormat,proto3" json:"logo_format,omitempty"`
}

func (x *EcosystemDisplayDetailsRequest) Reset() {
	*x = EcosystemDisplayDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemDisplayDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemDisplayDetailsRequest) ProtoMessage() {}

func (x *EcosystemDisplayDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemDisplayDetailsRequest.ProtoReflect.Descriptor instead.
func (*EcosystemDisplayDetailsRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{10}
}

func (x *EcosystemDisplayDetailsRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *EcosystemDisplayDetailsRequest) GetLogoData() []byte {
	if x != nil {
		return x.LogoData
	}
	return nil
}

func (x *EcosystemDisplayDetailsRequest) GetLogoFormat() string {
	if x != nil {
		return x.LogoFormat
	}
	return ""
}

// Response to `UpdateEcosystemRequest`
type UpdateEcosystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current ecosystem metadata, post-update
	Ecosystem *Ecosystem `protobuf:"bytes,1,opt,name=Ecosystem,proto3" json:"Ecosystem,omitempty"`
}

func (x *UpdateEcosystemResponse) Reset() {
	*x = UpdateEcosystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEcosystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEcosystemResponse) ProtoMessage() {}

func (x *UpdateEcosystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEcosystemResponse.ProtoReflect.Descriptor instead.
func (*UpdateEcosystemResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateEcosystemResponse) GetEcosystem() *Ecosystem {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

type EcosystemDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Removed the Dark after discussion with team, as we don't provide a dark UI anywhere (yet) in our platform.
	// EcosystemDisplayDetails dark = 1;
	Light *EcosystemDisplayDetails `protobuf:"bytes,2,opt,name=light,proto3" json:"light,omitempty"`
}

func (x *EcosystemDisplay) Reset() {
	*x = EcosystemDisplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemDisplay) ProtoMessage() {}

func (x *EcosystemDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemDisplay.ProtoReflect.Descriptor instead.
func (*EcosystemDisplay) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{12}
}

func (x *EcosystemDisplay) GetLight() *EcosystemDisplayDetails {
	if x != nil {
		return x.Light
	}
	return nil
}

type EcosystemDisplayDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoUrl string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	Color   string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *EcosystemDisplayDetails) Reset() {
	*x = EcosystemDisplayDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemDisplayDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemDisplayDetails) ProtoMessage() {}

func (x *EcosystemDisplayDetails) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemDisplayDetails.ProtoReflect.Descriptor instead.
func (*EcosystemDisplayDetails) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{13}
}

func (x *EcosystemDisplayDetails) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *EcosystemDisplayDetails) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Request to add a webhook to an ecosystem
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type AddWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Destination to post webhook calls to.
	// Must be a reachable HTTPS URL.
	DestinationUrl string `protobuf:"bytes,1,opt,name=destination_url,json=destinationUrl,proto3" json:"destination_url,omitempty"`
	// Secret string used for HMAC-SHA256 signing of webhook payloads
	// to verify that a webhook comes from Trinsic
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// Events to subscribe to. Default is "*" (all events)
	Events []string `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *AddWebhookRequest) Reset() {
	*x = AddWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookRequest) ProtoMessage() {}

func (x *AddWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookRequest.ProtoReflect.Descriptor instead.
func (*AddWebhookRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{14}
}

func (x *AddWebhookRequest) GetDestinationUrl() string {
	if x != nil {
		return x.DestinationUrl
	}
	return ""
}

func (x *AddWebhookRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AddWebhookRequest) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

// DEPRECATED, will be removed April 1st 2023
// Response to `AddWebhookRequest`
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type AddWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ecosystem data with new webhook
	Ecosystem *Ecosystem `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
}

func (x *AddWebhookResponse) Reset() {
	*x = AddWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookResponse) ProtoMessage() {}

func (x *AddWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookResponse.ProtoReflect.Descriptor instead.
func (*AddWebhookResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{15}
}

func (x *AddWebhookResponse) GetEcosystem() *Ecosystem {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

// DEPRECATED, will be removed April 1st 2023
// Request to delete a webhook from an ecosystem
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type DeleteWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of webhook to delete
	WebhookId string `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
}

func (x *DeleteWebhookRequest) Reset() {
	*x = DeleteWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebhookRequest) ProtoMessage() {}

func (x *DeleteWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebhookRequest.ProtoReflect.Descriptor instead.
func (*DeleteWebhookRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteWebhookRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Response to `DeleteWebhookRequest`
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type DeleteWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ecosystem data after removal of webhook
	Ecosystem *Ecosystem `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
}

func (x *DeleteWebhookResponse) Reset() {
	*x = DeleteWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWebhookResponse) ProtoMessage() {}

func (x *DeleteWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWebhookResponse.ProtoReflect.Descriptor instead.
func (*DeleteWebhookResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteWebhookResponse) GetEcosystem() *Ecosystem {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

// Request to fetch information about an ecosystem
type EcosystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EcosystemInfoRequest) Reset() {
	*x = EcosystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemInfoRequest) ProtoMessage() {}

func (x *EcosystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemInfoRequest.ProtoReflect.Descriptor instead.
func (*EcosystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{18}
}

// Response to `InfoRequest`
type EcosystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ecosystem corresponding to current ecosystem in the account token
	Ecosystem *Ecosystem `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
}

func (x *EcosystemInfoResponse) Reset() {
	*x = EcosystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcosystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcosystemInfoResponse) ProtoMessage() {}

func (x *EcosystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcosystemInfoResponse.ProtoReflect.Descriptor instead.
func (*EcosystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{19}
}

func (x *EcosystemInfoResponse) GetEcosystem() *Ecosystem {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

// DEPRECATED, will be removed April 1st 2023
// Request to fetch information about an ecosystem
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type GetPublicEcosystemInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcosystemId string `protobuf:"bytes,1,opt,name=ecosystem_id,json=ecosystemId,proto3" json:"ecosystem_id,omitempty"`
}

func (x *GetPublicEcosystemInfoRequest) Reset() {
	*x = GetPublicEcosystemInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicEcosystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicEcosystemInfoRequest) ProtoMessage() {}

func (x *GetPublicEcosystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicEcosystemInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPublicEcosystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{20}
}

func (x *GetPublicEcosystemInfoRequest) GetEcosystemId() string {
	if x != nil {
		return x.EcosystemId
	}
	return ""
}

// DEPRECATED, will be removed April 1st 2023
// Response to `InfoRequest`
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type GetPublicEcosystemInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ecosystem corresponding to requested `ecosystem_id`
	Ecosystem *PublicEcosystemInformation `protobuf:"bytes,1,opt,name=ecosystem,proto3" json:"ecosystem,omitempty"`
}

func (x *GetPublicEcosystemInfoResponse) Reset() {
	*x = GetPublicEcosystemInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicEcosystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicEcosystemInfoResponse) ProtoMessage() {}

func (x *GetPublicEcosystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicEcosystemInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPublicEcosystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{21}
}

func (x *GetPublicEcosystemInfoResponse) GetEcosystem() *PublicEcosystemInformation {
	if x != nil {
		return x.Ecosystem
	}
	return nil
}

// DEPRECATED, will be removed April 1st 2023
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type PublicEcosystemInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public name of this ecosystem
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Public domain for the owner of this ecosystem
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Trinsic verified the domain is owned by the owner of this ecosystem
	DomainVerified bool `protobuf:"varint,3,opt,name=domain_verified,json=domainVerified,proto3" json:"domain_verified,omitempty"`
	// Style display information
	StyleDisplay *EcosystemDisplay `protobuf:"bytes,4,opt,name=style_display,json=styleDisplay,proto3" json:"style_display,omitempty"`
	// Description of the ecosystem
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PublicEcosystemInformation) Reset() {
	*x = PublicEcosystemInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicEcosystemInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicEcosystemInformation) ProtoMessage() {}

func (x *PublicEcosystemInformation) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicEcosystemInformation.ProtoReflect.Descriptor instead.
func (*PublicEcosystemInformation) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{22}
}

func (x *PublicEcosystemInformation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicEcosystemInformation) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PublicEcosystemInformation) GetDomainVerified() bool {
	if x != nil {
		return x.DomainVerified
	}
	return false
}

func (x *PublicEcosystemInformation) GetStyleDisplay() *EcosystemDisplay {
	if x != nil {
		return x.StyleDisplay
	}
	return nil
}

func (x *PublicEcosystemInformation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Request to fetch the Trinsic public key used
// to verify authentication token validity
type GetOberonKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOberonKeyRequest) Reset() {
	*x = GetOberonKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOberonKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOberonKeyRequest) ProtoMessage() {}

func (x *GetOberonKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOberonKeyRequest.ProtoReflect.Descriptor instead.
func (*GetOberonKeyRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{23}
}

// Response to `GetOberonKeyRequest`
type GetOberonKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Oberon Public Key as RAW base64-url encoded string
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetOberonKeyResponse) Reset() {
	*x = GetOberonKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOberonKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOberonKeyResponse) ProtoMessage() {}

func (x *GetOberonKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOberonKeyResponse.ProtoReflect.Descriptor instead.
func (*GetOberonKeyResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{24}
}

func (x *GetOberonKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// The below display can be removed only once the Dashboard is updating this itself - currently it uses this request
// DEPRECATED, will be removed June 1st 2023
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type RetrieveDomainVerificationRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetrieveDomainVerificationRecordRequest) Reset() {
	*x = RetrieveDomainVerificationRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveDomainVerificationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveDomainVerificationRecordRequest) ProtoMessage() {}

func (x *RetrieveDomainVerificationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveDomainVerificationRecordRequest.ProtoReflect.Descriptor instead.
func (*RetrieveDomainVerificationRecordRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{25}
}

// The below display can be removed only once the Dashboard is updating this itself - currently it uses this request
// DEPRECATED, will be removed June 1st 2023
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type RetrieveDomainVerificationRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TXT record name to use for domain verification
	VerificationRecordName string `protobuf:"bytes,1,opt,name=verification_record_name,json=verificationRecordName,proto3" json:"verification_record_name,omitempty"`
	// TXT code for domain verification
	VerificationRecord_Value string `protobuf:"bytes,2,opt,name=verification_record_Value,json=verificationRecordValue,proto3" json:"verification_record_Value,omitempty"`
}

func (x *RetrieveDomainVerificationRecordResponse) Reset() {
	*x = RetrieveDomainVerificationRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveDomainVerificationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveDomainVerificationRecordResponse) ProtoMessage() {}

func (x *RetrieveDomainVerificationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveDomainVerificationRecordResponse.ProtoReflect.Descriptor instead.
func (*RetrieveDomainVerificationRecordResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{26}
}

func (x *RetrieveDomainVerificationRecordResponse) GetVerificationRecordName() string {
	if x != nil {
		return x.VerificationRecordName
	}
	return ""
}

func (x *RetrieveDomainVerificationRecordResponse) GetVerificationRecord_Value() string {
	if x != nil {
		return x.VerificationRecord_Value
	}
	return ""
}

// The below display can be removed only once the Dashboard is updating this itself - currently it uses this request
// DEPRECATED, will be removed June 1st 2023
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type RefreshDomainVerificationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshDomainVerificationStatusRequest) Reset() {
	*x = RefreshDomainVerificationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshDomainVerificationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshDomainVerificationStatusRequest) ProtoMessage() {}

func (x *RefreshDomainVerificationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshDomainVerificationStatusRequest.ProtoReflect.Descriptor instead.
func (*RefreshDomainVerificationStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{27}
}

// The below display can be removed only once the Dashboard is updating this itself - currently it uses this request
// DEPRECATED, will be removed June 1st 2023
//
// Deprecated: Marked as deprecated in services/provider/v1/provider.proto.
type RefreshDomainVerificationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Domain URL verified
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Specifies if the above `domain` was successfully verified
	DomainVerified bool `protobuf:"varint,2,opt,name=domain_verified,json=domainVerified,proto3" json:"domain_verified,omitempty"`
}

func (x *RefreshDomainVerificationStatusResponse) Reset() {
	*x = RefreshDomainVerificationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshDomainVerificationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshDomainVerificationStatusResponse) ProtoMessage() {}

func (x *RefreshDomainVerificationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshDomainVerificationStatusResponse.ProtoReflect.Descriptor instead.
func (*RefreshDomainVerificationStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{28}
}

func (x *RefreshDomainVerificationStatusResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RefreshDomainVerificationStatusResponse) GetDomainVerified() bool {
	if x != nil {
		return x.DomainVerified
	}
	return false
}

// Search for issuers/holders/verifiers
type SearchWalletConfigurationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SQL filter to execute. `SELECT * FROM _ WHERE [**queryFilter**]`
	QueryFilter string `protobuf:"bytes,1,opt,name=query_filter,json=queryFilter,proto3" json:"query_filter,omitempty"`
	// Token provided by previous `SearchResponse`
	// if more data is available for query
	ContinuationToken string `protobuf:"bytes,2,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
}

func (x *SearchWalletConfigurationsRequest) Reset() {
	*x = SearchWalletConfigurationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWalletConfigurationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWalletConfigurationsRequest) ProtoMessage() {}

func (x *SearchWalletConfigurationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWalletConfigurationsRequest.ProtoReflect.Descriptor instead.
func (*SearchWalletConfigurationsRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{29}
}

func (x *SearchWalletConfigurationsRequest) GetQueryFilter() string {
	if x != nil {
		return x.QueryFilter
	}
	return ""
}

func (x *SearchWalletConfigurationsRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type SearchWalletConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Results matching the search query
	Results []*WalletConfiguration `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Whether more results are available for this query via `continuation_token`
	HasMoreResults bool `protobuf:"varint,2,opt,name=has_more_results,json=hasMoreResults,proto3" json:"has_more_results,omitempty"`
	// Token to fetch next set of results via `SearchRequest`
	ContinuationToken string `protobuf:"bytes,4,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
}

func (x *SearchWalletConfigurationResponse) Reset() {
	*x = SearchWalletConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchWalletConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWalletConfigurationResponse) ProtoMessage() {}

func (x *SearchWalletConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWalletConfigurationResponse.ProtoReflect.Descriptor instead.
func (*SearchWalletConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{30}
}

func (x *SearchWalletConfigurationResponse) GetResults() []*WalletConfiguration {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchWalletConfigurationResponse) GetHasMoreResults() bool {
	if x != nil {
		return x.HasMoreResults
	}
	return false
}

func (x *SearchWalletConfigurationResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

// Strongly typed information about wallet configurations
type WalletConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name/description of the wallet
	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Sms      string `protobuf:"bytes,3,opt,name=sms,proto3" json:"sms,omitempty"`
	WalletId string `protobuf:"bytes,4,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	// The DID of the wallet
	PublicDid  string `protobuf:"bytes,5,opt,name=public_did,json=publicDid,proto3" json:"public_did,omitempty"`
	ConfigType string `protobuf:"bytes,6,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	// List of active authentication tokens for this wallet.
	// This list does not contain the issued token, only metadata
	// such as ID, description, and creation date.
	AuthTokens []*account.WalletAuthToken `protobuf:"bytes,7,rep,name=auth_tokens,json=authTokens,proto3" json:"auth_tokens,omitempty"`
	// List of external identities associated with this wallet.
	ExternalIdentities []string `protobuf:"bytes,8,rep,name=external_identities,json=externalIdentities,proto3" json:"external_identities,omitempty"`
	// Ecosystem in which this wallet is contained.
	EcosystemId string `protobuf:"bytes,9,opt,name=ecosystem_id,json=ecosystemId,proto3" json:"ecosystem_id,omitempty"`
}

func (x *WalletConfiguration) Reset() {
	*x = WalletConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletConfiguration) ProtoMessage() {}

func (x *WalletConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletConfiguration.ProtoReflect.Descriptor instead.
func (*WalletConfiguration) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{31}
}

func (x *WalletConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalletConfiguration) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WalletConfiguration) GetSms() string {
	if x != nil {
		return x.Sms
	}
	return ""
}

func (x *WalletConfiguration) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WalletConfiguration) GetPublicDid() string {
	if x != nil {
		return x.PublicDid
	}
	return ""
}

func (x *WalletConfiguration) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *WalletConfiguration) GetAuthTokens() []*account.WalletAuthToken {
	if x != nil {
		return x.AuthTokens
	}
	return nil
}

func (x *WalletConfiguration) GetExternalIdentities() []string {
	if x != nil {
		return x.ExternalIdentities
	}
	return nil
}

func (x *WalletConfiguration) GetEcosystemId() string {
	if x != nil {
		return x.EcosystemId
	}
	return ""
}

// Options for creation of DID on the ION network
type IonOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ION network on which DID should be published
	Network IonOptions_IonNetwork `protobuf:"varint,1,opt,name=network,proto3,enum=services.provider.v1.IonOptions_IonNetwork" json:"network,omitempty"`
}

func (x *IonOptions) Reset() {
	*x = IonOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IonOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IonOptions) ProtoMessage() {}

func (x *IonOptions) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IonOptions.ProtoReflect.Descriptor instead.
func (*IonOptions) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{32}
}

func (x *IonOptions) GetNetwork() IonOptions_IonNetwork {
	if x != nil {
		return x.Network
	}
	return IonOptions_TestNet
}

// Options for creation of DID on the SOV network
type IndyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SOV network on which DID should be published
	Network IndyOptions_IndyNetwork `protobuf:"varint,1,opt,name=network,proto3,enum=services.provider.v1.IndyOptions_IndyNetwork" json:"network,omitempty"`
}

func (x *IndyOptions) Reset() {
	*x = IndyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndyOptions) ProtoMessage() {}

func (x *IndyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndyOptions.ProtoReflect.Descriptor instead.
func (*IndyOptions) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{33}
}

func (x *IndyOptions) GetNetwork() IndyOptions_IndyNetwork {
	if x != nil {
		return x.Network
	}
	return IndyOptions_Danube
}

// Request to upgrade a wallet
type UpgradeDidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Account:
	//
	//	*UpgradeDidRequest_Email
	//	*UpgradeDidRequest_WalletId
	//	*UpgradeDidRequest_DidUri
	Account isUpgradeDidRequest_Account `protobuf_oneof:"account"`
	// DID Method to which wallet should be upgraded
	Method common.SupportedDidMethod `protobuf:"varint,3,opt,name=method,proto3,enum=services.common.v1.SupportedDidMethod" json:"method,omitempty"`
	// Types that are assignable to Options:
	//
	//	*UpgradeDidRequest_IonOptions
	//	*UpgradeDidRequest_IndyOptions
	Options isUpgradeDidRequest_Options `protobuf_oneof:"options"`
}

func (x *UpgradeDidRequest) Reset() {
	*x = UpgradeDidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDidRequest) ProtoMessage() {}

func (x *UpgradeDidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDidRequest.ProtoReflect.Descriptor instead.
func (*UpgradeDidRequest) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{34}
}

func (m *UpgradeDidRequest) GetAccount() isUpgradeDidRequest_Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (x *UpgradeDidRequest) GetEmail() string {
	if x, ok := x.GetAccount().(*UpgradeDidRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UpgradeDidRequest) GetWalletId() string {
	if x, ok := x.GetAccount().(*UpgradeDidRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *UpgradeDidRequest) GetDidUri() string {
	if x, ok := x.GetAccount().(*UpgradeDidRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *UpgradeDidRequest) GetMethod() common.SupportedDidMethod {
	if x != nil {
		return x.Method
	}
	return common.SupportedDidMethod(0)
}

func (m *UpgradeDidRequest) GetOptions() isUpgradeDidRequest_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (x *UpgradeDidRequest) GetIonOptions() *IonOptions {
	if x, ok := x.GetOptions().(*UpgradeDidRequest_IonOptions); ok {
		return x.IonOptions
	}
	return nil
}

func (x *UpgradeDidRequest) GetIndyOptions() *IndyOptions {
	if x, ok := x.GetOptions().(*UpgradeDidRequest_IndyOptions); ok {
		return x.IndyOptions
	}
	return nil
}

type isUpgradeDidRequest_Account interface {
	isUpgradeDidRequest_Account()
}

type UpgradeDidRequest_Email struct {
	// Email address of account to upgrade.
	// Mutually exclusive with `walletId` and `didUri`.
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UpgradeDidRequest_WalletId struct {
	// Wallet ID of account to upgrade.
	// Mutually exclusive with `email` and `didUri`.
	WalletId string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type UpgradeDidRequest_DidUri struct {
	// DID URI of the account to upgrade.
	// Mutually exclusive with `email` and `walletId`.
	DidUri string `protobuf:"bytes,6,opt,name=did_uri,json=didUri,proto3,oneof"`
}

func (*UpgradeDidRequest_Email) isUpgradeDidRequest_Account() {}

func (*UpgradeDidRequest_WalletId) isUpgradeDidRequest_Account() {}

func (*UpgradeDidRequest_DidUri) isUpgradeDidRequest_Account() {}

type isUpgradeDidRequest_Options interface {
	isUpgradeDidRequest_Options()
}

type UpgradeDidRequest_IonOptions struct {
	// Configuration for creation of DID on ION network
	IonOptions *IonOptions `protobuf:"bytes,4,opt,name=ion_options,json=ionOptions,proto3,oneof"`
}

type UpgradeDidRequest_IndyOptions struct {
	// Configuration for creation of DID on INDY network
	IndyOptions *IndyOptions `protobuf:"bytes,5,opt,name=indy_options,json=indyOptions,proto3,oneof"`
}

func (*UpgradeDidRequest_IonOptions) isUpgradeDidRequest_Options() {}

func (*UpgradeDidRequest_IndyOptions) isUpgradeDidRequest_Options() {}

// Response to `UpgradeDIDRequest`
type UpgradeDidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// New DID of wallet
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (x *UpgradeDidResponse) Reset() {
	*x = UpgradeDidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDidResponse) ProtoMessage() {}

func (x *UpgradeDidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDidResponse.ProtoReflect.Descriptor instead.
func (*UpgradeDidResponse) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{35}
}

func (x *UpgradeDidResponse) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

type InviteRequest_DidCommInvitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InviteRequest_DidCommInvitation) Reset() {
	*x = InviteRequest_DidCommInvitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_provider_v1_provider_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest_DidCommInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest_DidCommInvitation) ProtoMessage() {}

func (x *InviteRequest_DidCommInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_services_provider_v1_provider_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest_DidCommInvitation.ProtoReflect.Descriptor instead.
func (*InviteRequest_DidCommInvitation) Descriptor() ([]byte, []int) {
	return file_services_provider_v1_provider_proto_rawDescGZIP(), []int{0, 0}
}

var File_services_provider_v1_provider_proto protoreflect.FileDescriptor

var file_services_provider_v1_provider_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x04,
	0x80, 0xa6, 0x1d, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x13, 0x0a,
	0x11, 0x44, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x62, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x42, 0x0a, 0x17, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xd9,
	0x01, 0x0a, 0x18, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x43, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x10, 0x03, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xd1, 0x01, 0x0a, 0x09, 0x45,
	0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x40, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4a, 0x04,
	0x08, 0x05, 0x10, 0x06, 0x52, 0x08, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x7c,
	0x0a, 0x0d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xcb, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0x80, 0xa6, 0x1d, 0x01, 0x18, 0x01, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xc1,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x4b, 0x0a, 0x07, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x65, 0x0a, 0x17, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x1e, 0x45, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x52, 0x02, 0x69, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x09, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x22, 0x57, 0x0a, 0x10, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x60, 0x0a, 0x17, 0x45, 0x63, 0x6f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x57, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x39, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x3a, 0x02, 0x18,
	0x01, 0x22, 0x5a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x16, 0x0a,
	0x14, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x15, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x46, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x74, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xe4, 0x01, 0x0a, 0x1a,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x4b, 0x0a, 0x0d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x0c,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x02,
	0x18, 0x01, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x65, 0x72, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x65, 0x72, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x2d, 0x0a, 0x27, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x3a, 0x02,
	0x18, 0x01, 0x22, 0xa4, 0x01, 0x0a, 0x28, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x2c, 0x0a, 0x26, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x6e, 0x0a, 0x27, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x7b, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d,
	0x01, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd5, 0x02, 0x0a, 0x13, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80,
	0xa6, 0x1d, 0x01, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x44, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x13,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x7b, 0x0a, 0x0a, 0x49, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x49, 0x6f, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x26, 0x0a, 0x0a, 0x49, 0x6f, 0x6e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x10, 0x01, 0x22, 0xf1, 0x01,
	0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x49, 0x6e, 0x64, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x79, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x61, 0x6e, 0x75, 0x62, 0x65,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x6f, 0x76, 0x72, 0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x6f, 0x76, 0x72, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x6f, 0x76, 0x72,
	0x69, 0x6e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x54,
	0x65, 0x73, 0x74, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x69, 0x6f, 0x54, 0x65, 0x73,
	0x74, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x69, 0x6f, 0x44, 0x65,
	0x6d, 0x6f, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x69, 0x6f, 0x10,
	0x08, 0x22, 0xc8, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x44, 0x69, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x01, 0x52, 0x0a, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46,
	0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x26, 0x0a, 0x12,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x64, 0x2a, 0x55, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69,
	0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x32, 0xb3, 0x0e, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x76, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x10, 0x01,
	0x12, 0x9e, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2e, 0x8a, 0xa6, 0x1d, 0x27, 0x2a, 0x25, 0x08, 0x01, 0x12, 0x21, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x20, 0x4a, 0x75, 0x6e, 0x65, 0x20, 0x31, 0x2c, 0x20, 0x32, 0x30, 0x32, 0x33, 0x88, 0x02,
	0x01, 0x12, 0x67, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12,
	0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x10, 0x01, 0x12, 0x70, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x2a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x10, 0x01, 0x12, 0x95, 0x01, 0x0a,
	0x0d, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x8a, 0xa6, 0x1d, 0x27, 0x2a, 0x25, 0x08,
	0x01, 0x12, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x20, 0x4a, 0x75, 0x6e, 0x65, 0x20, 0x31, 0x2c, 0x20,
	0x32, 0x30, 0x32, 0x33, 0x12, 0xb2, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x33, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x45, 0x63, 0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x8a, 0xa6, 0x1d, 0x29,
	0x08, 0x01, 0x2a, 0x25, 0x08, 0x01, 0x12, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6c,
	0x6c, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x20, 0x4a, 0x75, 0x6e,
	0x65, 0x20, 0x31, 0x2c, 0x20, 0x32, 0x30, 0x32, 0x33, 0x12, 0x86, 0x01, 0x0a, 0x06, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x8a, 0xa6, 0x1d, 0x2a, 0x10, 0x01, 0x2a, 0x26, 0x08, 0x01, 0x12, 0x22, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x20, 0x41, 0x70, 0x72, 0x69, 0x6c, 0x20, 0x31, 0x2c, 0x20, 0x32, 0x30, 0x32, 0x33, 0x88,
	0x02, 0x01, 0x12, 0xa4, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x8a, 0xa6, 0x1d, 0x2a, 0x10, 0x01, 0x2a, 0x26,
	0x08, 0x01, 0x12, 0x22, 0x54, 0x68, 0x69, 0x73, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65,
	0x20, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x20, 0x41, 0x70, 0x72, 0x69, 0x6c, 0x20, 0x31,
	0x2c, 0x20, 0x32, 0x30, 0x32, 0x33, 0x88, 0x02, 0x01, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4f, 0x62, 0x65, 0x72, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x65, 0x72, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x65, 0x72, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x08, 0x8a, 0xa6, 0x1d, 0x04, 0x08, 0x01, 0x18, 0x01, 0x12, 0x5f, 0x0a, 0x0a, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x44, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x20,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x3d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x18, 0x01, 0x12, 0xa6, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x18, 0x01,
	0x12, 0x8e, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x5e, 0x0a, 0x1c, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x50, 0x01, 0x5a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0xaa, 0x02, 0x1c, 0x54, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_provider_v1_provider_proto_rawDescOnce sync.Once
	file_services_provider_v1_provider_proto_rawDescData = file_services_provider_v1_provider_proto_rawDesc
)

func file_services_provider_v1_provider_proto_rawDescGZIP() []byte {
	file_services_provider_v1_provider_proto_rawDescOnce.Do(func() {
		file_services_provider_v1_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_provider_v1_provider_proto_rawDescData)
	})
	return file_services_provider_v1_provider_proto_rawDescData
}

var file_services_provider_v1_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_services_provider_v1_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_services_provider_v1_provider_proto_goTypes = []interface{}{
	(ParticipantType)(0),                             // 0: services.provider.v1.ParticipantType
	(InvitationStatusResponse_Status)(0),             // 1: services.provider.v1.InvitationStatusResponse.Status
	(IonOptions_IonNetwork)(0),                       // 2: services.provider.v1.IonOptions.IonNetwork
	(IndyOptions_IndyNetwork)(0),                     // 3: services.provider.v1.IndyOptions.IndyNetwork
	(*InviteRequest)(nil),                            // 4: services.provider.v1.InviteRequest
	(*InviteResponse)(nil),                           // 5: services.provider.v1.InviteResponse
	(*InvitationStatusRequest)(nil),                  // 6: services.provider.v1.InvitationStatusRequest
	(*InvitationStatusResponse)(nil),                 // 7: services.provider.v1.InvitationStatusResponse
	(*Ecosystem)(nil),                                // 8: services.provider.v1.Ecosystem
	(*WebhookConfig)(nil),                            // 9: services.provider.v1.WebhookConfig
	(*CreateEcosystemRequest)(nil),                   // 10: services.provider.v1.CreateEcosystemRequest
	(*CreateEcosystemResponse)(nil),                  // 11: services.provider.v1.CreateEcosystemResponse
	(*UpdateEcosystemRequest)(nil),                   // 12: services.provider.v1.UpdateEcosystemRequest
	(*EcosystemDisplayRequest)(nil),                  // 13: services.provider.v1.EcosystemDisplayRequest
	(*EcosystemDisplayDetailsRequest)(nil),           // 14: services.provider.v1.EcosystemDisplayDetailsRequest
	(*UpdateEcosystemResponse)(nil),                  // 15: services.provider.v1.UpdateEcosystemResponse
	(*EcosystemDisplay)(nil),                         // 16: services.provider.v1.EcosystemDisplay
	(*EcosystemDisplayDetails)(nil),                  // 17: services.provider.v1.EcosystemDisplayDetails
	(*AddWebhookRequest)(nil),                        // 18: services.provider.v1.AddWebhookRequest
	(*AddWebhookResponse)(nil),                       // 19: services.provider.v1.AddWebhookResponse
	(*DeleteWebhookRequest)(nil),                     // 20: services.provider.v1.DeleteWebhookRequest
	(*DeleteWebhookResponse)(nil),                    // 21: services.provider.v1.DeleteWebhookResponse
	(*EcosystemInfoRequest)(nil),                     // 22: services.provider.v1.EcosystemInfoRequest
	(*EcosystemInfoResponse)(nil),                    // 23: services.provider.v1.EcosystemInfoResponse
	(*GetPublicEcosystemInfoRequest)(nil),            // 24: services.provider.v1.GetPublicEcosystemInfoRequest
	(*GetPublicEcosystemInfoResponse)(nil),           // 25: services.provider.v1.GetPublicEcosystemInfoResponse
	(*PublicEcosystemInformation)(nil),               // 26: services.provider.v1.PublicEcosystemInformation
	(*GetOberonKeyRequest)(nil),                      // 27: services.provider.v1.GetOberonKeyRequest
	(*GetOberonKeyResponse)(nil),                     // 28: services.provider.v1.GetOberonKeyResponse
	(*RetrieveDomainVerificationRecordRequest)(nil),  // 29: services.provider.v1.RetrieveDomainVerificationRecordRequest
	(*RetrieveDomainVerificationRecordResponse)(nil), // 30: services.provider.v1.RetrieveDomainVerificationRecordResponse
	(*RefreshDomainVerificationStatusRequest)(nil),   // 31: services.provider.v1.RefreshDomainVerificationStatusRequest
	(*RefreshDomainVerificationStatusResponse)(nil),  // 32: services.provider.v1.RefreshDomainVerificationStatusResponse
	(*SearchWalletConfigurationsRequest)(nil),        // 33: services.provider.v1.SearchWalletConfigurationsRequest
	(*SearchWalletConfigurationResponse)(nil),        // 34: services.provider.v1.SearchWalletConfigurationResponse
	(*WalletConfiguration)(nil),                      // 35: services.provider.v1.WalletConfiguration
	(*IonOptions)(nil),                               // 36: services.provider.v1.IonOptions
	(*IndyOptions)(nil),                              // 37: services.provider.v1.IndyOptions
	(*UpgradeDidRequest)(nil),                        // 38: services.provider.v1.UpgradeDidRequest
	(*UpgradeDidResponse)(nil),                       // 39: services.provider.v1.UpgradeDidResponse
	(*InviteRequest_DidCommInvitation)(nil),          // 40: services.provider.v1.InviteRequest.DidCommInvitation
	(*account.AccountDetails)(nil),                   // 41: services.account.v1.AccountDetails
	(*account.AccountProfile)(nil),                   // 42: services.account.v1.AccountProfile
	(account.ConfirmationMethod)(0),                  // 43: services.account.v1.ConfirmationMethod
	(*account.WalletAuthToken)(nil),                  // 44: services.account.v1.WalletAuthToken
	(common.SupportedDidMethod)(0),                   // 45: services.common.v1.SupportedDidMethod
}
var file_services_provider_v1_provider_proto_depIdxs = []int32{
	0,  // 0: services.provider.v1.InviteRequest.participant:type_name -> services.provider.v1.ParticipantType
	41, // 1: services.provider.v1.InviteRequest.details:type_name -> services.account.v1.AccountDetails
	1,  // 2: services.provider.v1.InvitationStatusResponse.status:type_name -> services.provider.v1.InvitationStatusResponse.Status
	16, // 3: services.provider.v1.Ecosystem.display:type_name -> services.provider.v1.EcosystemDisplay
	41, // 4: services.provider.v1.CreateEcosystemRequest.details:type_name -> services.account.v1.AccountDetails
	8,  // 5: services.provider.v1.CreateEcosystemResponse.ecosystem:type_name -> services.provider.v1.Ecosystem
	42, // 6: services.provider.v1.CreateEcosystemResponse.profile:type_name -> services.account.v1.AccountProfile
	43, // 7: services.provider.v1.CreateEcosystemResponse.confirmation_method:type_name -> services.account.v1.ConfirmationMethod
	13, // 8: services.provider.v1.UpdateEcosystemRequest.display:type_name -> services.provider.v1.EcosystemDisplayRequest
	14, // 9: services.provider.v1.EcosystemDisplayRequest.light:type_name -> services.provider.v1.EcosystemDisplayDetailsRequest
	8,  // 10: services.provider.v1.UpdateEcosystemResponse.Ecosystem:type_name -> services.provider.v1.Ecosystem
	17, // 11: services.provider.v1.EcosystemDisplay.light:type_name -> services.provider.v1.EcosystemDisplayDetails
	8,  // 12: services.provider.v1.AddWebhookResponse.ecosystem:type_name -> services.provider.v1.Ecosystem
	8,  // 13: services.provider.v1.DeleteWebhookResponse.ecosystem:type_name -> services.provider.v1.Ecosystem
	8,  // 14: services.provider.v1.EcosystemInfoResponse.ecosystem:type_name -> services.provider.v1.Ecosystem
	26, // 15: services.provider.v1.GetPublicEcosystemInfoResponse.ecosystem:type_name -> services.provider.v1.PublicEcosystemInformation
	16, // 16: services.provider.v1.PublicEcosystemInformation.style_display:type_name -> services.provider.v1.EcosystemDisplay
	35, // 17: services.provider.v1.SearchWalletConfigurationResponse.results:type_name -> services.provider.v1.WalletConfiguration
	44, // 18: services.provider.v1.WalletConfiguration.auth_tokens:type_name -> services.account.v1.WalletAuthToken
	2,  // 19: services.provider.v1.IonOptions.network:type_name -> services.provider.v1.IonOptions.IonNetwork
	3,  // 20: services.provider.v1.IndyOptions.network:type_name -> services.provider.v1.IndyOptions.IndyNetwork
	45, // 21: services.provider.v1.UpgradeDidRequest.method:type_name -> services.common.v1.SupportedDidMethod
	36, // 22: services.provider.v1.UpgradeDidRequest.ion_options:type_name -> services.provider.v1.IonOptions
	37, // 23: services.provider.v1.UpgradeDidRequest.indy_options:type_name -> services.provider.v1.IndyOptions
	10, // 24: services.provider.v1.Provider.CreateEcosystem:input_type -> services.provider.v1.CreateEcosystemRequest
	12, // 25: services.provider.v1.Provider.UpdateEcosystem:input_type -> services.provider.v1.UpdateEcosystemRequest
	18, // 26: services.provider.v1.Provider.AddWebhook:input_type -> services.provider.v1.AddWebhookRequest
	20, // 27: services.provider.v1.Provider.DeleteWebhook:input_type -> services.provider.v1.DeleteWebhookRequest
	22, // 28: services.provider.v1.Provider.EcosystemInfo:input_type -> services.provider.v1.EcosystemInfoRequest
	24, // 29: services.provider.v1.Provider.GetPublicEcosystemInfo:input_type -> services.provider.v1.GetPublicEcosystemInfoRequest
	4,  // 30: services.provider.v1.Provider.Invite:input_type -> services.provider.v1.InviteRequest
	6,  // 31: services.provider.v1.Provider.InvitationStatus:input_type -> services.provider.v1.InvitationStatusRequest
	27, // 32: services.provider.v1.Provider.GetOberonKey:input_type -> services.provider.v1.GetOberonKeyRequest
	38, // 33: services.provider.v1.Provider.UpgradeDID:input_type -> services.provider.v1.UpgradeDidRequest
	29, // 34: services.provider.v1.Provider.RetrieveDomainVerificationRecord:input_type -> services.provider.v1.RetrieveDomainVerificationRecordRequest
	31, // 35: services.provider.v1.Provider.RefreshDomainVerificationStatus:input_type -> services.provider.v1.RefreshDomainVerificationStatusRequest
	33, // 36: services.provider.v1.Provider.SearchWalletConfigurations:input_type -> services.provider.v1.SearchWalletConfigurationsRequest
	11, // 37: services.provider.v1.Provider.CreateEcosystem:output_type -> services.provider.v1.CreateEcosystemResponse
	15, // 38: services.provider.v1.Provider.UpdateEcosystem:output_type -> services.provider.v1.UpdateEcosystemResponse
	19, // 39: services.provider.v1.Provider.AddWebhook:output_type -> services.provider.v1.AddWebhookResponse
	21, // 40: services.provider.v1.Provider.DeleteWebhook:output_type -> services.provider.v1.DeleteWebhookResponse
	23, // 41: services.provider.v1.Provider.EcosystemInfo:output_type -> services.provider.v1.EcosystemInfoResponse
	25, // 42: services.provider.v1.Provider.GetPublicEcosystemInfo:output_type -> services.provider.v1.GetPublicEcosystemInfoResponse
	5,  // 43: services.provider.v1.Provider.Invite:output_type -> services.provider.v1.InviteResponse
	7,  // 44: services.provider.v1.Provider.InvitationStatus:output_type -> services.provider.v1.InvitationStatusResponse
	28, // 45: services.provider.v1.Provider.GetOberonKey:output_type -> services.provider.v1.GetOberonKeyResponse
	39, // 46: services.provider.v1.Provider.UpgradeDID:output_type -> services.provider.v1.UpgradeDidResponse
	30, // 47: services.provider.v1.Provider.RetrieveDomainVerificationRecord:output_type -> services.provider.v1.RetrieveDomainVerificationRecordResponse
	32, // 48: services.provider.v1.Provider.RefreshDomainVerificationStatus:output_type -> services.provider.v1.RefreshDomainVerificationStatusResponse
	34, // 49: services.provider.v1.Provider.SearchWalletConfigurations:output_type -> services.provider.v1.SearchWalletConfigurationResponse
	37, // [37:50] is the sub-list for method output_type
	24, // [24:37] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_services_provider_v1_provider_proto_init() }
func file_services_provider_v1_provider_proto_init() {
	if File_services_provider_v1_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_provider_v1_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ecosystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEcosystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEcosystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEcosystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemDisplayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemDisplayDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEcosystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemDisplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemDisplayDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcosystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicEcosystemInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicEcosystemInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicEcosystemInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOberonKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOberonKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveDomainVerificationRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveDomainVerificationRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshDomainVerificationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshDomainVerificationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchWalletConfigurationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchWalletConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IonOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_provider_v1_provider_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest_DidCommInvitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_provider_v1_provider_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*UpgradeDidRequest_Email)(nil),
		(*UpgradeDidRequest_WalletId)(nil),
		(*UpgradeDidRequest_DidUri)(nil),
		(*UpgradeDidRequest_IonOptions)(nil),
		(*UpgradeDidRequest_IndyOptions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_provider_v1_provider_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_provider_v1_provider_proto_goTypes,
		DependencyIndexes: file_services_provider_v1_provider_proto_depIdxs,
		EnumInfos:         file_services_provider_v1_provider_proto_enumTypes,
		MessageInfos:      file_services_provider_v1_provider_proto_msgTypes,
	}.Build()
	File_services_provider_v1_provider_proto = out.File
	file_services_provider_v1_provider_proto_rawDesc = nil
	file_services_provider_v1_provider_proto_goTypes = nil
	file_services_provider_v1_provider_proto_depIdxs = nil
}
