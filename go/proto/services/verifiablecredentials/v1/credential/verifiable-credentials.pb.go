// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.3
// source: services/verifiable-credentials/v1/verifiable-credentials.proto

package credential

import (
	_ "github.com/trinsic-id/sdk/go/proto/services/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create and sign a JSON-LD Verifiable Credential from a template using public key tied to caller
type IssueFromTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of template to use
	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// JSON document string with keys corresponding to the fields of
	// the template referenced by `template_id`
	ValuesJson string `protobuf:"bytes,2,opt,name=values_json,json=valuesJson,proto3" json:"values_json,omitempty"`
	// Save a copy of the issued credential to this user's wallet. This copy will only contain
	// the credential data, but not the secret proof value. Issuers may use this data to
	// keep track of the details for revocation status.
	SaveCopy bool `protobuf:"varint,4,opt,name=save_copy,json=saveCopy,proto3" json:"save_copy,omitempty"`
	// The ISO8601 expiration UTC date of the credential. This is a reserved field in the VC specification.
	// If specified, the issued credential will contain an expiration date.
	// https://www.w3.org/TR/vc-data-model/#expiration
	ExpirationDate string `protobuf:"bytes,5,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// If true, the issued credential will contain an attestation of the issuer's membership in the ecosystem's
	// governance framework.
	IncludeGovernance bool `protobuf:"varint,6,opt,name=include_governance,json=includeGovernance,proto3" json:"include_governance,omitempty"`
}

func (x *IssueFromTemplateRequest) Reset() {
	*x = IssueFromTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueFromTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueFromTemplateRequest) ProtoMessage() {}

func (x *IssueFromTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueFromTemplateRequest.ProtoReflect.Descriptor instead.
func (*IssueFromTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{0}
}

func (x *IssueFromTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *IssueFromTemplateRequest) GetValuesJson() string {
	if x != nil {
		return x.ValuesJson
	}
	return ""
}

func (x *IssueFromTemplateRequest) GetSaveCopy() bool {
	if x != nil {
		return x.SaveCopy
	}
	return false
}

func (x *IssueFromTemplateRequest) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *IssueFromTemplateRequest) GetIncludeGovernance() bool {
	if x != nil {
		return x.IncludeGovernance
	}
	return false
}

// Response to `IssueFromTemplateRequest`
type IssueFromTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Verifiable Credential document, in JSON-LD form,
	// constructed from the specified template and values; signed
	// with public key tied to caller of `IssueFromTemplateRequest`
	DocumentJson string `protobuf:"bytes,1,opt,name=document_json,json=documentJson,proto3" json:"document_json,omitempty"`
}

func (x *IssueFromTemplateResponse) Reset() {
	*x = IssueFromTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueFromTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueFromTemplateResponse) ProtoMessage() {}

func (x *IssueFromTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueFromTemplateResponse.ProtoReflect.Descriptor instead.
func (*IssueFromTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{1}
}

func (x *IssueFromTemplateResponse) GetDocumentJson() string {
	if x != nil {
		return x.DocumentJson
	}
	return ""
}

// Request to create a proof for a Verifiable Credential using public key tied to caller.
// Either `item_id` or `document_json` may be provided, not both.
type CreateProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Selective disclosure specification. If nothing is provided, the entire proof is returned.
	// Either a custom JSON-LD frame is provided, or a list of attributes is provided for selective disclosure
	//
	// Types that are assignable to Disclosure:
	//
	//	*CreateProofRequest_RevealDocumentJson
	//	*CreateProofRequest_RevealTemplate
	Disclosure isCreateProofRequest_Disclosure `protobuf_oneof:"disclosure"`
	// Specify the input to be used to derive this proof.
	// Input can be an existing item in the wallet or an input document
	//
	// Types that are assignable to Proof:
	//
	//	*CreateProofRequest_ItemId
	//	*CreateProofRequest_DocumentJson
	Proof isCreateProofRequest_Proof `protobuf_oneof:"proof"`
	// Wrap the output in a verifiable presentation
	UseVerifiablePresentation bool `protobuf:"varint,4,opt,name=use_verifiable_presentation,json=useVerifiablePresentation,proto3" json:"use_verifiable_presentation,omitempty"`
	// Nonce value used to derive the proof. If not specified, a random nonce will be generated.
	// This value may be represented in base64 format in the proof model.
	Nonce []byte `protobuf:"bytes,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *CreateProofRequest) Reset() {
	*x = CreateProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProofRequest) ProtoMessage() {}

func (x *CreateProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProofRequest.ProtoReflect.Descriptor instead.
func (*CreateProofRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{2}
}

func (m *CreateProofRequest) GetDisclosure() isCreateProofRequest_Disclosure {
	if m != nil {
		return m.Disclosure
	}
	return nil
}

func (x *CreateProofRequest) GetRevealDocumentJson() string {
	if x, ok := x.GetDisclosure().(*CreateProofRequest_RevealDocumentJson); ok {
		return x.RevealDocumentJson
	}
	return ""
}

func (x *CreateProofRequest) GetRevealTemplate() *RevealTemplateAttributes {
	if x, ok := x.GetDisclosure().(*CreateProofRequest_RevealTemplate); ok {
		return x.RevealTemplate
	}
	return nil
}

func (m *CreateProofRequest) GetProof() isCreateProofRequest_Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (x *CreateProofRequest) GetItemId() string {
	if x, ok := x.GetProof().(*CreateProofRequest_ItemId); ok {
		return x.ItemId
	}
	return ""
}

func (x *CreateProofRequest) GetDocumentJson() string {
	if x, ok := x.GetProof().(*CreateProofRequest_DocumentJson); ok {
		return x.DocumentJson
	}
	return ""
}

func (x *CreateProofRequest) GetUseVerifiablePresentation() bool {
	if x != nil {
		return x.UseVerifiablePresentation
	}
	return false
}

func (x *CreateProofRequest) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type isCreateProofRequest_Disclosure interface {
	isCreateProofRequest_Disclosure()
}

type CreateProofRequest_RevealDocumentJson struct {
	// A valid JSON-LD frame describing which fields should be
	// revealed in the generated proof.
	// If unspecified, all fields in the document will be revealed
	RevealDocumentJson string `protobuf:"bytes,1,opt,name=reveal_document_json,json=revealDocumentJson,proto3,oneof"`
}

type CreateProofRequest_RevealTemplate struct {
	// Information about what sections of the document to reveal
	RevealTemplate *RevealTemplateAttributes `protobuf:"bytes,11,opt,name=reveal_template,json=revealTemplate,proto3,oneof"`
}

func (*CreateProofRequest_RevealDocumentJson) isCreateProofRequest_Disclosure() {}

func (*CreateProofRequest_RevealTemplate) isCreateProofRequest_Disclosure() {}

type isCreateProofRequest_Proof interface {
	isCreateProofRequest_Proof()
}

type CreateProofRequest_ItemId struct {
	// ID of wallet item stored in a Trinsic cloud wallet
	ItemId string `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3,oneof"`
}

type CreateProofRequest_DocumentJson struct {
	// A valid JSON-LD Verifiable Credential document string
	// with an unbound signature. The proof will be derived from this
	// document directly. The document will not be stored in the wallet.
	DocumentJson string `protobuf:"bytes,3,opt,name=document_json,json=documentJson,proto3,oneof"`
}

func (*CreateProofRequest_ItemId) isCreateProofRequest_Proof() {}

func (*CreateProofRequest_DocumentJson) isCreateProofRequest_Proof() {}

type RevealTemplateAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of document attributes to reveal. If unset, all attributes will be returned.
	TemplateAttributes []string `protobuf:"bytes,1,rep,name=template_attributes,json=templateAttributes,proto3" json:"template_attributes,omitempty"`
}

func (x *RevealTemplateAttributes) Reset() {
	*x = RevealTemplateAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevealTemplateAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevealTemplateAttributes) ProtoMessage() {}

func (x *RevealTemplateAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevealTemplateAttributes.ProtoReflect.Descriptor instead.
func (*RevealTemplateAttributes) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{3}
}

func (x *RevealTemplateAttributes) GetTemplateAttributes() []string {
	if x != nil {
		return x.TemplateAttributes
	}
	return nil
}

// Response to `CreateProofRequest`
type CreateProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Valid JSON-LD proof for the specified credential
	ProofDocumentJson string `protobuf:"bytes,1,opt,name=proof_document_json,json=proofDocumentJson,proto3" json:"proof_document_json,omitempty"`
}

func (x *CreateProofResponse) Reset() {
	*x = CreateProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProofResponse) ProtoMessage() {}

func (x *CreateProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProofResponse.ProtoReflect.Descriptor instead.
func (*CreateProofResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{4}
}

func (x *CreateProofResponse) GetProofDocumentJson() string {
	if x != nil {
		return x.ProofDocumentJson
	}
	return ""
}

// Request to verify a proof
type VerifyProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSON-LD proof document string to verify
	ProofDocumentJson string `protobuf:"bytes,1,opt,name=proof_document_json,json=proofDocumentJson,proto3" json:"proof_document_json,omitempty"`
}

func (x *VerifyProofRequest) Reset() {
	*x = VerifyProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyProofRequest) ProtoMessage() {}

func (x *VerifyProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyProofRequest.ProtoReflect.Descriptor instead.
func (*VerifyProofRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyProofRequest) GetProofDocumentJson() string {
	if x != nil {
		return x.ProofDocumentJson
	}
	return ""
}

// Response to `VerifyProofRequest`
type VerifyProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether all validations in `validation_results` passed
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// Results of each validation check performed,
	// such as schema conformance, revocation status, signature, etc.
	// Detailed results are provided for failed validations.
	ValidationResults map[string]*ValidationMessage `protobuf:"bytes,3,rep,name=validation_results,json=validationResults,proto3" json:"validation_results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VerifyProofResponse) Reset() {
	*x = VerifyProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyProofResponse) ProtoMessage() {}

func (x *VerifyProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyProofResponse.ProtoReflect.Descriptor instead.
func (*VerifyProofResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyProofResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *VerifyProofResponse) GetValidationResults() map[string]*ValidationMessage {
	if x != nil {
		return x.ValidationResults
	}
	return nil
}

// Result of a validation check on a proof
type ValidationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether this validation check passed
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// If validation failed, contains messages explaining why
	Messages []string `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *ValidationMessage) Reset() {
	*x = ValidationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationMessage) ProtoMessage() {}

func (x *ValidationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationMessage.ProtoReflect.Descriptor instead.
func (*ValidationMessage) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{7}
}

func (x *ValidationMessage) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidationMessage) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Request to send a document to another user's wallet
type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DeliveryMethod:
	//
	//	*SendRequest_Email
	//	*SendRequest_WalletId
	//	*SendRequest_DidUri
	//	*SendRequest_PhoneNumber
	DeliveryMethod isSendRequest_DeliveryMethod `protobuf_oneof:"delivery_method"`
	// Send email notification that credential has been sent to a wallet
	SendNotification bool `protobuf:"varint,4,opt,name=send_notification,json=sendNotification,proto3" json:"send_notification,omitempty"`
	// JSON document to send to recipient
	DocumentJson string `protobuf:"bytes,100,opt,name=document_json,json=documentJson,proto3" json:"document_json,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{8}
}

func (m *SendRequest) GetDeliveryMethod() isSendRequest_DeliveryMethod {
	if m != nil {
		return m.DeliveryMethod
	}
	return nil
}

func (x *SendRequest) GetEmail() string {
	if x, ok := x.GetDeliveryMethod().(*SendRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *SendRequest) GetWalletId() string {
	if x, ok := x.GetDeliveryMethod().(*SendRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *SendRequest) GetDidUri() string {
	if x, ok := x.GetDeliveryMethod().(*SendRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *SendRequest) GetPhoneNumber() string {
	if x, ok := x.GetDeliveryMethod().(*SendRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *SendRequest) GetSendNotification() bool {
	if x != nil {
		return x.SendNotification
	}
	return false
}

func (x *SendRequest) GetDocumentJson() string {
	if x != nil {
		return x.DocumentJson
	}
	return ""
}

type isSendRequest_DeliveryMethod interface {
	isSendRequest_DeliveryMethod()
}

type SendRequest_Email struct {
	// Email address of user to whom you'll send the item
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type SendRequest_WalletId struct {
	// Wallet ID of the recipient within the ecosystem
	WalletId string `protobuf:"bytes,5,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type SendRequest_DidUri struct {
	// DID URI of the recipient
	DidUri string `protobuf:"bytes,6,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type SendRequest_PhoneNumber struct {
	// SMS of user to whom you'll send the item
	PhoneNumber string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

func (*SendRequest_Email) isSendRequest_DeliveryMethod() {}

func (*SendRequest_WalletId) isSendRequest_DeliveryMethod() {}

func (*SendRequest_DidUri) isSendRequest_DeliveryMethod() {}

func (*SendRequest_PhoneNumber) isSendRequest_DeliveryMethod() {}

// Response to `SendRequest`
type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{9}
}

// Request to update a credential's revocation status
type UpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Credential Status ID to update. This is not the same as the credential's ID.
	CredentialStatusId string `protobuf:"bytes,1,opt,name=credential_status_id,json=credentialStatusId,proto3" json:"credential_status_id,omitempty"`
	// New revocation status of credential
	Revoked bool `protobuf:"varint,2,opt,name=revoked,proto3" json:"revoked,omitempty"`
}

func (x *UpdateStatusRequest) Reset() {
	*x = UpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRequest) ProtoMessage() {}

func (x *UpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStatusRequest) GetCredentialStatusId() string {
	if x != nil {
		return x.CredentialStatusId
	}
	return ""
}

func (x *UpdateStatusRequest) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

// Response to `UpdateStatusRequest`
type UpdateStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStatusResponse) Reset() {
	*x = UpdateStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResponse) ProtoMessage() {}

func (x *UpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{11}
}

// Request to check a credential's revocation status
type CheckStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Credential Status ID to check. This is not the same as the credential's ID.
	CredentialStatusId string `protobuf:"bytes,1,opt,name=credential_status_id,json=credentialStatusId,proto3" json:"credential_status_id,omitempty"`
}

func (x *CheckStatusRequest) Reset() {
	*x = CheckStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusRequest) ProtoMessage() {}

func (x *CheckStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{12}
}

func (x *CheckStatusRequest) GetCredentialStatusId() string {
	if x != nil {
		return x.CredentialStatusId
	}
	return ""
}

// Response to `CheckStatusRequest`
type CheckStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The credential's revocation status
	Revoked bool `protobuf:"varint,1,opt,name=revoked,proto3" json:"revoked,omitempty"`
}

func (x *CheckStatusResponse) Reset() {
	*x = CheckStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusResponse) ProtoMessage() {}

func (x *CheckStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP(), []int{13}
}

func (x *CheckStatusResponse) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

var File_services_verifiable_credentials_v1_verifiable_credentials_proto protoreflect.FileDescriptor

var file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2d,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x18, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x64, 0x22, 0x40, 0x0a, 0x19, 0x49, 0x73, 0x73, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xe5, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x72,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x76,
	0x65, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x65, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1b, 0x75, 0x73, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x75, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73,
	0x75, 0x72, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x4b, 0x0a, 0x18,
	0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e,
	0x22, 0x44, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xc5, 0x02, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x7c, 0x0a, 0x12, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x7a, 0x0a, 0x16, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4a,
	0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x8e, 0x02, 0x0a, 0x0b, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x0c,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x52, 0x17, 0x64, 0x69, 0x64, 0x63, 0x6f, 0x6d, 0x6d, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x0e, 0x0a, 0x0c, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x22, 0x2f,
	0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x32,
	0x8b, 0x06, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x8e, 0x01, 0x0a, 0x11, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x35, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x99, 0x01,
	0x0a, 0x29, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0xa2, 0x02, 0x0f, 0x54, 0x72,
	0x69, 0x6e, 0x73, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xaa, 0x02, 0x29,
	0x54, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescOnce sync.Once
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescData = file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDesc
)

func file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescGZIP() []byte {
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescOnce.Do(func() {
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescData)
	})
	return file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDescData
}

var file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_services_verifiable_credentials_v1_verifiable_credentials_proto_goTypes = []interface{}{
	(*IssueFromTemplateRequest)(nil),  // 0: services.verifiablecredentials.v1.IssueFromTemplateRequest
	(*IssueFromTemplateResponse)(nil), // 1: services.verifiablecredentials.v1.IssueFromTemplateResponse
	(*CreateProofRequest)(nil),        // 2: services.verifiablecredentials.v1.CreateProofRequest
	(*RevealTemplateAttributes)(nil),  // 3: services.verifiablecredentials.v1.RevealTemplateAttributes
	(*CreateProofResponse)(nil),       // 4: services.verifiablecredentials.v1.CreateProofResponse
	(*VerifyProofRequest)(nil),        // 5: services.verifiablecredentials.v1.VerifyProofRequest
	(*VerifyProofResponse)(nil),       // 6: services.verifiablecredentials.v1.VerifyProofResponse
	(*ValidationMessage)(nil),         // 7: services.verifiablecredentials.v1.ValidationMessage
	(*SendRequest)(nil),               // 8: services.verifiablecredentials.v1.SendRequest
	(*SendResponse)(nil),              // 9: services.verifiablecredentials.v1.SendResponse
	(*UpdateStatusRequest)(nil),       // 10: services.verifiablecredentials.v1.UpdateStatusRequest
	(*UpdateStatusResponse)(nil),      // 11: services.verifiablecredentials.v1.UpdateStatusResponse
	(*CheckStatusRequest)(nil),        // 12: services.verifiablecredentials.v1.CheckStatusRequest
	(*CheckStatusResponse)(nil),       // 13: services.verifiablecredentials.v1.CheckStatusResponse
	nil,                               // 14: services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry
}
var file_services_verifiable_credentials_v1_verifiable_credentials_proto_depIdxs = []int32{
	3,  // 0: services.verifiablecredentials.v1.CreateProofRequest.reveal_template:type_name -> services.verifiablecredentials.v1.RevealTemplateAttributes
	14, // 1: services.verifiablecredentials.v1.VerifyProofResponse.validation_results:type_name -> services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry
	7,  // 2: services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value:type_name -> services.verifiablecredentials.v1.ValidationMessage
	0,  // 3: services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate:input_type -> services.verifiablecredentials.v1.IssueFromTemplateRequest
	12, // 4: services.verifiablecredentials.v1.VerifiableCredential.CheckStatus:input_type -> services.verifiablecredentials.v1.CheckStatusRequest
	10, // 5: services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus:input_type -> services.verifiablecredentials.v1.UpdateStatusRequest
	2,  // 6: services.verifiablecredentials.v1.VerifiableCredential.CreateProof:input_type -> services.verifiablecredentials.v1.CreateProofRequest
	5,  // 7: services.verifiablecredentials.v1.VerifiableCredential.VerifyProof:input_type -> services.verifiablecredentials.v1.VerifyProofRequest
	8,  // 8: services.verifiablecredentials.v1.VerifiableCredential.Send:input_type -> services.verifiablecredentials.v1.SendRequest
	1,  // 9: services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate:output_type -> services.verifiablecredentials.v1.IssueFromTemplateResponse
	13, // 10: services.verifiablecredentials.v1.VerifiableCredential.CheckStatus:output_type -> services.verifiablecredentials.v1.CheckStatusResponse
	11, // 11: services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus:output_type -> services.verifiablecredentials.v1.UpdateStatusResponse
	4,  // 12: services.verifiablecredentials.v1.VerifiableCredential.CreateProof:output_type -> services.verifiablecredentials.v1.CreateProofResponse
	6,  // 13: services.verifiablecredentials.v1.VerifiableCredential.VerifyProof:output_type -> services.verifiablecredentials.v1.VerifyProofResponse
	9,  // 14: services.verifiablecredentials.v1.VerifiableCredential.Send:output_type -> services.verifiablecredentials.v1.SendResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_services_verifiable_credentials_v1_verifiable_credentials_proto_init() }
func file_services_verifiable_credentials_v1_verifiable_credentials_proto_init() {
	if File_services_verifiable_credentials_v1_verifiable_credentials_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueFromTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueFromTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevealTemplateAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateProofRequest_RevealDocumentJson)(nil),
		(*CreateProofRequest_RevealTemplate)(nil),
		(*CreateProofRequest_ItemId)(nil),
		(*CreateProofRequest_DocumentJson)(nil),
	}
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SendRequest_Email)(nil),
		(*SendRequest_WalletId)(nil),
		(*SendRequest_DidUri)(nil),
		(*SendRequest_PhoneNumber)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_verifiable_credentials_v1_verifiable_credentials_proto_goTypes,
		DependencyIndexes: file_services_verifiable_credentials_v1_verifiable_credentials_proto_depIdxs,
		MessageInfos:      file_services_verifiable_credentials_v1_verifiable_credentials_proto_msgTypes,
	}.Build()
	File_services_verifiable_credentials_v1_verifiable_credentials_proto = out.File
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_rawDesc = nil
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_goTypes = nil
	file_services_verifiable_credentials_v1_verifiable_credentials_proto_depIdxs = nil
}
