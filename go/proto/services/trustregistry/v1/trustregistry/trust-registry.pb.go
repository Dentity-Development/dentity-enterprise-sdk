// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: services/trust-registry/v1/trust-registry.proto

package trustregistry

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistrationStatus int32

const (
	RegistrationStatus_CURRENT    RegistrationStatus = 0  // Member is currently authorized, as of the time of the query
	RegistrationStatus_EXPIRED    RegistrationStatus = 1  // Member's authorization has expired
	RegistrationStatus_TERMINATED RegistrationStatus = 2  // Member has voluntarily ceased Issuer role under the specific EGF
	RegistrationStatus_REVOKED    RegistrationStatus = 3  // Member authority under specific EGF was terminated by the governing authority
	RegistrationStatus_NOT_FOUND  RegistrationStatus = 10 // Member is not associated with given credential schema in the EGF
)

// Enum value maps for RegistrationStatus.
var (
	RegistrationStatus_name = map[int32]string{
		0:  "CURRENT",
		1:  "EXPIRED",
		2:  "TERMINATED",
		3:  "REVOKED",
		10: "NOT_FOUND",
	}
	RegistrationStatus_value = map[string]int32{
		"CURRENT":    0,
		"EXPIRED":    1,
		"TERMINATED": 2,
		"REVOKED":    3,
		"NOT_FOUND":  10,
	}
)

func (x RegistrationStatus) Enum() *RegistrationStatus {
	p := new(RegistrationStatus)
	*p = x
	return p
}

func (x RegistrationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_services_trust_registry_v1_trust_registry_proto_enumTypes[0].Descriptor()
}

func (RegistrationStatus) Type() protoreflect.EnumType {
	return &file_services_trust_registry_v1_trust_registry_proto_enumTypes[0]
}

func (x RegistrationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistrationStatus.Descriptor instead.
func (RegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{0}
}

// Request to register a member as a valid issuer of a specific credential schema.
// Only one of `did_uri`, `wallet_id`, or `email` may be specified.
type RegisterMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Member:
	//
	//	*RegisterMemberRequest_DidUri
	//	*RegisterMemberRequest_WalletId
	//	*RegisterMemberRequest_Email
	Member isRegisterMemberRequest_Member `protobuf_oneof:"member"`
	// URI of credential schema to register member as authorized issuer of
	SchemaUri string `protobuf:"bytes,10,opt,name=schema_uri,json=schemaUri,proto3" json:"schema_uri,omitempty"`
	// Unix Timestamp member is valid from. Member will not be considered valid before this timestamp.
	ValidFromUtc uint64 `protobuf:"varint,11,opt,name=valid_from_utc,json=validFromUtc,proto3" json:"valid_from_utc,omitempty"`
	// Unix Timestamp member is valid until. Member will not be considered valid after this timestamp.
	ValidUntilUtc uint64 `protobuf:"varint,12,opt,name=valid_until_utc,json=validUntilUtc,proto3" json:"valid_until_utc,omitempty"`
}

func (x *RegisterMemberRequest) Reset() {
	*x = RegisterMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberRequest) ProtoMessage() {}

func (x *RegisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberRequest.ProtoReflect.Descriptor instead.
func (*RegisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{0}
}

func (m *RegisterMemberRequest) GetMember() isRegisterMemberRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *RegisterMemberRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*RegisterMemberRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *RegisterMemberRequest) GetWalletId() string {
	if x, ok := x.GetMember().(*RegisterMemberRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *RegisterMemberRequest) GetEmail() string {
	if x, ok := x.GetMember().(*RegisterMemberRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *RegisterMemberRequest) GetSchemaUri() string {
	if x != nil {
		return x.SchemaUri
	}
	return ""
}

func (x *RegisterMemberRequest) GetValidFromUtc() uint64 {
	if x != nil {
		return x.ValidFromUtc
	}
	return 0
}

func (x *RegisterMemberRequest) GetValidUntilUtc() uint64 {
	if x != nil {
		return x.ValidUntilUtc
	}
	return 0
}

type isRegisterMemberRequest_Member interface {
	isRegisterMemberRequest_Member()
}

type RegisterMemberRequest_DidUri struct {
	// DID URI of member to register
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type RegisterMemberRequest_WalletId struct {
	// Trinsic Wallet ID of member to register
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type RegisterMemberRequest_Email struct {
	// Email address of member to register. Must be associated with an existing Trinsic account.
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

func (*RegisterMemberRequest_DidUri) isRegisterMemberRequest_Member() {}

func (*RegisterMemberRequest_WalletId) isRegisterMemberRequest_Member() {}

func (*RegisterMemberRequest_Email) isRegisterMemberRequest_Member() {}

// Response to `RegisterMemberRequest`
type RegisterMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterMemberResponse) Reset() {
	*x = RegisterMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberResponse) ProtoMessage() {}

func (x *RegisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberResponse.ProtoReflect.Descriptor instead.
func (*RegisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{1}
}

// Request to unregister a member as a valid issuer of a specific credential schema.
// Only one of `did_uri`, `wallet_id`, or `email` may be specified.
// The URI of the credential schema must be specified.
type UnregisterMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Member:
	//
	//	*UnregisterMemberRequest_DidUri
	//	*UnregisterMemberRequest_WalletId
	//	*UnregisterMemberRequest_Email
	Member isUnregisterMemberRequest_Member `protobuf_oneof:"member"`
	// URI of credential schema to unregister member as authorized issuer of
	SchemaUri string `protobuf:"bytes,10,opt,name=schema_uri,json=schemaUri,proto3" json:"schema_uri,omitempty"`
}

func (x *UnregisterMemberRequest) Reset() {
	*x = UnregisterMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberRequest) ProtoMessage() {}

func (x *UnregisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberRequest.ProtoReflect.Descriptor instead.
func (*UnregisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{2}
}

func (m *UnregisterMemberRequest) GetMember() isUnregisterMemberRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *UnregisterMemberRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*UnregisterMemberRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *UnregisterMemberRequest) GetWalletId() string {
	if x, ok := x.GetMember().(*UnregisterMemberRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *UnregisterMemberRequest) GetEmail() string {
	if x, ok := x.GetMember().(*UnregisterMemberRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UnregisterMemberRequest) GetSchemaUri() string {
	if x != nil {
		return x.SchemaUri
	}
	return ""
}

type isUnregisterMemberRequest_Member interface {
	isUnregisterMemberRequest_Member()
}

type UnregisterMemberRequest_DidUri struct {
	// DID URI of member to unregister
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type UnregisterMemberRequest_WalletId struct {
	// Trinsic Wallet ID of member to unregister
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type UnregisterMemberRequest_Email struct {
	// Email address of member to unregister. Must be associated with an existing Trinsic account.
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

func (*UnregisterMemberRequest_DidUri) isUnregisterMemberRequest_Member() {}

func (*UnregisterMemberRequest_WalletId) isUnregisterMemberRequest_Member() {}

func (*UnregisterMemberRequest_Email) isUnregisterMemberRequest_Member() {}

// Response to `UnregisterMemberRequest`
type UnregisterMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterMemberResponse) Reset() {
	*x = UnregisterMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberResponse) ProtoMessage() {}

func (x *UnregisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberResponse.ProtoReflect.Descriptor instead.
func (*UnregisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{3}
}

// Request to fetch member status in Trust Registry for a specific credential schema.
type GetMemberAuthorizationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DID URI of member
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3" json:"did_uri,omitempty"`
	// URI of credential schema associated with member
	SchemaUri string `protobuf:"bytes,2,opt,name=schema_uri,json=schemaUri,proto3" json:"schema_uri,omitempty"`
}

func (x *GetMemberAuthorizationStatusRequest) Reset() {
	*x = GetMemberAuthorizationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberAuthorizationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberAuthorizationStatusRequest) ProtoMessage() {}

func (x *GetMemberAuthorizationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberAuthorizationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMemberAuthorizationStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{4}
}

func (x *GetMemberAuthorizationStatusRequest) GetDidUri() string {
	if x != nil {
		return x.DidUri
	}
	return ""
}

func (x *GetMemberAuthorizationStatusRequest) GetSchemaUri() string {
	if x != nil {
		return x.SchemaUri
	}
	return ""
}

// Response to `GetMemberAuthorizationStatusRequest`
type GetMemberAuthorizationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of member for given credential schema
	Status RegistrationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=services.trustregistry.v1.RegistrationStatus" json:"status,omitempty"`
}

func (x *GetMemberAuthorizationStatusResponse) Reset() {
	*x = GetMemberAuthorizationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberAuthorizationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberAuthorizationStatusResponse) ProtoMessage() {}

func (x *GetMemberAuthorizationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberAuthorizationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetMemberAuthorizationStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{5}
}

func (x *GetMemberAuthorizationStatusResponse) GetStatus() RegistrationStatus {
	if x != nil {
		return x.Status
	}
	return RegistrationStatus_CURRENT
}

type ListAuthorizedMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of schema that needs to be checked
	SchemaUri *string `protobuf:"bytes,1,opt,name=schema_uri,json=schemaUri,proto3,oneof" json:"schema_uri,omitempty"`
	// Token to fetch next set of results, from previous `ListAuthorizedMembersResponse`
	ContinuationToken *string `protobuf:"bytes,2,opt,name=continuation_token,json=continuationToken,proto3,oneof" json:"continuation_token,omitempty"`
}

func (x *ListAuthorizedMembersRequest) Reset() {
	*x = ListAuthorizedMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthorizedMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorizedMembersRequest) ProtoMessage() {}

func (x *ListAuthorizedMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorizedMembersRequest.ProtoReflect.Descriptor instead.
func (*ListAuthorizedMembersRequest) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{6}
}

func (x *ListAuthorizedMembersRequest) GetSchemaUri() string {
	if x != nil && x.SchemaUri != nil {
		return *x.SchemaUri
	}
	return ""
}

func (x *ListAuthorizedMembersRequest) GetContinuationToken() string {
	if x != nil && x.ContinuationToken != nil {
		return *x.ContinuationToken
	}
	return ""
}

// Response to `ListAuthorizedMembersRequest`
type ListAuthorizedMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSON string containing array of resultant objects
	AuthorizedMembers []*AuthorizedMember `protobuf:"bytes,1,rep,name=authorized_members,json=authorizedMembers,proto3" json:"authorized_members,omitempty"`
	// Whether more data is available to fetch for query
	HasMoreResults bool `protobuf:"varint,2,opt,name=has_more_results,json=hasMoreResults,proto3" json:"has_more_results,omitempty"`
	// Token to fetch next set of results via `ListAuthorizedMembersRequest`
	ContinuationToken string `protobuf:"bytes,3,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
}

func (x *ListAuthorizedMembersResponse) Reset() {
	*x = ListAuthorizedMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthorizedMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthorizedMembersResponse) ProtoMessage() {}

func (x *ListAuthorizedMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthorizedMembersResponse.ProtoReflect.Descriptor instead.
func (*ListAuthorizedMembersResponse) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{7}
}

func (x *ListAuthorizedMembersResponse) GetAuthorizedMembers() []*AuthorizedMember {
	if x != nil {
		return x.AuthorizedMembers
	}
	return nil
}

func (x *ListAuthorizedMembersResponse) GetHasMoreResults() bool {
	if x != nil {
		return x.HasMoreResults
	}
	return false
}

func (x *ListAuthorizedMembersResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type AuthorizedMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did                     string                    `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	AuthorizedMemberSchemas []*AuthorizedMemberSchema `protobuf:"bytes,2,rep,name=authorized_member_schemas,json=authorizedMemberSchemas,proto3" json:"authorized_member_schemas,omitempty"`
}

func (x *AuthorizedMember) Reset() {
	*x = AuthorizedMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedMember) ProtoMessage() {}

func (x *AuthorizedMember) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedMember.ProtoReflect.Descriptor instead.
func (*AuthorizedMember) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{8}
}

func (x *AuthorizedMember) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *AuthorizedMember) GetAuthorizedMemberSchemas() []*AuthorizedMemberSchema {
	if x != nil {
		return x.AuthorizedMemberSchemas
	}
	return nil
}

type AuthorizedMemberSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaUri     string `protobuf:"bytes,1,opt,name=schema_uri,json=schemaUri,proto3" json:"schema_uri,omitempty"`
	Status        string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	StatusDetails string `protobuf:"bytes,3,opt,name=status_details,json=statusDetails,proto3" json:"status_details,omitempty"`
	ValidFrom     uint64 `protobuf:"varint,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidUntil    uint64 `protobuf:"varint,5,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
}

func (x *AuthorizedMemberSchema) Reset() {
	*x = AuthorizedMemberSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedMemberSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedMemberSchema) ProtoMessage() {}

func (x *AuthorizedMemberSchema) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedMemberSchema.ProtoReflect.Descriptor instead.
func (*AuthorizedMemberSchema) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorizedMemberSchema) GetSchemaUri() string {
	if x != nil {
		return x.SchemaUri
	}
	return ""
}

func (x *AuthorizedMemberSchema) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AuthorizedMemberSchema) GetStatusDetails() string {
	if x != nil {
		return x.StatusDetails
	}
	return ""
}

func (x *AuthorizedMemberSchema) GetValidFrom() uint64 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *AuthorizedMemberSchema) GetValidUntil() uint64 {
	if x != nil {
		return x.ValidUntil
	}
	return 0
}

// Request to get a member of the Trust Registry
type GetMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Member:
	//
	//	*GetMemberRequest_DidUri
	//	*GetMemberRequest_WalletId
	//	*GetMemberRequest_Email
	Member isGetMemberRequest_Member `protobuf_oneof:"member"`
}

func (x *GetMemberRequest) Reset() {
	*x = GetMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberRequest) ProtoMessage() {}

func (x *GetMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberRequest.ProtoReflect.Descriptor instead.
func (*GetMemberRequest) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{10}
}

func (m *GetMemberRequest) GetMember() isGetMemberRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *GetMemberRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*GetMemberRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *GetMemberRequest) GetWalletId() string {
	if x, ok := x.GetMember().(*GetMemberRequest_WalletId); ok {
		return x.WalletId
	}
	return ""
}

func (x *GetMemberRequest) GetEmail() string {
	if x, ok := x.GetMember().(*GetMemberRequest_Email); ok {
		return x.Email
	}
	return ""
}

type isGetMemberRequest_Member interface {
	isGetMemberRequest_Member()
}

type GetMemberRequest_DidUri struct {
	// DID URI of member to get
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type GetMemberRequest_WalletId struct {
	// Trinsic Wallet ID of member to get
	WalletId string `protobuf:"bytes,3,opt,name=wallet_id,json=walletId,proto3,oneof"`
}

type GetMemberRequest_Email struct {
	// Email address of member to get. Must be associated with an existing Trinsic account.
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

func (*GetMemberRequest_DidUri) isGetMemberRequest_Member() {}

func (*GetMemberRequest_WalletId) isGetMemberRequest_Member() {}

func (*GetMemberRequest_Email) isGetMemberRequest_Member() {}

// Response to `GetMemberAuthorizationStatusRequest`
type GetMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Member for given did in given framework
	AuthorizedMember *AuthorizedMember `protobuf:"bytes,1,opt,name=authorized_member,json=authorizedMember,proto3" json:"authorized_member,omitempty"`
}

func (x *GetMemberResponse) Reset() {
	*x = GetMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberResponse) ProtoMessage() {}

func (x *GetMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_trust_registry_v1_trust_registry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberResponse.ProtoReflect.Descriptor instead.
func (*GetMemberResponse) Descriptor() ([]byte, []int) {
	return file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP(), []int{11}
}

func (x *GetMemberResponse) GetAuthorizedMember() *AuthorizedMember {
	if x != nil {
		return x.AuthorizedMember
	}
	return nil
}

var File_services_trust_registry_v1_trust_registry_proto protoreflect.FileDescriptor

var file_services_trust_registry_v1_trust_registry_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x69, 0x12, 0x24,
	0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x74, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x55, 0x74, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e,
	0x74, 0x69, 0x6c, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x55, 0x74, 0x63, 0x42, 0x08, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x1e, 0x10, 0x1f, 0x52, 0x0c, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72,
	0x69, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x14, 0x10,
	0x15, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x69, 0x22, 0x6d, 0x0a, 0x24, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x69, 0x88, 0x01, 0x01, 0x12, 0x32,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72,
	0x69, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x93, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x6d, 0x0a, 0x19, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x17, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x69, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x6e,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6d,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x5a, 0x0a,
	0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0a, 0x32, 0x90, 0x07, 0x0a, 0x0d, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0xa2, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0xaa, 0x01, 0x0a, 0x10, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x75, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0xda, 0x01,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01, 0x2a, 0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x65,
	0x74, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x37, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a,
	0x01, 0x2a, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x8e, 0x01, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x72, 0x0a, 0x21,
	0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x50, 0x01, 0x5a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0xaa, 0x02, 0x21, 0x54,
	0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_trust_registry_v1_trust_registry_proto_rawDescOnce sync.Once
	file_services_trust_registry_v1_trust_registry_proto_rawDescData = file_services_trust_registry_v1_trust_registry_proto_rawDesc
)

func file_services_trust_registry_v1_trust_registry_proto_rawDescGZIP() []byte {
	file_services_trust_registry_v1_trust_registry_proto_rawDescOnce.Do(func() {
		file_services_trust_registry_v1_trust_registry_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_trust_registry_v1_trust_registry_proto_rawDescData)
	})
	return file_services_trust_registry_v1_trust_registry_proto_rawDescData
}

var file_services_trust_registry_v1_trust_registry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_services_trust_registry_v1_trust_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_services_trust_registry_v1_trust_registry_proto_goTypes = []interface{}{
	(RegistrationStatus)(0),                      // 0: services.trustregistry.v1.RegistrationStatus
	(*RegisterMemberRequest)(nil),                // 1: services.trustregistry.v1.RegisterMemberRequest
	(*RegisterMemberResponse)(nil),               // 2: services.trustregistry.v1.RegisterMemberResponse
	(*UnregisterMemberRequest)(nil),              // 3: services.trustregistry.v1.UnregisterMemberRequest
	(*UnregisterMemberResponse)(nil),             // 4: services.trustregistry.v1.UnregisterMemberResponse
	(*GetMemberAuthorizationStatusRequest)(nil),  // 5: services.trustregistry.v1.GetMemberAuthorizationStatusRequest
	(*GetMemberAuthorizationStatusResponse)(nil), // 6: services.trustregistry.v1.GetMemberAuthorizationStatusResponse
	(*ListAuthorizedMembersRequest)(nil),         // 7: services.trustregistry.v1.ListAuthorizedMembersRequest
	(*ListAuthorizedMembersResponse)(nil),        // 8: services.trustregistry.v1.ListAuthorizedMembersResponse
	(*AuthorizedMember)(nil),                     // 9: services.trustregistry.v1.AuthorizedMember
	(*AuthorizedMemberSchema)(nil),               // 10: services.trustregistry.v1.AuthorizedMemberSchema
	(*GetMemberRequest)(nil),                     // 11: services.trustregistry.v1.GetMemberRequest
	(*GetMemberResponse)(nil),                    // 12: services.trustregistry.v1.GetMemberResponse
}
var file_services_trust_registry_v1_trust_registry_proto_depIdxs = []int32{
	0,  // 0: services.trustregistry.v1.GetMemberAuthorizationStatusResponse.status:type_name -> services.trustregistry.v1.RegistrationStatus
	9,  // 1: services.trustregistry.v1.ListAuthorizedMembersResponse.authorized_members:type_name -> services.trustregistry.v1.AuthorizedMember
	10, // 2: services.trustregistry.v1.AuthorizedMember.authorized_member_schemas:type_name -> services.trustregistry.v1.AuthorizedMemberSchema
	9,  // 3: services.trustregistry.v1.GetMemberResponse.authorized_member:type_name -> services.trustregistry.v1.AuthorizedMember
	1,  // 4: services.trustregistry.v1.TrustRegistry.RegisterMember:input_type -> services.trustregistry.v1.RegisterMemberRequest
	3,  // 5: services.trustregistry.v1.TrustRegistry.UnregisterMember:input_type -> services.trustregistry.v1.UnregisterMemberRequest
	5,  // 6: services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus:input_type -> services.trustregistry.v1.GetMemberAuthorizationStatusRequest
	7,  // 7: services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers:input_type -> services.trustregistry.v1.ListAuthorizedMembersRequest
	11, // 8: services.trustregistry.v1.TrustRegistry.GetMember:input_type -> services.trustregistry.v1.GetMemberRequest
	2,  // 9: services.trustregistry.v1.TrustRegistry.RegisterMember:output_type -> services.trustregistry.v1.RegisterMemberResponse
	4,  // 10: services.trustregistry.v1.TrustRegistry.UnregisterMember:output_type -> services.trustregistry.v1.UnregisterMemberResponse
	6,  // 11: services.trustregistry.v1.TrustRegistry.GetMemberAuthorizationStatus:output_type -> services.trustregistry.v1.GetMemberAuthorizationStatusResponse
	8,  // 12: services.trustregistry.v1.TrustRegistry.ListAuthorizedMembers:output_type -> services.trustregistry.v1.ListAuthorizedMembersResponse
	12, // 13: services.trustregistry.v1.TrustRegistry.GetMember:output_type -> services.trustregistry.v1.GetMemberResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_services_trust_registry_v1_trust_registry_proto_init() }
func file_services_trust_registry_v1_trust_registry_proto_init() {
	if File_services_trust_registry_v1_trust_registry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberAuthorizationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberAuthorizationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthorizedMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthorizedMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedMemberSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_trust_registry_v1_trust_registry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_trust_registry_v1_trust_registry_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RegisterMemberRequest_DidUri)(nil),
		(*RegisterMemberRequest_WalletId)(nil),
		(*RegisterMemberRequest_Email)(nil),
	}
	file_services_trust_registry_v1_trust_registry_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*UnregisterMemberRequest_DidUri)(nil),
		(*UnregisterMemberRequest_WalletId)(nil),
		(*UnregisterMemberRequest_Email)(nil),
	}
	file_services_trust_registry_v1_trust_registry_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_services_trust_registry_v1_trust_registry_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*GetMemberRequest_DidUri)(nil),
		(*GetMemberRequest_WalletId)(nil),
		(*GetMemberRequest_Email)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_trust_registry_v1_trust_registry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_trust_registry_v1_trust_registry_proto_goTypes,
		DependencyIndexes: file_services_trust_registry_v1_trust_registry_proto_depIdxs,
		EnumInfos:         file_services_trust_registry_v1_trust_registry_proto_enumTypes,
		MessageInfos:      file_services_trust_registry_v1_trust_registry_proto_msgTypes,
	}.Build()
	File_services_trust_registry_v1_trust_registry_proto = out.File
	file_services_trust_registry_v1_trust_registry_proto_rawDesc = nil
	file_services_trust_registry_v1_trust_registry_proto_goTypes = nil
	file_services_trust_registry_v1_trust_registry_proto_depIdxs = nil
}
