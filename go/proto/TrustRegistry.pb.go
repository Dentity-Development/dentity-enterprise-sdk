// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: TrustRegistry.proto

package sdk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistrationStatus int32

const (
	RegistrationStatus_CURRENT    RegistrationStatus = 0 // - the entity is currently authorized, as of time of the query.
	RegistrationStatus_EXPIRED    RegistrationStatus = 1 // - entity rights have expired.
	RegistrationStatus_TERMINATED RegistrationStatus = 2 // - entity has voluntarily ceased Issuer role under the specific EGF.
	RegistrationStatus_REVOKED    RegistrationStatus = 3 // - entity authority under specific EGF was terminated by the governing authority.
	RegistrationStatus_NOT_FOUND  RegistrationStatus = 10
)

// Enum value maps for RegistrationStatus.
var (
	RegistrationStatus_name = map[int32]string{
		0:  "CURRENT",
		1:  "EXPIRED",
		2:  "TERMINATED",
		3:  "REVOKED",
		10: "NOT_FOUND",
	}
	RegistrationStatus_value = map[string]int32{
		"CURRENT":    0,
		"EXPIRED":    1,
		"TERMINATED": 2,
		"REVOKED":    3,
		"NOT_FOUND":  10,
	}
)

func (x RegistrationStatus) Enum() *RegistrationStatus {
	p := new(RegistrationStatus)
	*p = x
	return p
}

func (x RegistrationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegistrationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_TrustRegistry_proto_enumTypes[0].Descriptor()
}

func (RegistrationStatus) Type() protoreflect.EnumType {
	return &file_TrustRegistry_proto_enumTypes[0]
}

func (x RegistrationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegistrationStatus.Descriptor instead.
func (RegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{0}
}

type AddFrameworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFramework *GovernanceFramework `protobuf:"bytes,1,opt,name=governance_framework,json=governanceFramework,proto3" json:"governance_framework,omitempty"`
}

func (x *AddFrameworkRequest) Reset() {
	*x = AddFrameworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrameworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrameworkRequest) ProtoMessage() {}

func (x *AddFrameworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrameworkRequest.ProtoReflect.Descriptor instead.
func (*AddFrameworkRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{0}
}

func (x *AddFrameworkRequest) GetGovernanceFramework() *GovernanceFramework {
	if x != nil {
		return x.GovernanceFramework
	}
	return nil
}

type AddFrameworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=trinsic.services.ResponseStatus" json:"status,omitempty"`
}

func (x *AddFrameworkResponse) Reset() {
	*x = AddFrameworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFrameworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFrameworkResponse) ProtoMessage() {}

func (x *AddFrameworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFrameworkResponse.ProtoReflect.Descriptor instead.
func (*AddFrameworkResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{1}
}

func (x *AddFrameworkResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

type RemoveFrameworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFramework *GovernanceFramework `protobuf:"bytes,1,opt,name=governance_framework,json=governanceFramework,proto3" json:"governance_framework,omitempty"`
}

func (x *RemoveFrameworkRequest) Reset() {
	*x = RemoveFrameworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFrameworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFrameworkRequest) ProtoMessage() {}

func (x *RemoveFrameworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFrameworkRequest.ProtoReflect.Descriptor instead.
func (*RemoveFrameworkRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveFrameworkRequest) GetGovernanceFramework() *GovernanceFramework {
	if x != nil {
		return x.GovernanceFramework
	}
	return nil
}

type RemoveFrameworkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=trinsic.services.ResponseStatus" json:"status,omitempty"`
}

func (x *RemoveFrameworkResponse) Reset() {
	*x = RemoveFrameworkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFrameworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFrameworkResponse) ProtoMessage() {}

func (x *RemoveFrameworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFrameworkResponse.ProtoReflect.Descriptor instead.
func (*RemoveFrameworkResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveFrameworkResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

type SearchRegistryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query             string          `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // SELECT c from c where c.type == 'GovernanceFramework'
	ContinuationToken string          `protobuf:"bytes,2,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
	Options           *RequestOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *SearchRegistryRequest) Reset() {
	*x = SearchRegistryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRegistryRequest) ProtoMessage() {}

func (x *SearchRegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRegistryRequest.ProtoReflect.Descriptor instead.
func (*SearchRegistryRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{4}
}

func (x *SearchRegistryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRegistryRequest) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

func (x *SearchRegistryRequest) GetOptions() *RequestOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type SearchRegistryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items             []*JsonPayload `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	HasMore           bool           `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Count             int32          `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	ContinuationToken string         `protobuf:"bytes,4,opt,name=continuation_token,json=continuationToken,proto3" json:"continuation_token,omitempty"`
}

func (x *SearchRegistryResponse) Reset() {
	*x = SearchRegistryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRegistryResponse) ProtoMessage() {}

func (x *SearchRegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRegistryResponse.ProtoReflect.Descriptor instead.
func (*SearchRegistryResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{5}
}

func (x *SearchRegistryResponse) GetItems() []*JsonPayload {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchRegistryResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchRegistryResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchRegistryResponse) GetContinuationToken() string {
	if x != nil {
		return x.ContinuationToken
	}
	return ""
}

type GovernanceFramework struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	TrustRegistryUri       string `protobuf:"bytes,2,opt,name=trust_registry_uri,json=trustRegistryUri,proto3" json:"trust_registry_uri,omitempty"`
	Description            string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GovernanceFramework) Reset() {
	*x = GovernanceFramework{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernanceFramework) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernanceFramework) ProtoMessage() {}

func (x *GovernanceFramework) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GovernanceFramework.ProtoReflect.Descriptor instead.
func (*GovernanceFramework) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{6}
}

func (x *GovernanceFramework) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *GovernanceFramework) GetTrustRegistryUri() string {
	if x != nil {
		return x.TrustRegistryUri
	}
	return ""
}

func (x *GovernanceFramework) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RegisterIssuerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Authority:
	//	*RegisterIssuerRequest_DidUri
	//	*RegisterIssuerRequest_X509Cert
	Authority              isRegisterIssuerRequest_Authority `protobuf_oneof:"authority"`
	CredentialTypeUri      string                            `protobuf:"bytes,10,opt,name=credential_type_uri,json=credentialTypeUri,proto3" json:"credential_type_uri,omitempty"`
	ValidFromUtc           uint64                            `protobuf:"varint,11,opt,name=valid_from_utc,json=validFromUtc,proto3" json:"valid_from_utc,omitempty"`
	ValidUntilUtc          uint64                            `protobuf:"varint,12,opt,name=valid_until_utc,json=validUntilUtc,proto3" json:"valid_until_utc,omitempty"`
	GovernanceFrameworkUri string                            `protobuf:"bytes,20,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	Options                *RequestOptions                   `protobuf:"bytes,100,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RegisterIssuerRequest) Reset() {
	*x = RegisterIssuerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterIssuerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterIssuerRequest) ProtoMessage() {}

func (x *RegisterIssuerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterIssuerRequest.ProtoReflect.Descriptor instead.
func (*RegisterIssuerRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{7}
}

func (m *RegisterIssuerRequest) GetAuthority() isRegisterIssuerRequest_Authority {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (x *RegisterIssuerRequest) GetDidUri() string {
	if x, ok := x.GetAuthority().(*RegisterIssuerRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *RegisterIssuerRequest) GetX509Cert() string {
	if x, ok := x.GetAuthority().(*RegisterIssuerRequest_X509Cert); ok {
		return x.X509Cert
	}
	return ""
}

func (x *RegisterIssuerRequest) GetCredentialTypeUri() string {
	if x != nil {
		return x.CredentialTypeUri
	}
	return ""
}

func (x *RegisterIssuerRequest) GetValidFromUtc() uint64 {
	if x != nil {
		return x.ValidFromUtc
	}
	return 0
}

func (x *RegisterIssuerRequest) GetValidUntilUtc() uint64 {
	if x != nil {
		return x.ValidUntilUtc
	}
	return 0
}

func (x *RegisterIssuerRequest) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *RegisterIssuerRequest) GetOptions() *RequestOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type isRegisterIssuerRequest_Authority interface {
	isRegisterIssuerRequest_Authority()
}

type RegisterIssuerRequest_DidUri struct {
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type RegisterIssuerRequest_X509Cert struct {
	X509Cert string `protobuf:"bytes,2,opt,name=x509_cert,json=x509Cert,proto3,oneof"`
}

func (*RegisterIssuerRequest_DidUri) isRegisterIssuerRequest_Authority() {}

func (*RegisterIssuerRequest_X509Cert) isRegisterIssuerRequest_Authority() {}

type RegisterIssuerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=trinsic.services.ResponseStatus" json:"status,omitempty"`
	ResponseData *JsonPayload   `protobuf:"bytes,2,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`
}

func (x *RegisterIssuerResponse) Reset() {
	*x = RegisterIssuerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterIssuerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterIssuerResponse) ProtoMessage() {}

func (x *RegisterIssuerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterIssuerResponse.ProtoReflect.Descriptor instead.
func (*RegisterIssuerResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterIssuerResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *RegisterIssuerResponse) GetResponseData() *JsonPayload {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

type RegisterVerifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Authority:
	//	*RegisterVerifierRequest_DidUri
	//	*RegisterVerifierRequest_X509Cert
	Authority              isRegisterVerifierRequest_Authority `protobuf_oneof:"authority"`
	PresentationTypeUri    string                              `protobuf:"bytes,10,opt,name=presentation_type_uri,json=presentationTypeUri,proto3" json:"presentation_type_uri,omitempty"`
	ValidFromUtc           uint64                              `protobuf:"varint,11,opt,name=valid_from_utc,json=validFromUtc,proto3" json:"valid_from_utc,omitempty"`
	ValidUntilUtc          uint64                              `protobuf:"varint,12,opt,name=valid_until_utc,json=validUntilUtc,proto3" json:"valid_until_utc,omitempty"`
	GovernanceFrameworkUri string                              `protobuf:"bytes,20,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	Options                *RequestOptions                     `protobuf:"bytes,100,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RegisterVerifierRequest) Reset() {
	*x = RegisterVerifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterVerifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterVerifierRequest) ProtoMessage() {}

func (x *RegisterVerifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterVerifierRequest.ProtoReflect.Descriptor instead.
func (*RegisterVerifierRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{9}
}

func (m *RegisterVerifierRequest) GetAuthority() isRegisterVerifierRequest_Authority {
	if m != nil {
		return m.Authority
	}
	return nil
}

func (x *RegisterVerifierRequest) GetDidUri() string {
	if x, ok := x.GetAuthority().(*RegisterVerifierRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *RegisterVerifierRequest) GetX509Cert() string {
	if x, ok := x.GetAuthority().(*RegisterVerifierRequest_X509Cert); ok {
		return x.X509Cert
	}
	return ""
}

func (x *RegisterVerifierRequest) GetPresentationTypeUri() string {
	if x != nil {
		return x.PresentationTypeUri
	}
	return ""
}

func (x *RegisterVerifierRequest) GetValidFromUtc() uint64 {
	if x != nil {
		return x.ValidFromUtc
	}
	return 0
}

func (x *RegisterVerifierRequest) GetValidUntilUtc() uint64 {
	if x != nil {
		return x.ValidUntilUtc
	}
	return 0
}

func (x *RegisterVerifierRequest) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *RegisterVerifierRequest) GetOptions() *RequestOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type isRegisterVerifierRequest_Authority interface {
	isRegisterVerifierRequest_Authority()
}

type RegisterVerifierRequest_DidUri struct {
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type RegisterVerifierRequest_X509Cert struct {
	X509Cert string `protobuf:"bytes,2,opt,name=x509_cert,json=x509Cert,proto3,oneof"`
}

func (*RegisterVerifierRequest_DidUri) isRegisterVerifierRequest_Authority() {}

func (*RegisterVerifierRequest_X509Cert) isRegisterVerifierRequest_Authority() {}

type RegisterVerifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=trinsic.services.ResponseStatus" json:"status,omitempty"`
	ResponseData *JsonPayload   `protobuf:"bytes,2,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`
}

func (x *RegisterVerifierResponse) Reset() {
	*x = RegisterVerifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterVerifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterVerifierResponse) ProtoMessage() {}

func (x *RegisterVerifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterVerifierResponse.ProtoReflect.Descriptor instead.
func (*RegisterVerifierResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterVerifierResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *RegisterVerifierResponse) GetResponseData() *JsonPayload {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

type UnregisterMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Member:
	//	*UnregisterMemberRequest_DidUri
	//	*UnregisterMemberRequest_X509Cert
	Member isUnregisterMemberRequest_Member `protobuf_oneof:"member"`
	// Types that are assignable to Template:
	//	*UnregisterMemberRequest_TemplateUri
	//	*UnregisterMemberRequest_ContextUri
	Template isUnregisterMemberRequest_Template `protobuf_oneof:"template"`
}

func (x *UnregisterMemberRequest) Reset() {
	*x = UnregisterMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberRequest) ProtoMessage() {}

func (x *UnregisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberRequest.ProtoReflect.Descriptor instead.
func (*UnregisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{11}
}

func (m *UnregisterMemberRequest) GetMember() isUnregisterMemberRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *UnregisterMemberRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*UnregisterMemberRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *UnregisterMemberRequest) GetX509Cert() string {
	if x, ok := x.GetMember().(*UnregisterMemberRequest_X509Cert); ok {
		return x.X509Cert
	}
	return ""
}

func (m *UnregisterMemberRequest) GetTemplate() isUnregisterMemberRequest_Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (x *UnregisterMemberRequest) GetTemplateUri() string {
	if x, ok := x.GetTemplate().(*UnregisterMemberRequest_TemplateUri); ok {
		return x.TemplateUri
	}
	return ""
}

func (x *UnregisterMemberRequest) GetContextUri() string {
	if x, ok := x.GetTemplate().(*UnregisterMemberRequest_ContextUri); ok {
		return x.ContextUri
	}
	return ""
}

type isUnregisterMemberRequest_Member interface {
	isUnregisterMemberRequest_Member()
}

type UnregisterMemberRequest_DidUri struct {
	DidUri string `protobuf:"bytes,1,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type UnregisterMemberRequest_X509Cert struct {
	X509Cert string `protobuf:"bytes,2,opt,name=x509_cert,json=x509Cert,proto3,oneof"`
}

func (*UnregisterMemberRequest_DidUri) isUnregisterMemberRequest_Member() {}

func (*UnregisterMemberRequest_X509Cert) isUnregisterMemberRequest_Member() {}

type isUnregisterMemberRequest_Template interface {
	isUnregisterMemberRequest_Template()
}

type UnregisterMemberRequest_TemplateUri struct {
	TemplateUri string `protobuf:"bytes,10,opt,name=template_uri,json=templateUri,proto3,oneof"`
}

type UnregisterMemberRequest_ContextUri struct {
	ContextUri string `protobuf:"bytes,11,opt,name=context_uri,json=contextUri,proto3,oneof"`
}

func (*UnregisterMemberRequest_TemplateUri) isUnregisterMemberRequest_Template() {}

func (*UnregisterMemberRequest_ContextUri) isUnregisterMemberRequest_Template() {}

type UnregisterMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ResponseStatus `protobuf:"varint,1,opt,name=status,proto3,enum=trinsic.services.ResponseStatus" json:"status,omitempty"`
}

func (x *UnregisterMemberResponse) Reset() {
	*x = UnregisterMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberResponse) ProtoMessage() {}

func (x *UnregisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberResponse.ProtoReflect.Descriptor instead.
func (*UnregisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{12}
}

func (x *UnregisterMemberResponse) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

type CheckIssuerStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	// Types that are assignable to Member:
	//	*CheckIssuerStatusRequest_DidUri
	//	*CheckIssuerStatusRequest_X509Cert
	Member            isCheckIssuerStatusRequest_Member `protobuf_oneof:"member"`
	CredentialTypeUri string                            `protobuf:"bytes,4,opt,name=credential_type_uri,json=credentialTypeUri,proto3" json:"credential_type_uri,omitempty"`
}

func (x *CheckIssuerStatusRequest) Reset() {
	*x = CheckIssuerStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIssuerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIssuerStatusRequest) ProtoMessage() {}

func (x *CheckIssuerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIssuerStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckIssuerStatusRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{13}
}

func (x *CheckIssuerStatusRequest) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (m *CheckIssuerStatusRequest) GetMember() isCheckIssuerStatusRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *CheckIssuerStatusRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*CheckIssuerStatusRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *CheckIssuerStatusRequest) GetX509Cert() string {
	if x, ok := x.GetMember().(*CheckIssuerStatusRequest_X509Cert); ok {
		return x.X509Cert
	}
	return ""
}

func (x *CheckIssuerStatusRequest) GetCredentialTypeUri() string {
	if x != nil {
		return x.CredentialTypeUri
	}
	return ""
}

type isCheckIssuerStatusRequest_Member interface {
	isCheckIssuerStatusRequest_Member()
}

type CheckIssuerStatusRequest_DidUri struct {
	DidUri string `protobuf:"bytes,2,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type CheckIssuerStatusRequest_X509Cert struct {
	X509Cert string `protobuf:"bytes,3,opt,name=x509_cert,json=x509Cert,proto3,oneof"`
}

func (*CheckIssuerStatusRequest_DidUri) isCheckIssuerStatusRequest_Member() {}

func (*CheckIssuerStatusRequest_X509Cert) isCheckIssuerStatusRequest_Member() {}

type CheckIssuerStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string             `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	Status                 RegistrationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=trinsic.services.RegistrationStatus" json:"status,omitempty"`
}

func (x *CheckIssuerStatusResponse) Reset() {
	*x = CheckIssuerStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIssuerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIssuerStatusResponse) ProtoMessage() {}

func (x *CheckIssuerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIssuerStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckIssuerStatusResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{14}
}

func (x *CheckIssuerStatusResponse) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *CheckIssuerStatusResponse) GetStatus() RegistrationStatus {
	if x != nil {
		return x.Status
	}
	return RegistrationStatus_CURRENT
}

type CheckVerifierStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	// Types that are assignable to Member:
	//	*CheckVerifierStatusRequest_DidUri
	//	*CheckVerifierStatusRequest_X509Cert
	Member              isCheckVerifierStatusRequest_Member `protobuf_oneof:"member"`
	PresentationTypeUri string                              `protobuf:"bytes,4,opt,name=presentation_type_uri,json=presentationTypeUri,proto3" json:"presentation_type_uri,omitempty"`
}

func (x *CheckVerifierStatusRequest) Reset() {
	*x = CheckVerifierStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerifierStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerifierStatusRequest) ProtoMessage() {}

func (x *CheckVerifierStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerifierStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckVerifierStatusRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{15}
}

func (x *CheckVerifierStatusRequest) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (m *CheckVerifierStatusRequest) GetMember() isCheckVerifierStatusRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (x *CheckVerifierStatusRequest) GetDidUri() string {
	if x, ok := x.GetMember().(*CheckVerifierStatusRequest_DidUri); ok {
		return x.DidUri
	}
	return ""
}

func (x *CheckVerifierStatusRequest) GetX509Cert() string {
	if x, ok := x.GetMember().(*CheckVerifierStatusRequest_X509Cert); ok {
		return x.X509Cert
	}
	return ""
}

func (x *CheckVerifierStatusRequest) GetPresentationTypeUri() string {
	if x != nil {
		return x.PresentationTypeUri
	}
	return ""
}

type isCheckVerifierStatusRequest_Member interface {
	isCheckVerifierStatusRequest_Member()
}

type CheckVerifierStatusRequest_DidUri struct {
	DidUri string `protobuf:"bytes,2,opt,name=did_uri,json=didUri,proto3,oneof"`
}

type CheckVerifierStatusRequest_X509Cert struct {
	X509Cert string `protobuf:"bytes,3,opt,name=x509_cert,json=x509Cert,proto3,oneof"`
}

func (*CheckVerifierStatusRequest_DidUri) isCheckVerifierStatusRequest_Member() {}

func (*CheckVerifierStatusRequest_X509Cert) isCheckVerifierStatusRequest_Member() {}

type CheckVerifierStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string             `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	Status                 RegistrationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=trinsic.services.RegistrationStatus" json:"status,omitempty"`
}

func (x *CheckVerifierStatusResponse) Reset() {
	*x = CheckVerifierStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVerifierStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerifierStatusResponse) ProtoMessage() {}

func (x *CheckVerifierStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerifierStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckVerifierStatusResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{16}
}

func (x *CheckVerifierStatusResponse) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *CheckVerifierStatusResponse) GetStatus() RegistrationStatus {
	if x != nil {
		return x.Status
	}
	return RegistrationStatus_CURRENT
}

type FetchDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GovernanceFrameworkUri string `protobuf:"bytes,1,opt,name=governance_framework_uri,json=governanceFrameworkUri,proto3" json:"governance_framework_uri,omitempty"`
	Query                  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FetchDataRequest) Reset() {
	*x = FetchDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchDataRequest) ProtoMessage() {}

func (x *FetchDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchDataRequest.ProtoReflect.Descriptor instead.
func (*FetchDataRequest) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{17}
}

func (x *FetchDataRequest) GetGovernanceFrameworkUri() string {
	if x != nil {
		return x.GovernanceFrameworkUri
	}
	return ""
}

func (x *FetchDataRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type FetchDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *JsonPayload `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *FetchDataResponse) Reset() {
	*x = FetchDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TrustRegistry_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchDataResponse) ProtoMessage() {}

func (x *FetchDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_TrustRegistry_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchDataResponse.ProtoReflect.Descriptor instead.
func (*FetchDataResponse) Descriptor() ([]byte, []int) {
	return file_TrustRegistry_proto_rawDescGZIP(), []int{18}
}

func (x *FetchDataResponse) GetResponse() *JsonPayload {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_TrustRegistry_proto protoreflect.FileDescriptor

var file_TrustRegistry_proto_rawDesc = []byte{
	0x0a, 0x13, 0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x13, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x58, 0x0a, 0x14, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x13, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x50, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a,
	0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x14, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x13, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x22, 0x53, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74,
	0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72,
	0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4a,
	0x73, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x55, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x74, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x55, 0x72,
	0x69, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x78, 0x35, 0x30, 0x39,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x78,
	0x35, 0x30, 0x39, 0x43, 0x65, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x74, 0x63, 0x12, 0x26, 0x0a,
	0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x75, 0x74, 0x63,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x55, 0x74, 0x63, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69, 0x12,
	0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xd8, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x78, 0x35, 0x30, 0x39,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x78,
	0x35, 0x30, 0x39, 0x43, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x74,
	0x63, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x5f, 0x75, 0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x55, 0x74, 0x63, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x55, 0x72, 0x69, 0x12, 0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x98, 0x01, 0x0a,
	0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e,
	0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x69,
	0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4a, 0x73,
	0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d,
	0x0a, 0x09, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x78, 0x35, 0x30, 0x39, 0x43, 0x65, 0x72, 0x74, 0x12, 0x23, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55,
	0x72, 0x69, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x55, 0x72, 0x69, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x0a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x18, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xc8, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x18, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x64,
	0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x78, 0x35, 0x30, 0x39, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x72, 0x69, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a,
	0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f,
	0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x55, 0x72, 0x69, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x07, 0x64,
	0x69, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x69, 0x64, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x09, 0x78, 0x35, 0x30, 0x39, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x78, 0x35, 0x30,
	0x39, 0x43, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x69, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x95, 0x01, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x3c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x18, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x4e, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a,
	0x5a, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0a, 0x32, 0xb0, 0x07, 0x0a, 0x0d,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x5d, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x2e,
	0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x28, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x72, 0x69, 0x6e,
	0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x74, 0x72,
	0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x29, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x2e,
	0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73,
	0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x74, 0x72, 0x69, 0x6e,
	0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x2e, 0x74, 0x72, 0x69, 0x6e,
	0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69,
	0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x2d,
	0x0a, 0x10, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x2d, 0x69, 0x64, 0x2f, 0x73, 0x64, 0x6b, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TrustRegistry_proto_rawDescOnce sync.Once
	file_TrustRegistry_proto_rawDescData = file_TrustRegistry_proto_rawDesc
)

func file_TrustRegistry_proto_rawDescGZIP() []byte {
	file_TrustRegistry_proto_rawDescOnce.Do(func() {
		file_TrustRegistry_proto_rawDescData = protoimpl.X.CompressGZIP(file_TrustRegistry_proto_rawDescData)
	})
	return file_TrustRegistry_proto_rawDescData
}

var file_TrustRegistry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_TrustRegistry_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_TrustRegistry_proto_goTypes = []interface{}{
	(RegistrationStatus)(0),             // 0: trinsic.services.RegistrationStatus
	(*AddFrameworkRequest)(nil),         // 1: trinsic.services.AddFrameworkRequest
	(*AddFrameworkResponse)(nil),        // 2: trinsic.services.AddFrameworkResponse
	(*RemoveFrameworkRequest)(nil),      // 3: trinsic.services.RemoveFrameworkRequest
	(*RemoveFrameworkResponse)(nil),     // 4: trinsic.services.RemoveFrameworkResponse
	(*SearchRegistryRequest)(nil),       // 5: trinsic.services.SearchRegistryRequest
	(*SearchRegistryResponse)(nil),      // 6: trinsic.services.SearchRegistryResponse
	(*GovernanceFramework)(nil),         // 7: trinsic.services.GovernanceFramework
	(*RegisterIssuerRequest)(nil),       // 8: trinsic.services.RegisterIssuerRequest
	(*RegisterIssuerResponse)(nil),      // 9: trinsic.services.RegisterIssuerResponse
	(*RegisterVerifierRequest)(nil),     // 10: trinsic.services.RegisterVerifierRequest
	(*RegisterVerifierResponse)(nil),    // 11: trinsic.services.RegisterVerifierResponse
	(*UnregisterMemberRequest)(nil),     // 12: trinsic.services.UnregisterMemberRequest
	(*UnregisterMemberResponse)(nil),    // 13: trinsic.services.UnregisterMemberResponse
	(*CheckIssuerStatusRequest)(nil),    // 14: trinsic.services.CheckIssuerStatusRequest
	(*CheckIssuerStatusResponse)(nil),   // 15: trinsic.services.CheckIssuerStatusResponse
	(*CheckVerifierStatusRequest)(nil),  // 16: trinsic.services.CheckVerifierStatusRequest
	(*CheckVerifierStatusResponse)(nil), // 17: trinsic.services.CheckVerifierStatusResponse
	(*FetchDataRequest)(nil),            // 18: trinsic.services.FetchDataRequest
	(*FetchDataResponse)(nil),           // 19: trinsic.services.FetchDataResponse
	(ResponseStatus)(0),                 // 20: trinsic.services.ResponseStatus
	(*RequestOptions)(nil),              // 21: trinsic.services.RequestOptions
	(*JsonPayload)(nil),                 // 22: trinsic.services.JsonPayload
}
var file_TrustRegistry_proto_depIdxs = []int32{
	7,  // 0: trinsic.services.AddFrameworkRequest.governance_framework:type_name -> trinsic.services.GovernanceFramework
	20, // 1: trinsic.services.AddFrameworkResponse.status:type_name -> trinsic.services.ResponseStatus
	7,  // 2: trinsic.services.RemoveFrameworkRequest.governance_framework:type_name -> trinsic.services.GovernanceFramework
	20, // 3: trinsic.services.RemoveFrameworkResponse.status:type_name -> trinsic.services.ResponseStatus
	21, // 4: trinsic.services.SearchRegistryRequest.options:type_name -> trinsic.services.RequestOptions
	22, // 5: trinsic.services.SearchRegistryResponse.items:type_name -> trinsic.services.JsonPayload
	21, // 6: trinsic.services.RegisterIssuerRequest.options:type_name -> trinsic.services.RequestOptions
	20, // 7: trinsic.services.RegisterIssuerResponse.status:type_name -> trinsic.services.ResponseStatus
	22, // 8: trinsic.services.RegisterIssuerResponse.response_data:type_name -> trinsic.services.JsonPayload
	21, // 9: trinsic.services.RegisterVerifierRequest.options:type_name -> trinsic.services.RequestOptions
	20, // 10: trinsic.services.RegisterVerifierResponse.status:type_name -> trinsic.services.ResponseStatus
	22, // 11: trinsic.services.RegisterVerifierResponse.response_data:type_name -> trinsic.services.JsonPayload
	20, // 12: trinsic.services.UnregisterMemberResponse.status:type_name -> trinsic.services.ResponseStatus
	0,  // 13: trinsic.services.CheckIssuerStatusResponse.status:type_name -> trinsic.services.RegistrationStatus
	0,  // 14: trinsic.services.CheckVerifierStatusResponse.status:type_name -> trinsic.services.RegistrationStatus
	22, // 15: trinsic.services.FetchDataResponse.response:type_name -> trinsic.services.JsonPayload
	1,  // 16: trinsic.services.TrustRegistry.AddFramework:input_type -> trinsic.services.AddFrameworkRequest
	3,  // 17: trinsic.services.TrustRegistry.RemoveFramework:input_type -> trinsic.services.RemoveFrameworkRequest
	5,  // 18: trinsic.services.TrustRegistry.SearchRegistry:input_type -> trinsic.services.SearchRegistryRequest
	8,  // 19: trinsic.services.TrustRegistry.RegisterIssuer:input_type -> trinsic.services.RegisterIssuerRequest
	10, // 20: trinsic.services.TrustRegistry.RegisterVerifier:input_type -> trinsic.services.RegisterVerifierRequest
	12, // 21: trinsic.services.TrustRegistry.UnregisterMember:input_type -> trinsic.services.UnregisterMemberRequest
	14, // 22: trinsic.services.TrustRegistry.CheckIssuerStatus:input_type -> trinsic.services.CheckIssuerStatusRequest
	16, // 23: trinsic.services.TrustRegistry.CheckVerifierStatus:input_type -> trinsic.services.CheckVerifierStatusRequest
	18, // 24: trinsic.services.TrustRegistry.FetchData:input_type -> trinsic.services.FetchDataRequest
	2,  // 25: trinsic.services.TrustRegistry.AddFramework:output_type -> trinsic.services.AddFrameworkResponse
	4,  // 26: trinsic.services.TrustRegistry.RemoveFramework:output_type -> trinsic.services.RemoveFrameworkResponse
	6,  // 27: trinsic.services.TrustRegistry.SearchRegistry:output_type -> trinsic.services.SearchRegistryResponse
	9,  // 28: trinsic.services.TrustRegistry.RegisterIssuer:output_type -> trinsic.services.RegisterIssuerResponse
	11, // 29: trinsic.services.TrustRegistry.RegisterVerifier:output_type -> trinsic.services.RegisterVerifierResponse
	13, // 30: trinsic.services.TrustRegistry.UnregisterMember:output_type -> trinsic.services.UnregisterMemberResponse
	15, // 31: trinsic.services.TrustRegistry.CheckIssuerStatus:output_type -> trinsic.services.CheckIssuerStatusResponse
	17, // 32: trinsic.services.TrustRegistry.CheckVerifierStatus:output_type -> trinsic.services.CheckVerifierStatusResponse
	19, // 33: trinsic.services.TrustRegistry.FetchData:output_type -> trinsic.services.FetchDataResponse
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_TrustRegistry_proto_init() }
func file_TrustRegistry_proto_init() {
	if File_TrustRegistry_proto != nil {
		return
	}
	file_CoreService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_TrustRegistry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrameworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFrameworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFrameworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFrameworkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRegistryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRegistryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernanceFramework); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterIssuerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterIssuerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterVerifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterVerifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIssuerStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIssuerStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerifierStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVerifierStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TrustRegistry_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_TrustRegistry_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RegisterIssuerRequest_DidUri)(nil),
		(*RegisterIssuerRequest_X509Cert)(nil),
	}
	file_TrustRegistry_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*RegisterVerifierRequest_DidUri)(nil),
		(*RegisterVerifierRequest_X509Cert)(nil),
	}
	file_TrustRegistry_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*UnregisterMemberRequest_DidUri)(nil),
		(*UnregisterMemberRequest_X509Cert)(nil),
		(*UnregisterMemberRequest_TemplateUri)(nil),
		(*UnregisterMemberRequest_ContextUri)(nil),
	}
	file_TrustRegistry_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*CheckIssuerStatusRequest_DidUri)(nil),
		(*CheckIssuerStatusRequest_X509Cert)(nil),
	}
	file_TrustRegistry_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*CheckVerifierStatusRequest_DidUri)(nil),
		(*CheckVerifierStatusRequest_X509Cert)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TrustRegistry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_TrustRegistry_proto_goTypes,
		DependencyIndexes: file_TrustRegistry_proto_depIdxs,
		EnumInfos:         file_TrustRegistry_proto_enumTypes,
		MessageInfos:      file_TrustRegistry_proto_msgTypes,
	}.Build()
	File_TrustRegistry_proto = out.File
	file_TrustRegistry_proto_rawDesc = nil
	file_TrustRegistry_proto_goTypes = nil
	file_TrustRegistry_proto_depIdxs = nil
}
