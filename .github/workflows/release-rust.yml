name: "Rust (release)"

on:
  workflow_dispatch:
  release:
    types: [published, prereleased]

jobs:
  homebrew:
    name: Homebrew Formula
    runs-on: macos-latest
    environment: homebrew
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate Package Version
        run: |
          $json = Invoke-WebRequest 'https://api.github.com/repos/trinsic-id/okapi/releases/latest' `
            -Headers @{ "Authorization" = "Token $env:API_GITHUB_TOKEN"} | ConvertFrom-Json
          $version = $json.tag_name.Trim("v")
          echo "RELEASE_VERSION=$($json.tag_name)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}

      - name: Create Archive
        run: |
          rm cli/build.rs
          sed -i 's/version = "0.1.0"/version = "${{ env.PACKAGE_VERSION }}"/g' cli/Cargo.toml
          mv cli trinsic-cli
          tar -czvf trinsic-cli-${{ env.PACKAGE_VERSION }}.tar.gz trinsic-cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: archive
          path: |
            ./*.tar.gz

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./trinsic-cli-${{ env.PACKAGE_VERSION }}.tar.gz
          asset_name: trinsic-cli-${{ env.PACKAGE_VERSION }}.tar.gz
          tag: ${{ env.RELEASE_VERSION }}
          overwrite: false
          body: "Trinsic CLI for Homebrew"

  deb:
    name: Debian Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate Package Version
        run: |
          $json = Invoke-WebRequest 'https://api.github.com/repos/trinsic-id/sdk/releases/latest' `
            -Headers @{ "Authorization" = "Token $env:API_GITHUB_TOKEN"} | ConvertFrom-Json
          $version = $json.tag_name.Trim("v")
          echo "RELEASE_VERSION=$($json.tag_name)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}

      - name: Create Package (.deb)
        run: |
          cargo install cargo-deb
          sed -i 's/version = "0.1.0"/version = "${{ env.PACKAGE_VERSION }}"/g' Cargo.toml
          sed -i 's/version: "1.0.0"/version: "${{ env.PACKAGE_VERSION }}"/g' src/cli.yaml

          cargo deb
        working-directory: cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: deb
          path: |
            ./cli/target/**/*.deb

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./cli/target/debian/trinsic_${{ env.PACKAGE_VERSION }}_amd64.deb
          asset_name: trinsic_${{ env.PACKAGE_VERSION }}_amd64.deb
          tag: ${{ env.RELEASE_VERSION }}
          overwrite: false
          body: "Okapi Debian Package"

