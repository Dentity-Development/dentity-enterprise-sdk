name: "Rust (release)"

on:
  workflow_dispatch:
  release:
    types: [published, prereleased]
  pull_request:

jobs:
  homebrew:
    runs-on: macos-latest
    environment: homebrew
    defaults:
      run:
        working-directory: ./cli
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup install nightly
          rustup default nightly
          rustup component add rustfmt
          cargo build --release
          cargo test --release
      - name: Generate Package Version
        run: |
          $json = Invoke-WebRequest 'https://api.github.com/repos/trinsic-id/okapi/releases/latest' `
            -Headers @{ "Authorization" = "Token $env:API_GITHUB_TOKEN"} | ConvertFrom-Json
          echo "TAG_NAME=$json.tag_name" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
      - name: Codesign binary file
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_DEVELOPER_ID_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_DEVELOPER_ID_CERTIFICATE_PWD }}
        run: |
          $env:TMP_PASS = [Guid]::NewGuid().ToString()
          [System.IO.File]::WriteAllBytes([System.IO.Path]::Combine($pwd.Path, "certificate.p12"), [System.Convert]::FromBase64String("$env:MACOS_CERTIFICATE"))
          security create-keychain -p $env:TMP_PASS build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $env:TMP_PASS build.keychain
          security list-keychains -s build.keychain
          security import certificate.p12 -k build.keychain -P $env:MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $env:TMP_PASS build.keychain
          /usr/bin/codesign --force -s AEFB3DDA9FD6A31D3DD4D7A9398A59FDDA874DCC trinsic -v
        shell: pwsh
        working-directory: ./cli/target/release
      - run: |
          $file = trinsic_cli_macos_x86_64_$env:TAG_NAME.tar.gz
          tar czf $file --directory=./target/release/ trinsic
          echo "ARTIFACT_FILE=$file" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARTIFACT_FILE }}
          asset_name: ${{ env.ARTIFACT_FILE }}
          tag: ${{ env.TAG_NAME }}
          overwrite: true
          body: "Trinsic CLI for MacOS"




