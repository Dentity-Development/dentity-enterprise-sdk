name: "Rust (release)"

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: 'Package Version (leave empty for latest release)'
        required: false
  release:
    types: [published, prereleased]

jobs:
  homebrew:
    name: Homebrew Formula
    environment: homebrew
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: trinsic-id/set-version@v0.1
        id: setversion
        with:
          githubToken: ${{ secrets.API_GITHUB_TOKEN }}
          overrideVersion: ${{ github.event.inputs.packageVersion }}

      - name: Create Archive
        run: |
          rm cli/build.rs
          sed -i 's/version = "0.1.0"/version = "${{ steps.setversion.outputs.packageVersion }}"/g' cli/Cargo.toml
          sed -i 's/version: 1.0.0/version: ${{ steps.setversion.outputs.packageVersion }}/g' cli/src/cli.yaml
          mv cli trinsic-cli
          tar -czvf trinsic-cli-${{ steps.setversion.outputs.packageVersion }}.tar.gz trinsic-cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: archive
          path: |
            ./*.tar.gz

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./trinsic-cli-${{ steps.setversion.outputs.packageVersion }}.tar.gz
          asset_name: trinsic-cli-${{ steps.setversion.outputs.packageVersion }}.tar.gz
          tag: ${{ steps.setversion.outputs.releaseVersion }}
          overwrite: false
          body: "Trinsic CLI for Homebrew"

  deb:
    name: Debian Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: trinsic-id/set-version@v0.1
        id: setversion
        with:
          githubToken: ${{ secrets.API_GITHUB_TOKEN }}
          overrideVersion: ${{ github.event.inputs.packageVersion }}

      - name: Create Package (.deb)
        run: |
          rm build.rs
          cargo install cargo-deb
          sed -i 's/version = "0.1.0"/version = "${{ steps.setversion.outputs.packageVersion }}"/g' Cargo.toml
          sed -i 's/version: 1.0.0/version: ${{ steps.setversion.outputs.packageVersion }}/g' src/cli.yaml

          cargo deb
        working-directory: cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb
          path: |
            ./cli/target/**/*.deb

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./cli/target/debian/trinsic_${{ steps.setversion.outputs.packageVersion }}_amd64.deb
          asset_name: trinsic_${{ steps.setversion.outputs.packageVersion }}_amd64.deb
          tag: ${{ steps.setversion.outputs.releaseVersion }}
          overwrite: false
          body: "Trinsic CLI Debian Package"

  nix:
    name: NixOS Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: trinsic-id/set-version@v0.1
        id: setversion
        with:
          githubToken: ${{ secrets.API_GITHUB_TOKEN }}
          overrideVersion: ${{ github.event.inputs.packageVersion }}

      - name: Create Vendored Folders
        run: |
          export CARGO_HOME=`pwd`
          cd cli
          sed -i 's/version = "0.1.0"/version = "${{ steps.setversion.outputs.packageVersion }}"/g' Cargo.toml
          sed -i 's/version: 1.0.0/version: ${{ steps.setversion.outputs.packageVersion }}/g' src/cli.yaml
          rm build.rs
          mv .cargo/_config.toml .cargo/config.toml

          cargo vendor
          cargo build
          cargo clean

      - name: Create Archive
        run: |
          mv cli trinsic-cli
          tar -czvf trinsic-cli-vendor-${{ steps.setversion.outputs.packageVersion }}.tar.gz trinsic-cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nix
          path: |
            ./*.tar.gz

      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./trinsic-cli-vendor-${{ steps.setversion.outputs.packageVersion }}.tar.gz
          asset_name: trinsic-cli-vendor-${{ steps.setversion.outputs.packageVersion }}.tar.gz
          tag: ${{ steps.setversion.outputs.releaseVersion }}
          overwrite: false
          body: "Trinsic CLI bundle for Nix"

  windows:
    name: WIX Package
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: trinsic-id/set-version@v0.1
        id: setversion
        with:
          githubToken: ${{ secrets.API_GITHUB_TOKEN }}
          overrideVersion: ${{ github.event.inputs.packageVersion }}

      - name: Create wix installer
        run: |
          ([Regex]'version = "0.1.0"').Replace((Get-Content -path Cargo.toml -Raw), 'version = "${{ steps.setversion.outputs.packageVersion }}"', 1) | Set-Content -Path Cargo.toml
          ([Regex]'version: 1.0.0').Replace((Get-Content -path src/cli.yaml -Raw), 'version: ${{ steps.setversion.outputs.packageVersion }}', 1) | Set-Content -Path src/cli.yaml
          cargo install cargo-wix
          cargo wix --nocapture
        shell: pwsh
        working-directory: cli

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: wix
          path: |
            ./cli/target/wix/trinsic-${{ steps.setversion.outputs.packageVersion }}-x86_64.msi
      - name: Upload to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./cli/target/wix/trinsic-${{ steps.setversion.outputs.packageVersion }}-x86_64.msi
          asset_name: trinsic-${{ steps.setversion.outputs.packageVersion }}-x86_64.msi
          tag: ${{ steps.setversion.outputs.releaseVersion }}
          overwrite: false
          body: "trinsic cli bundle for windows installer"
