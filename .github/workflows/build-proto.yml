name: Build Proto Files
on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "proto/**"
      - "devops/*"
  pull_request:
    paths:
      - "proto/**"
      - "devops/**"
      - ".github/workflows/build-proto.yml"

jobs:
  compile_proto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          submodules: recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: pip
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.17
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Configure git credentials
        uses: OleksiyRudenko/gha-git-credentials@v2
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
      
      - uses: trinsic-id/protoc-gen-sdk@main
        id: buildsdkwrappers
      - name: Install protobuf plugins
        run: |
          pip install -r ./devops/requirements.txt
          python ./devops/generate_proto_files.py --download-plugins --language=none
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Compile proto files
        run: |
          python ./devops/generate_proto_files.py --language=all

      - name: Commit Changes
        run: |
          if git diff --exit-code; then
            exit 0;
          fi
          HeadRef="${{ github.head_ref }}"
          # If HeadRef null, make it `my` so it expands to `my-generated-protos`
          ${HeadRef:=my}
          git checkout -b "$HeadRef-generated-protos"
          git add .
          git commit -m "Generated code from proto files"
          git push --force --set-upstream origin "$HeadRef-generated-protos"
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
          # Line below can fail if PR already exists, there isn't a flag to say, "ignore if already exists"
          gh pr create --base ${{ github.head_ref }} --title "Generated Protos for $HeadRef" --body "Generated files from proto"
