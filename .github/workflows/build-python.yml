name: Python

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "python/**"
      - "proto/**"
      - ".github/workflows/*python*"
      - "devops/**"
  push:
    branches:
      - main
    paths:
      - "python/**"
      - "proto/**"
      - ".github/workflows/*python*"
      - "devops/**"

jobs:
  build-and-test-python:
    name: Test Python code
    runs-on: ${{ matrix.os-artifact[0] }}
    strategy:
      fail-fast: false
      matrix:
        os-artifact: [ [ubuntu-latest, linux], [windows-latest, windows], [macos-latest, macos] ]
        python-version: [3.8, 3.9, '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Download ${{ matrix.os-artifact[0] }} binaries
        uses: dawidd6/action-download-artifact@v2.17.0
        with:
          workflow: "build-libs.yml"
          path: ./libs/${{ matrix.os-artifact[1] }}
          repo: trinsic-id/okapi
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ matrix.os-artifact[1] }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Build, Test, Pack
        run: |
          python -m pip install -r requirements.txt
          python -m pip install pytest pytest-cov
          python ../devops/build_sdks.py --language=python
          python -m pytest --cache-clear ./tests --cov=./ --cov-report=xml
        shell: pwsh
        working-directory: python
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          LD_LIBRARY_PATH: "${{ github.workspace }}/libs"
          TEST_SERVER_ENDPOINT: ${{ secrets.TEST_SERVER_ENDPOINT }}
          TEST_SERVER_PORT: ${{ secrets.TEST_SERVER_PORT }}
          TEST_SERVER_USE_TLS: ${{ secrets.TEST_SERVER_USE_TLS }}
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          directory: python
          token: ${{ secrets.CODECOV_TOKEN }}
