name: "npm: Build, Package, Publish"

on:
  pull_request:
    branches:
      - Black/2021-05-25/npm-pipeline
  push:
    branches:
      - Black/2021-05-25/npm-pipeline
  workflow_dispatch:
    inputs:
      packageVersion:
        description: "Package Version"
        required: true
        default: "1.0.0"
  release:
    types: [published, prereleased]

jobs:
  build_test:
    name: Build for npm
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'recursive'
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: npm install
      - run: npm run build
      # - run: npm run test

  publish_npm:
    name: Publish packages to NPM
    # if: |
    #   github.event_name == 'release' &&
    #   github.event.action == 'published' &&
    #   github.release.draft == false &&
    #   github.release.prerelease == false
    runs-on: ubuntu-latest
    needs: [build_test]
    defaults:
      run:
        working-directory: ./node
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'recursive'
          token: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm run build
      - name: Generate Package Version
        run: |
          $packageVersion = node -p -e "require('./package.json').version"
          $manualVersion = "${{ github.event.release.tag_name }}"
          $version = if ($manualVersion) { $manualVersion } else { $packageVersion }
          $version = $version.TrimStart("v")

          echo "PACKAGE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
      - run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      - run: npm publish $env:PACKAGE_VERSION --no-git-tag-version --yes --no-verify-access --access public
          
