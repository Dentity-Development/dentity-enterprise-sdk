name: Golang

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"
  push:
    branches:
      - main
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"

jobs:
  build-and-test-golang:
    name: Build, Test
    runs-on: ${{ matrix.os-artifact[0] }}
    strategy:
      fail-fast: false
      matrix:
        os-artifact: [ [ubuntu-latest, linux], [windows-latest, windows], [macos-latest, macos] ]
    steps:
      - uses: actions/checkout@v3
      - name: Download ${{ matrix.os-artifact[0] }} binaries
        uses: dawidd6/action-download-artifact@v2.24.2
        with:
          workflow: "build-libs.yml"
          path: ./go/services
          repo: trinsic-id/okapi
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ matrix.os-artifact[1] }}
          workflow_conclusion: completed
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          cache: true
          cache-dependency-path: go/go.sum
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: pip
      - name: Build and Test Golang
        run: |
          go version
          go test -covermode "atomic" -coverprofile "coverage.txt"
        working-directory: go/services
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          LD_LIBRARY_PATH: "${{ github.workspace }}/go/services"
          CGO_LDFLAGS: "-L${{ github.workspace }}/go/services"
          CGO_CFLAGS: "-I${{ github.workspace }}/go/services"
          TEST_SERVER_ENDPOINT: ${{ secrets.TEST_SERVER_ENDPOINT }}
          TEST_SERVER_PORT: ${{ secrets.TEST_SERVER_PORT }}
          TEST_SERVER_USE_TLS: ${{ secrets.TEST_SERVER_USE_TLS }}
