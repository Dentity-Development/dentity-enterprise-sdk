name: Golang

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"
  push:
    branches:
      - main
    paths:
      - "go/**"
      - "proto/**"
      - ".github/workflows/*golang*"
      - "devops/**"

jobs:
  build-and-test-golang:
    name: Build, Test
    runs-on: ${{ matrix.os-artifact[0] }}
    strategy:
      fail-fast: false
      matrix:
        os-artifact: [ [ubuntu-latest, linux], [windows-latest, windows-gnu] ] # , macos-latest ] disabled due to macos not allowing us to set the LD_LIBRARY_PATH as a github action
    steps:
      - uses: actions/checkout@v2
      - name: Download ${{ matrix.os-artifact[0] }} binaries
        uses: dawidd6/action-download-artifact@v2.17.0
        with:
          workflow: "build-libs.yml"
          path: ./libs/${{ matrix.os-artifact[1] }}
          repo: trinsic-id/okapi
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ matrix.os-artifact[1] }}
      - name: Download C header
        uses: dawidd6/action-download-artifact@v2.14.0
        with:
          workflow: "build-libs.yml"
          path: ./libs/C_header
          repo: trinsic-id/okapi
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: C_header
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build and Test Golang
        run: |
          go version
          go install golang.org/x/lint/golint@latest
          go install github.com/jstemmer/go-junit-report@latest
          python ../../devops/build_sdks.py --language=golang
          go build
          golint
          go test -v | go-junit-report > test_output.xml
        shell: pwsh
        working-directory: go/services
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          LD_LIBRARY_PATH: "${{ github.workspace }}/go/services"
          CGO_LDFLAGS: "-L${{ github.workspace }}/go/services"
          CGO_CFLAGS: "-I${{ github.workspace }}/go/services"
          TEST_SERVER_ENDPOINT: staging-internal.trinsic.cloud
          TEST_SERVER_PORT: 443
          TEST_SERVER_USE_TLS: true
      - name: Upload Unit Test Results - Golang
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Golang Unit Test Results (${{ matrix.os-artifact[0] }})
          path: 'go/services/test_output*.xml'

  publish-test-results-golang:
    name: Publish Test Results
    needs: build-and-test-golang
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: golang_artifacts
      - name: Publish Test Report - Golang
        uses: EnricoMi/publish-unit-test-result-action@v1.23
        with:
          files: 'golang_artifacts/**/*.xml'
          check_name: Golang Test Report
