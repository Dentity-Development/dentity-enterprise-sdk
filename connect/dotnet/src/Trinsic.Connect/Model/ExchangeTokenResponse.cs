/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Trinsic.Connect.Model;

/// <summary>
/// ExchangeTokenResponse
/// </summary>
[DataContract(Name = "ExchangeTokenResponse")]
public partial class ExchangeTokenResponse
{

    /// <summary>
    /// The &#x60;VerificationSession&#x60;&#39;s current state
    /// </summary>
    /// <value>The &#x60;VerificationSession&#x60;&#39;s current state</value>
    [DataMember(Name = "state", IsRequired = true, EmitDefaultValue = true)]
    public VerificationSessionState State { get; set; }

    /// <summary>
    /// If the &#x60;VerificationSession&#x60; failed, contains the reason why
    /// </summary>
    /// <value>If the &#x60;VerificationSession&#x60; failed, contains the reason why</value>
    [DataMember(Name = "failCode", EmitDefaultValue = false)]
    public VerificationFailCode? FailCode { get; set; }
    /// <summary>
    /// Initializes a new instance of the <see cref="ExchangeTokenResponse" /> class.
    /// </summary>
    [JsonConstructorAttribute]
    protected ExchangeTokenResponse() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="ExchangeTokenResponse" /> class.
    /// </summary>
    /// <param name="sessionId">The ID of the &#x60;VerificationSession&#x60; in question (required).</param>
    /// <param name="state">The &#x60;VerificationSession&#x60;&#39;s current state (required).</param>
    /// <param name="failCode">If the &#x60;VerificationSession&#x60; failed, contains the reason why.</param>
    /// <param name="identityData">The verified identity data, if the &#x60;VerificationSession&#x60; was successful.</param>
    public ExchangeTokenResponse(string sessionId = default(string), VerificationSessionState state = default(VerificationSessionState), VerificationFailCode? failCode = default(VerificationFailCode?), IdentityData identityData = default(IdentityData))
    {
        SessionId = sessionId ?? throw new ArgumentNullException("sessionId is a required property for ExchangeTokenResponse and cannot be null");
        State = state;
        FailCode = failCode;
        IdentityData = identityData;
    }

    /// <summary>
    /// The ID of the &#x60;VerificationSession&#x60; in question
    /// </summary>
    /// <value>The ID of the &#x60;VerificationSession&#x60; in question</value>
    [DataMember(Name = "sessionId", IsRequired = true, EmitDefaultValue = true)]
    public string SessionId { get; set; }

    /// <summary>
    /// The verified identity data, if the &#x60;VerificationSession&#x60; was successful
    /// </summary>
    /// <value>The verified identity data, if the &#x60;VerificationSession&#x60; was successful</value>
    [DataMember(Name = "identityData", EmitDefaultValue = false)]
    public IdentityData IdentityData { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ExchangeTokenResponse {\n");
        sb.Append("  SessionId: ").Append(SessionId).Append("\n");
        sb.Append("  State: ").Append(State).Append("\n");
        sb.Append("  FailCode: ").Append(FailCode).Append("\n");
        sb.Append("  IdentityData: ").Append(IdentityData).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }
}
