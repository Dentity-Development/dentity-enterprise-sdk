/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace Trinsic.Connect.Model;

/// <summary>
/// ListSessionsResponseV1
/// </summary>
[DataContract(Name = "ListSessionsResponseV1")]
public partial class ListSessionsResponseV1 : IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="ListSessionsResponseV1" /> class.
    /// </summary>
    /// <param name="sessions">sessions.</param>
    public ListSessionsResponseV1(List<Session> sessions = default(List<Session>))
    {
        Sessions = sessions;
    }

    /// <summary>
    /// Gets or Sets Sessions
    /// </summary>
    [DataMember(Name = "sessions", EmitDefaultValue = true)]
    public List<Session> Sessions { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ListSessionsResponseV1 {\n");
        sb.Append("  Sessions: ").Append(Sessions).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
