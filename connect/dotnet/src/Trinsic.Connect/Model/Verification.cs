/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Runtime.Serialization;
using System.Text;

namespace Trinsic.Connect.Model;

/// <summary>
/// A Verification contained within a Session
/// </summary>
[DataContract(Name = "Verification")]
public partial class Verification
{

    /// <summary>
    /// If the Verification is in state &#x60;VerificationFailed&#x60;, this field contains the reason for failure
    /// </summary>
    /// <value>If the Verification is in state &#x60;VerificationFailed&#x60;, this field contains the reason for failure</value>
    [DataMember(Name = "failCode", EmitDefaultValue = false)]
    public VerificationFailCode? FailCode { get; set; }
    /// <summary>
    /// Initializes a new instance of the <see cref="Verification" /> class.
    /// </summary>
    /// <param name="provider">The identity provider that was used to perform the Verification, if any.</param>
    /// <param name="failCode">If the Verification is in state &#x60;VerificationFailed&#x60;, this field contains the reason for failure.</param>
    public Verification(string provider = default(string), VerificationFailCode? failCode = default(VerificationFailCode?))
    {
        Provider = provider;
        FailCode = failCode;
    }

    /// <summary>
    /// The identity provider that was used to perform the Verification, if any
    /// </summary>
    /// <value>The identity provider that was used to perform the Verification, if any</value>
    [DataMember(Name = "provider", EmitDefaultValue = false)]
    public string Provider { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class Verification {\n");
        sb.Append("  Provider: ").Append(Provider).Append("\n");
        sb.Append("  FailCode: ").Append(FailCode).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }
}
