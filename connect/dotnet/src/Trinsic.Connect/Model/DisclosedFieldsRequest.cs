/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Runtime.Serialization;
using System.Text;

namespace Trinsic.Connect.Model;

/// <summary>
/// DisclosedFieldsRequest
/// </summary>
[DataContract(Name = "DisclosedFieldsRequest")]
public partial class DisclosedFieldsRequest
{
    /// <summary>
    /// Initializes a new instance of the <see cref="DisclosedFieldsRequest" /> class.
    /// </summary>
    /// <param name="idNumber">idNumber.</param>
    /// <param name="givenName">givenName.</param>
    /// <param name="familyName">familyName.</param>
    /// <param name="address">address.</param>
    /// <param name="dateOfBirth">dateOfBirth.</param>
    /// <param name="country">country.</param>
    /// <param name="issueDate">issueDate.</param>
    /// <param name="expirationDate">expirationDate.</param>
    /// <param name="documentFront">documentFront.</param>
    /// <param name="documentBack">documentBack.</param>
    /// <param name="documentPortrait">documentPortrait.</param>
    /// <param name="selfie">selfie.</param>
    public DisclosedFieldsRequest(bool idNumber = default(bool), bool givenName = default(bool), bool familyName = default(bool), bool address = default(bool), bool dateOfBirth = default(bool), bool country = default(bool), bool issueDate = default(bool), bool expirationDate = default(bool), bool documentFront = default(bool), bool documentBack = default(bool), bool documentPortrait = default(bool), bool selfie = default(bool))
    {
        IdNumber = idNumber;
        GivenName = givenName;
        FamilyName = familyName;
        Address = address;
        DateOfBirth = dateOfBirth;
        Country = country;
        IssueDate = issueDate;
        ExpirationDate = expirationDate;
        DocumentFront = documentFront;
        DocumentBack = documentBack;
        DocumentPortrait = documentPortrait;
        Selfie = selfie;
    }

    /// <summary>
    /// Gets or Sets IdNumber
    /// </summary>
    [DataMember(Name = "idNumber", EmitDefaultValue = true)]
    public bool IdNumber { get; set; }

    /// <summary>
    /// Gets or Sets GivenName
    /// </summary>
    [DataMember(Name = "givenName", EmitDefaultValue = true)]
    public bool GivenName { get; set; }

    /// <summary>
    /// Gets or Sets FamilyName
    /// </summary>
    [DataMember(Name = "familyName", EmitDefaultValue = true)]
    public bool FamilyName { get; set; }

    /// <summary>
    /// Gets or Sets Address
    /// </summary>
    [DataMember(Name = "address", EmitDefaultValue = true)]
    public bool Address { get; set; }

    /// <summary>
    /// Gets or Sets DateOfBirth
    /// </summary>
    [DataMember(Name = "dateOfBirth", EmitDefaultValue = true)]
    public bool DateOfBirth { get; set; }

    /// <summary>
    /// Gets or Sets Country
    /// </summary>
    [DataMember(Name = "country", EmitDefaultValue = true)]
    public bool Country { get; set; }

    /// <summary>
    /// Gets or Sets IssueDate
    /// </summary>
    [DataMember(Name = "issueDate", EmitDefaultValue = true)]
    public bool IssueDate { get; set; }

    /// <summary>
    /// Gets or Sets ExpirationDate
    /// </summary>
    [DataMember(Name = "expirationDate", EmitDefaultValue = true)]
    public bool ExpirationDate { get; set; }

    /// <summary>
    /// Gets or Sets DocumentFront
    /// </summary>
    [DataMember(Name = "documentFront", EmitDefaultValue = true)]
    public bool DocumentFront { get; set; }

    /// <summary>
    /// Gets or Sets DocumentBack
    /// </summary>
    [DataMember(Name = "documentBack", EmitDefaultValue = true)]
    public bool DocumentBack { get; set; }

    /// <summary>
    /// Gets or Sets DocumentPortrait
    /// </summary>
    [DataMember(Name = "documentPortrait", EmitDefaultValue = true)]
    public bool DocumentPortrait { get; set; }

    /// <summary>
    /// Gets or Sets Selfie
    /// </summary>
    [DataMember(Name = "selfie", EmitDefaultValue = true)]
    public bool Selfie { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class DisclosedFieldsRequest {\n");
        sb.Append("  IdNumber: ").Append(IdNumber).Append("\n");
        sb.Append("  GivenName: ").Append(GivenName).Append("\n");
        sb.Append("  FamilyName: ").Append(FamilyName).Append("\n");
        sb.Append("  Address: ").Append(Address).Append("\n");
        sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
        sb.Append("  Country: ").Append(Country).Append("\n");
        sb.Append("  IssueDate: ").Append(IssueDate).Append("\n");
        sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
        sb.Append("  DocumentFront: ").Append(DocumentFront).Append("\n");
        sb.Append("  DocumentBack: ").Append(DocumentBack).Append("\n");
        sb.Append("  DocumentPortrait: ").Append(DocumentPortrait).Append("\n");
        sb.Append("  Selfie: ").Append(Selfie).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }
}
