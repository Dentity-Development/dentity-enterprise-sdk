/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Runtime.Serialization;
using System.Text;

namespace Trinsic.Connect.Model;

/// <summary>
/// DocumentData
/// </summary>
[DataContract(Name = "DocumentData")]
public partial class DocumentData
{
    /// <summary>
    /// Initializes a new instance of the <see cref="DocumentData" /> class.
    /// </summary>
    /// <param name="type">type.</param>
    /// <param name="number">number.</param>
    /// <param name="issueDate">issueDate.</param>
    /// <param name="expirationDate">expirationDate.</param>
    /// <param name="issuingCountry">issuingCountry.</param>
    public DocumentData(string type = default(string), string number = default(string), string issueDate = default(string), string expirationDate = default(string), string issuingCountry = default(string))
    {
        Type = type;
        Number = number;
        IssueDate = issueDate;
        ExpirationDate = expirationDate;
        IssuingCountry = issuingCountry;
    }

    /// <summary>
    /// Gets or Sets Type
    /// </summary>
    [DataMember(Name = "type", EmitDefaultValue = false)]
    public string Type { get; set; }

    /// <summary>
    /// Gets or Sets Number
    /// </summary>
    [DataMember(Name = "number", EmitDefaultValue = false)]
    public string Number { get; set; }

    /// <summary>
    /// Gets or Sets IssueDate
    /// </summary>
    [DataMember(Name = "issueDate", EmitDefaultValue = false)]
    public string IssueDate { get; set; }

    /// <summary>
    /// Gets or Sets ExpirationDate
    /// </summary>
    [DataMember(Name = "expirationDate", EmitDefaultValue = false)]
    public string ExpirationDate { get; set; }

    /// <summary>
    /// Gets or Sets IssuingCountry
    /// </summary>
    [DataMember(Name = "issuingCountry", EmitDefaultValue = false)]
    public string IssuingCountry { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class DocumentData {\n");
        sb.Append("  Type: ").Append(Type).Append("\n");
        sb.Append("  Number: ").Append(Number).Append("\n");
        sb.Append("  IssueDate: ").Append(IssueDate).Append("\n");
        sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
        sb.Append("  IssuingCountry: ").Append(IssuingCountry).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }
}
