/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Trinsic.Connect.Model;

/// <summary>
/// CanReuseCredentialResponse
/// </summary>
[DataContract(Name = "CanReuseCredentialResponse")]
public partial class CanReuseCredentialResponse
{
    /// <summary>
    /// Initializes a new instance of the <see cref="CanReuseCredentialResponse" /> class.
    /// </summary>
    [JsonConstructorAttribute]
    protected CanReuseCredentialResponse() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="CanReuseCredentialResponse" /> class.
    /// </summary>
    /// <param name="hasValidCredential">hasValidCredential (required).</param>
    public CanReuseCredentialResponse(bool hasValidCredential = default(bool))
    {
        HasValidCredential = hasValidCredential;
    }

    /// <summary>
    /// Gets or Sets HasValidCredential
    /// </summary>
    [DataMember(Name = "hasValidCredential", IsRequired = true, EmitDefaultValue = true)]
    public bool HasValidCredential { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class CanReuseCredentialResponse {\n");
        sb.Append("  HasValidCredential: ").Append(HasValidCredential).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
    }
}
