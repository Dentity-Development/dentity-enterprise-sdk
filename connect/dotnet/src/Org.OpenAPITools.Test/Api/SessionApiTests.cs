/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing SessionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SessionApiTests : IDisposable
    {
        private SessionApi instance;

        public SessionApiTests()
        {
            instance = new SessionApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SessionApi
            //Assert.IsType<SessionApi>(instance);
        }

        /// <summary>
        /// Test SessionCancelSession
        /// </summary>
        [Fact]
        public void SessionCancelSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trinsicAuthorization = null;
            //string? sessionId = null;
            //var response = instance.SessionCancelSession(trinsicAuthorization, sessionId);
            //Assert.IsType<CancelSessionResponse>(response);
        }

        /// <summary>
        /// Test SessionCreateSession
        /// </summary>
        [Fact]
        public void SessionCreateSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trinsicAuthorization = null;
            //CreateSessionRequest? createSessionRequest = null;
            //var response = instance.SessionCreateSession(trinsicAuthorization, createSessionRequest);
            //Assert.IsType<CreateSessionResponse>(response);
        }

        /// <summary>
        /// Test SessionGetSession
        /// </summary>
        [Fact]
        public void SessionGetSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trinsicAuthorization = null;
            //string? sessionId = null;
            //var response = instance.SessionGetSession(trinsicAuthorization, sessionId);
            //Assert.IsType<GetSessionResponseV1>(response);
        }

        /// <summary>
        /// Test SessionListSessions
        /// </summary>
        [Fact]
        public void SessionListSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trinsicAuthorization = null;
            //ListSessionsRequest? listSessionsRequest = null;
            //var response = instance.SessionListSessions(trinsicAuthorization, listSessionsRequest);
            //Assert.IsType<ListSessionsResponseV1>(response);
        }
    }
}
