/*
 * Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Org.OpenAPITools.Api;
using Xunit;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api;

/// <summary>
///  Class for testing SessionApi
/// </summary>
/// <remarks>
/// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
/// Please update the test case below to test the API endpoint.
/// </remarks>
public class SessionApiTests : IDisposable
{
    private readonly SessionApi instance;

    public SessionApiTests()
    {
        instance = new SessionApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    /// Test an instance of SessionApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' SessionApi
        //Assert.IsType<SessionApi>(instance);
    }

    /// <summary>
    /// Test CancelSession
    /// </summary>
    [Fact]
    public void CancelSessionTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string trinsicAuthorization = null;
        //string? sessionId = null;
        //var response = instance.CancelSession(trinsicAuthorization, sessionId);
        //Assert.IsType<CancelSessionResponse>(response);
    }

    /// <summary>
    /// Test CreateSession
    /// </summary>
    [Fact]
    public void CreateSessionTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string trinsicAuthorization = null;
        //CreateSessionRequest? createSessionRequest = null;
        //var response = instance.CreateSession(trinsicAuthorization, createSessionRequest);
        //Assert.IsType<CreateSessionResponse>(response);
    }

    /// <summary>
    /// Test GetSession
    /// </summary>
    [Fact]
    public void GetSessionTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string trinsicAuthorization = null;
        //string? sessionId = null;
        //var response = instance.GetSession(trinsicAuthorization, sessionId);
        //Assert.IsType<GetSessionResponseV1>(response);
    }

    /// <summary>
    /// Test ListSessions
    /// </summary>
    [Fact]
    public void ListSessionsTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string trinsicAuthorization = null;
        //ListSessionsRequest? listSessionsRequest = null;
        //var response = instance.ListSessions(trinsicAuthorization, listSessionsRequest);
        //Assert.IsType<ListSessionsResponseV1>(response);
    }
}
