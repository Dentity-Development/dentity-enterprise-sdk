openapi: 3.0.1
info:
  title: Connect API
  version: v1
  x-swaggerexclude: External
servers:
- description: Production server
  url: https://connect.trinsic.id
security:
- Bearer: []
paths:
  /api/v1/sessions:
    get:
      operationId: ListSessions
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListSessionsRequest'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListSessionsRequest'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ListSessionsRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ListSessionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Sessions
    post:
      operationId: CreateSession
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
          text/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
          application/*+json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Sessions
  /api/v1/sessions/{sessionId}:
    get:
      operationId: GetSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetSessionResponseV1'
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponseV1'
            text/json:
              schema:
                $ref: '#/components/schemas/GetSessionResponseV1'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Sessions
  /api/v1/sessions/{sessionId}/cancel:
    post:
      operationId: CancelSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CancelSessionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Sessions
  /api/v1/sessions/redact:
    post:
      operationId: RedactSession
      parameters:
      - explode: true
        in: query
        name: sessionId
        required: false
        schema:
          maxLength: 100
          minLength: 5
          type: string
        style: form
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationResult'
                type: array
          description: Validation Failed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureMessage'
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      tags:
      - Sessions
components:
  schemas:
    CancelSessionResponse:
      additionalProperties: false
      example:
        session: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
      required:
      - session
      type: object
    CreateSessionRequest:
      example:
        governmentIdOptions: ""
      properties:
        governmentIdOptions:
          allOf:
          - $ref: '#/components/schemas/GovernmentIDOptionsRequest'
      type: object
    CreateSessionResponse:
      additionalProperties: false
      example:
        session: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
      required:
      - session
      type: object
    FailureMessage:
      additionalProperties: false
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    GetSessionResponseV1:
      additionalProperties: false
      example:
        session: ""
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
      required:
      - session
      type: object
    GovernmentIDOptions:
      additionalProperties: false
      properties:
        idNumber:
          type: boolean
        givenName:
          type: boolean
        familyName:
          type: boolean
        address:
          type: boolean
        dateOfBirth:
          type: boolean
        country:
          type: boolean
        issueDate:
          type: boolean
        expirationDate:
          type: boolean
      required:
      - address
      - country
      - dateOfBirth
      - expirationDate
      - familyName
      - givenName
      - idNumber
      - issueDate
      type: object
    GovernmentIDOptionsRequest:
      additionalProperties: false
      properties:
        idNumber:
          type: boolean
        givenName:
          type: boolean
        familyName:
          type: boolean
        address:
          type: boolean
        dateOfBirth:
          type: boolean
        country:
          type: boolean
        issueDate:
          type: boolean
        expirationDate:
          type: boolean
      type: object
    IDVSessionState:
      enum:
      - IdvCreated
      - IdvInitiated
      - IdvAuthenticating
      - IdvInProgress
      - IdvSuccess
      - IdvFailed
      type: string
    ListSessionsRequest:
      additionalProperties: false
      example:
        orderBy: ""
        orderDirection: ""
        pageSize: 1
        page: 1294386359
      properties:
        orderBy:
          allOf:
          - $ref: '#/components/schemas/SessionOrdering'
        orderDirection:
          allOf:
          - $ref: '#/components/schemas/OrderDirection'
        pageSize:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        page:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
      type: object
    ListSessionsResponse:
      additionalProperties: false
      example:
        sessions:
        - clientToken: clientToken
          created: 0
          failCode: ""
          id: id
          state: ""
          resultVp: resultVp
          updated: 6
          verification: ""
        - clientToken: clientToken
          created: 0
          failCode: ""
          id: id
          state: ""
          resultVp: resultVp
          updated: 6
          verification: ""
        total: 1
        more: true
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/Session'
          type: array
        total:
          format: int32
          type: integer
        more:
          type: boolean
      required:
      - more
      - sessions
      - total
      type: object
    NormalizedIdentityData:
      additionalProperties: false
      properties:
        idNumber:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        address:
          type: string
        dateOfBirth:
          type: string
        country:
          type: string
        issueDate:
          type: string
        expirationDate:
          type: string
      type: object
    OrderDirection:
      enum:
      - Ascending
      - Descending
      type: string
    Session:
      additionalProperties: false
      example:
        clientToken: clientToken
        created: 0
        failCode: ""
        id: id
        state: ""
        resultVp: resultVp
        updated: 6
        verification: ""
      properties:
        id:
          type: string
        clientToken:
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/IDVSessionState'
        failCode:
          allOf:
          - $ref: '#/components/schemas/SessionFailCode'
        verification:
          allOf:
          - $ref: '#/components/schemas/Verification'
        resultVp:
          type: string
        created:
          format: int64
          type: integer
        updated:
          format: int64
          type: integer
      required:
      - clientToken
      - created
      - id
      - state
      - updated
      - verification
      type: object
    SessionFailCode:
      enum:
      - SessionFailNone
      - SessionFailInternal
      - SessionFailVerificationFailed
      - SessionFailAuthentication
      - SessionFailExpired
      - SessionFailUserCanceled
      - SessionFailRpcCanceled
      type: string
    SessionOrdering:
      enum:
      - Created
      - Updated
      - State
      type: string
    ValidationResult:
      additionalProperties: false
      example:
        memberNames:
        - memberNames
        - memberNames
        errorMessage: errorMessage
      properties:
        memberNames:
          items:
            type: string
          readOnly: true
          type: array
        errorMessage:
          type: string
      required:
      - memberNames
      type: object
    Verification:
      additionalProperties: false
      properties:
        id:
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
        failCode:
          allOf:
          - $ref: '#/components/schemas/VerificationFailCode'
        reused:
          type: boolean
        updated:
          format: int64
          type: integer
        governmentIdOptions:
          allOf:
          - $ref: '#/components/schemas/GovernmentIDOptions'
        normalizedGovernmentIdData:
          allOf:
          - $ref: '#/components/schemas/NormalizedIdentityData'
      required:
      - governmentIdOptions
      - id
      - reused
      - state
      - updated
      type: object
    VerificationFailCode:
      enum:
      - VerificationFailNone
      - VerificationFailInternal
      - VerificationFailInvalidImage
      - VerificationFailInauthentic
      - VerificationFailUnsupportedDocument
      type: string
    VerificationState:
      enum:
      - VerificationPending
      - VerificationSuccess
      - VerificationFailed
      type: string
  securitySchemes:
    Bearer:
      description: Trinsic Connect API Key
      scheme: bearer
      type: http

