/* tslint:disable */
/* eslint-disable */
/**
 * Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { IdentityData } from "./IdentityData";
import {
    IdentityDataFromJSON,
    IdentityDataFromJSONTyped,
    IdentityDataToJSON,
} from "./IdentityData";
import type { VerificationSessionState } from "./VerificationSessionState";
import {
    VerificationSessionStateFromJSON,
    VerificationSessionStateFromJSONTyped,
    VerificationSessionStateToJSON,
} from "./VerificationSessionState";
import type { VerificationFailCode } from "./VerificationFailCode";
import {
    VerificationFailCodeFromJSON,
    VerificationFailCodeFromJSONTyped,
    VerificationFailCodeToJSON,
} from "./VerificationFailCode";

/**
 *
 * @export
 * @interface ExchangeTokenResponse
 */
export interface ExchangeTokenResponse {
    /**
     *
     * @type {string}
     * @memberof ExchangeTokenResponse
     */
    sessionId: string;
    /**
     *
     * @type {VerificationSessionState}
     * @memberof ExchangeTokenResponse
     */
    state: VerificationSessionState;
    /**
     *
     * @type {VerificationFailCode}
     * @memberof ExchangeTokenResponse
     */
    failCode?: VerificationFailCode;
    /**
     *
     * @type {IdentityData}
     * @memberof ExchangeTokenResponse
     */
    identityData?: IdentityData;
}

/**
 * Check if a given object implements the ExchangeTokenResponse interface.
 */
export function instanceOfExchangeTokenResponse(
    value: object,
): value is ExchangeTokenResponse {
    if (!("sessionId" in value) || value["sessionId"] === undefined)
        return false;
    if (!("state" in value) || value["state"] === undefined) return false;
    return true;
}

export function ExchangeTokenResponseFromJSON(
    json: any,
): ExchangeTokenResponse {
    return ExchangeTokenResponseFromJSONTyped(json, false);
}

export function ExchangeTokenResponseFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): ExchangeTokenResponse {
    if (json == null) {
        return json;
    }
    return {
        sessionId: json["sessionId"],
        state: VerificationSessionStateFromJSON(json["state"]),
        failCode:
            json["failCode"] == null
                ? undefined
                : VerificationFailCodeFromJSON(json["failCode"]),
        identityData:
            json["identityData"] == null
                ? undefined
                : IdentityDataFromJSON(json["identityData"]),
    };
}

export function ExchangeTokenResponseToJSON(
    value?: ExchangeTokenResponse | null,
): any {
    if (value == null) {
        return value;
    }
    return {
        sessionId: value["sessionId"],
        state: VerificationSessionStateToJSON(value["state"]),
        failCode: VerificationFailCodeToJSON(value["failCode"]),
        identityData: IdentityDataToJSON(value["identityData"]),
    };
}
