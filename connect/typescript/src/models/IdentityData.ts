/* tslint:disable */
/* eslint-disable */
/**
 * Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { DocumentData } from "./DocumentData";
import {
    DocumentDataFromJSON,
    DocumentDataFromJSONTyped,
    DocumentDataToJSON,
} from "./DocumentData";
import type { PersonData } from "./PersonData";
import {
    PersonDataFromJSON,
    PersonDataFromJSONTyped,
    PersonDataToJSON,
} from "./PersonData";
import type { Attachments } from "./Attachments";
import {
    AttachmentsFromJSON,
    AttachmentsFromJSONTyped,
    AttachmentsToJSON,
} from "./Attachments";

/**
 *
 * @export
 * @interface IdentityData
 */
export interface IdentityData {
    /**
     * The ID of the integration from which this data originated (eg "yoti", "clear")
     * @type {string}
     * @memberof IdentityData
     */
    originatingProviderId?: string;
    /**
     * Identity data of the individual who was verified
     * @type {PersonData}
     * @memberof IdentityData
     */
    person?: PersonData;
    /**
     * Identity data of the document involved in verification, if relevant
     * @type {DocumentData}
     * @memberof IdentityData
     */
    document?: DocumentData;
    /**
     * Access keys for attachments (eg document/selfie images)
     * @type {Attachments}
     * @memberof IdentityData
     */
    attachments?: Attachments;
}

/**
 * Check if a given object implements the IdentityData interface.
 */
export function instanceOfIdentityData(value: object): value is IdentityData {
    return true;
}

export function IdentityDataFromJSON(json: any): IdentityData {
    return IdentityDataFromJSONTyped(json, false);
}

export function IdentityDataFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): IdentityData {
    if (json == null) {
        return json;
    }
    return {
        originatingProviderId:
            json["originatingProviderId"] == null
                ? undefined
                : json["originatingProviderId"],
        person:
            json["person"] == null
                ? undefined
                : PersonDataFromJSON(json["person"]),
        document:
            json["document"] == null
                ? undefined
                : DocumentDataFromJSON(json["document"]),
        attachments:
            json["attachments"] == null
                ? undefined
                : AttachmentsFromJSON(json["attachments"]),
    };
}

export function IdentityDataToJSON(value?: IdentityData | null): any {
    if (value == null) {
        return value;
    }
    return {
        originatingProviderId: value["originatingProviderId"],
        person: PersonDataToJSON(value["person"]),
        document: DocumentDataToJSON(value["document"]),
        attachments: AttachmentsToJSON(value["attachments"]),
    };
}
