/* tslint:disable */
/* eslint-disable */
/**
 * Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
    CanReuseCredentialRequest,
    CanReuseCredentialResponse,
    FailureMessage,
    ValidationResult,
} from "../models/index";
import {
    CanReuseCredentialRequestFromJSON,
    CanReuseCredentialRequestToJSON,
    CanReuseCredentialResponseFromJSON,
    CanReuseCredentialResponseToJSON,
    FailureMessageFromJSON,
    FailureMessageToJSON,
    ValidationResultFromJSON,
    ValidationResultToJSON,
} from "../models/index";

export interface CanReuseCredentialOperationRequest {
    canReuseCredentialRequest?: CanReuseCredentialRequest;
}

/**
 *
 */
export class IdentitiesApi extends runtime.BaseAPI {
    /**
     */
    async canReuseCredentialRaw(
        requestParameters: CanReuseCredentialOperationRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<CanReuseCredentialResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters["Content-Type"] = "application/json";

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request(
            {
                path: `/api/v1/identities/credentials/can-reuse`,
                method: "POST",
                headers: headerParameters,
                query: queryParameters,
                body: CanReuseCredentialRequestToJSON(
                    requestParameters["canReuseCredentialRequest"],
                ),
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            CanReuseCredentialResponseFromJSON(jsonValue),
        );
    }

    /**
     */
    async canReuseCredential(
        requestParameters: CanReuseCredentialOperationRequest = {},
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<CanReuseCredentialResponse> {
        const response = await this.canReuseCredentialRaw(
            requestParameters,
            initOverrides,
        );
        return await response.value();
    }
}
