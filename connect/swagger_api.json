{
  "openapi": "3.0.1",
  "info": {
    "title": "Connect API",
    "version": "v1",
    "x-swaggerexclude": "External"
  },
  "servers": [
    {
      "url": "https://connect-api.trinsic.id",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/v1/sessions/list": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "operationId": "ListSessions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListSessionsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListSessionsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ListSessionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListSessionsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSessionsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSessionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailureMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/sessions/get": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "operationId": "GetSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSessionResponseV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSessionResponseV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSessionResponseV1"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailureMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/sessions/create": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "operationId": "CreateSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailureMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/sessions/cancel": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "operationId": "CancelSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "minLength": 5,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSessionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSessionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailureMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CancelSessionResponse": {
        "required": [
          "session"
        ],
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/Session"
          }
        },
        "additionalProperties": false
      },
      "CreateSessionRequest": {
        "type": "object",
        "properties": {
          "verifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestedVerification"
            },
            "nullable": true
          }
        }
      },
      "CreateSessionResponse": {
        "required": [
          "session"
        ],
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/Session"
          }
        },
        "additionalProperties": false
      },
      "DebugIdvProviderSelection": {
        "enum": [
          "Default",
          "IdVerse",
          "Argos",
          "Clear",
          "Yoti",
          "EidEasy"
        ],
        "type": "string"
      },
      "FailureMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSessionResponseV1": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/Session"
          }
        },
        "additionalProperties": false
      },
      "GovernmentIDOptions": {
        "type": "object",
        "properties": {
          "idNumber": {
            "type": "boolean"
          },
          "givenName": {
            "type": "boolean"
          },
          "familyName": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "boolean"
          },
          "country": {
            "type": "boolean"
          },
          "issueDate": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IDVSessionState": {
        "enum": [
          "IdvCreated",
          "IdvInitiated",
          "IdvAuthenticating",
          "IdvInProgress",
          "IdvSuccess",
          "IdvFailed"
        ],
        "type": "string"
      },
      "ListSessionsRequest": {
        "required": [
          "orderBy",
          "orderDirection"
        ],
        "type": "object",
        "properties": {
          "orderBy": {
            "$ref": "#/components/schemas/SessionOrdering"
          },
          "orderDirection": {
            "$ref": "#/components/schemas/OrderDirection"
          },
          "pageSize": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListSessionsResponse": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "more": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NormalizedIdentityData": {
        "type": "object",
        "properties": {
          "idNumber": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDirection": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "RequestedVerification": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/VerificationType"
          },
          "governmentIdOptions": {
            "$ref": "#/components/schemas/GovernmentIDOptions"
          }
        },
        "additionalProperties": false
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "clientToken": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/IDVSessionState"
          },
          "verifications": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Verification"
            },
            "nullable": true
          },
          "failCode": {
            "$ref": "#/components/schemas/SessionFailCode"
          },
          "resultVp": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SessionFailCode": {
        "enum": [
          "SessionFailNone",
          "SessionFailInternal",
          "SessionFailVerificationFailed",
          "SessionFailAuthentication",
          "SessionFailExpired",
          "SessionFailUserCanceled",
          "SessionFailRpcCanceled"
        ],
        "type": "string"
      },
      "SessionOrdering": {
        "enum": [
          "Created",
          "Updated",
          "State"
        ],
        "type": "string"
      },
      "ValidationResult": {
        "type": "object",
        "properties": {
          "memberNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Verification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/VerificationType"
          },
          "state": {
            "$ref": "#/components/schemas/VerificationState"
          },
          "failCode": {
            "$ref": "#/components/schemas/VerificationFailCode"
          },
          "reused": {
            "type": "boolean"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "governmentIdOptions": {
            "$ref": "#/components/schemas/GovernmentIDOptions"
          },
          "normalizedGovernmentIdData": {
            "$ref": "#/components/schemas/NormalizedIdentityData"
          }
        },
        "additionalProperties": false
      },
      "VerificationFailCode": {
        "enum": [
          "VerificationFailNone",
          "VerificationFailInternal",
          "VerificationFailInvalidImage",
          "VerificationFailInauthentic",
          "VerificationFailUnsupportedDocument"
        ],
        "type": "string"
      },
      "VerificationState": {
        "enum": [
          "VerificationPending",
          "VerificationSuccess",
          "VerificationFailed"
        ],
        "type": "string"
      },
      "VerificationType": {
        "enum": [
          "GovernmentId"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Trinsic Connect API Key",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}