using System.Threading.Tasks;
using Trinsic.Sdk.Options.V1;
using Trinsic.Services.VerifiableCredentials.Templates.V1;

namespace Trinsic;

/// <summary>
/// Template Service for managing credential schemas
/// </summary>
public class TemplateService : ServiceBase
{
    public TemplateService(TrinsicOptions options)
        : base(options) {
        Client = new(Channel);
    }

    private CredentialTemplates.CredentialTemplatesClient Client { get; }

// BEGIN Code generated by protoc-gen-trinsic. DO NOT EDIT.
// target: /home/runner/work/sdk/sdk/dotnet/Trinsic/TemplateService.cs

	/// <summary>
    /// Create a credential template in the current ecosystem
    /// </summary>
    
    public CreateCredentialTemplateResponse Create(CreateCredentialTemplateRequest request) {
        
        return Client.Create(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Create a credential template in the current ecosystem
    /// </summary>
    
    public async Task<CreateCredentialTemplateResponse> CreateAsync(CreateCredentialTemplateRequest request) {
        
        return await Client.CreateAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    /// Fetch a credential template by ID
    /// </summary>
    
    public GetCredentialTemplateResponse Get(GetCredentialTemplateRequest request) {
        
        return Client.Get(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Fetch a credential template by ID
    /// </summary>
    
    public async Task<GetCredentialTemplateResponse> GetAsync(GetCredentialTemplateRequest request) {
        
        return await Client.GetAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    /// Update metadata of a template
    /// </summary>
    
    public UpdateCredentialTemplateResponse Update(UpdateCredentialTemplateRequest request) {
        
        return Client.Update(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Update metadata of a template
    /// </summary>
    
    public async Task<UpdateCredentialTemplateResponse> UpdateAsync(UpdateCredentialTemplateRequest request) {
        
        return await Client.UpdateAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    /// Search credential templates using SQL, returning strongly-typed template data
    /// </summary>
    
    public ListCredentialTemplatesResponse List(ListCredentialTemplatesRequest request) {
        
        return Client.List(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Search credential templates using SQL, returning strongly-typed template data
    /// </summary>
    
    public async Task<ListCredentialTemplatesResponse> ListAsync(ListCredentialTemplatesRequest request) {
        
        return await Client.ListAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    /// Search credential templates using SQL, returning raw JSON data
    /// </summary>
    
    public SearchCredentialTemplatesResponse Search(SearchCredentialTemplatesRequest request) {
        
        return Client.Search(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Search credential templates using SQL, returning raw JSON data
    /// </summary>
    
    public async Task<SearchCredentialTemplatesResponse> SearchAsync(SearchCredentialTemplatesRequest request) {
        
        return await Client.SearchAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    /// Delete a credential template from the current ecosystem by ID
    /// </summary>
    
    public DeleteCredentialTemplateResponse Delete(DeleteCredentialTemplateRequest request) {
        
        return Client.Delete(request, BuildMetadata(request));
    }
	
	/// <summary>
    /// Delete a credential template from the current ecosystem by ID
    /// </summary>
    
    public async Task<DeleteCredentialTemplateResponse> DeleteAsync(DeleteCredentialTemplateRequest request) {
        
        return await Client.DeleteAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    ///This method is experimental
    ///  Create/update verification templates
    /// </summary>
    [Obsolete("This method is experimental")]
    public CreateVerificationTemplateResponse CreateVerificationTemplate(CreateVerificationTemplateRequest request) {
        
        return Client.CreateVerificationTemplate(request, BuildMetadata(request));
    }
	
	/// <summary>
    ///This method is experimental
    ///  Create/update verification templates
    /// </summary>
    [Obsolete("This method is experimental")]
    public async Task<CreateVerificationTemplateResponse> CreateVerificationTemplateAsync(CreateVerificationTemplateRequest request) {
        
        return await Client.CreateVerificationTemplateAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public ListVerificationTemplatesResponse ListVerificationTemplate(ListVerificationTemplatesRequest request) {
        
        return Client.ListVerificationTemplate(request, BuildMetadata(request));
    }
	
	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public async Task<ListVerificationTemplatesResponse> ListVerificationTemplateAsync(ListVerificationTemplatesRequest request) {
        
        return await Client.ListVerificationTemplateAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public UpdateVerificationTemplateResponse UpdateVerificationTemplate(UpdateVerificationTemplateRequest request) {
        
        return Client.UpdateVerificationTemplate(request, BuildMetadata(request));
    }
	
	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public async Task<UpdateVerificationTemplateResponse> UpdateVerificationTemplateAsync(UpdateVerificationTemplateRequest request) {
        
        return await Client.UpdateVerificationTemplateAsync(request, await BuildMetadataAsync(request));
    }

	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public DeleteVerificationTemplateResponse DeleteVerificationTemplate(DeleteVerificationTemplateRequest request) {
        
        return Client.DeleteVerificationTemplate(request, BuildMetadata(request));
    }
	
	/// <summary>
    ///This method is experimental
    /// </summary>
    [Obsolete("This method is experimental")]
    public async Task<DeleteVerificationTemplateResponse> DeleteVerificationTemplateAsync(DeleteVerificationTemplateRequest request) {
        
        return await Client.DeleteVerificationTemplateAsync(request, await BuildMetadataAsync(request));
    }

// END Code generated by protoc-gen-trinsic. DO NOT EDIT.
}