<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trinsic</name>
    </assembly>
    <members>
        <member name="T:Trinsic.AccountService">
            <summary>
            Account Service
            </summary>
        </member>
        <member name="P:Trinsic.AccountService.Client">
            <summary>
            Gets the underlying grpc client
            </summary>
        </member>
        <member name="M:Trinsic.AccountService.SignInAsync(Trinsic.Services.Account.V1.SignInRequest)">
            <summary>
            Perform a sign-in to obtain an account profile. If the <see cref="T:Trinsic.Services.Account.V1.AccountDetails" /> are
            specified, they will be used to associate
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.AccountService.SignIn(Trinsic.Services.Account.V1.SignInRequest)">
            <summary>
            Perform a sign-in to obtain an account profile. If the <see cref="T:Trinsic.Services.Account.V1.AccountDetails" /> are
            specified, they will be used to associate
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.AccountService.Unprotect(System.String,System.String)">
            <summary>
            Unprotects the account profile using a security code.
            The confirmation method field will specify how this code was
            communicated with the account owner.
            </summary>
            <param name="authToken"></param>
            <param name="securityCode"></param>
        </member>
        <member name="M:Trinsic.AccountService.Protect(System.String,System.String)">
            <summary>
            Protects the account profile with a security code.
            The code can be a PIN, password, keychain secret, etc.
            </summary>
            <param name="authToken"></param>
            <param name="securityCode"></param>
        </member>
        <member name="M:Trinsic.AccountService.GetInfoAsync">
            <summary>
            Return the details about the currently active account
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.AccountService.GetInfo">
            <summary>
            Return the details about the currently active account
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.IssueCredentialAsync(Trinsic.Services.VerifiableCredentials.V1.IssueRequest)">
            <summary>
                Signs an input credential
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.IssueFromTemplateAsync(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest)">
            <summary>
                Issue a verifiable credential from a predefined <see cref="T:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData" />.
            </summary>
            <param name="request">The request object with the template identifier and the values</param>
            <returns>Verifiable credential as JSON</returns>
        </member>
        <member name="M:Trinsic.CredentialService.IssueFromTemplate(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest)">
            <summary>
                Issue a verifiable credential from a predefined <see cref="T:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData" />.
            </summary>
            <param name="request">The request object with the template identifier and the values</param>
            <returns>Verifiable credential as JSON</returns>
        </member>
        <member name="M:Trinsic.CredentialService.CreateProofAsync(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest)">
            <summary>
                Create a proof from a record in the user's wallet. The record must be a valid
                verifiable credential and contain a signature from which a proof can be derived.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.CreateProof(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest)">
            <summary>
                Create a proof from a record in the user's wallet. The record must be a valid
                verifiable credential and contain a signature from which a proof can be derived.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.VerifyProofAsync(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest)">
            <summary>
                Verifies a proof document
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.CheckStatusAsync(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest)">
            <summary>
                Check credential template status
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.UpdateStatusAsync(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest)">
            <summary>
                Update credential template revocation status
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.CredentialService.SendAsync(Trinsic.Services.VerifiableCredentials.V1.SendRequest)">
            <summary>
                Sends a document to the specified destination
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Trinsic.Base64Url">
            <summary>
            Encodes and Decodes strings as Base64Url encoding.
            </summary>
        </member>
        <member name="M:Trinsic.Base64Url.Encode(System.String)">
            <summary>
            The following functions perform base64url encoding which differs from regular base64 encoding as follows
            * padding is skipped so the pad character '=' doesn't have to be percent encoded
            * the 62nd and 63rd regular base64 encoding characters ('+' and '/') are replace with ('-' and '_')
            The changes make the encoding alphabet file and URL safe.
            </summary>
            <param name="arg">string to encode.</param>
            <returns>Base64Url encoding of the UTF8 bytes.</returns>
        </member>
        <member name="M:Trinsic.Base64Url.Encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. Parameters specify
            the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
            <param name="inArray">An array of 8-bit unsigned integers.</param>
            <param name="length">An offset in inArray.</param>
            <param name="offset">The number of elements of inArray to convert.</param>
            <returns>The string representation in base 64 url encodingof length elements of inArray, starting at position offset.</returns>
            <exception cref="T:System.ArgumentNullException">'inArray' is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
        </member>
        <member name="M:Trinsic.Base64Url.Encode(System.Byte[])">
            <summary>
            Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64-url digits. Parameters specify
            the subset as an offset in the input array, and the number of elements in the array to convert.
            </summary>
            <param name="inArray">An array of 8-bit unsigned integers.</param>
            <returns>The string representation in base 64 url encodingof length elements of inArray, starting at position offset.</returns>
            <exception cref="T:System.ArgumentNullException">'inArray' is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or length is negative OR offset plus length is greater than the length of inArray.</exception>
        </member>
        <member name="M:Trinsic.Base64Url.DecodeBytes(System.String)">
            <summary>
             Converts the specified string, which encodes binary data as base-64-url digits, to an equivalent 8-bit unsigned integer array.</summary>
            <param name="str">base64Url encoded string.</param>
            <returns>UTF8 bytes.</returns>
        </member>
        <member name="M:Trinsic.Base64Url.Decode(System.String)">
            <summary>
            Decodes the string from Base64UrlEncoded to UTF8.
            </summary>
            <param name="arg">string to decode.</param>
            <returns>UTF8 string.</returns>
        </member>
        <member name="T:Trinsic.Services.Common.V1.CommonReflection">
            <summary>Holder for reflection information generated from services/common/v1/common.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.CommonReflection.Descriptor">
            <summary>File descriptor for services/common/v1/common.proto</summary>
        </member>
        <member name="F:Trinsic.Services.Common.V1.ServerConfig.EndpointFieldNumber">
            <summary>Field number for the "endpoint" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.ServerConfig.Endpoint">
            <summary>
            service endpoint
            </summary>
        </member>
        <member name="F:Trinsic.Services.Common.V1.ServerConfig.PortFieldNumber">
            <summary>Field number for the "port" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.ServerConfig.Port">
            <summary>
            service port
            </summary>
        </member>
        <member name="F:Trinsic.Services.Common.V1.ServerConfig.UseTlsFieldNumber">
            <summary>Field number for the "use_tls" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.ServerConfig.UseTls">
            <summary>
            indicates if tls is used
            </summary>
        </member>
        <member name="T:Trinsic.Services.Common.V1.Nonce">
            <summary>
            Nonce used to generate an oberon proof
            </summary>
        </member>
        <member name="F:Trinsic.Services.Common.V1.Nonce.TimestampFieldNumber">
            <summary>Field number for the "timestamp" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.Nonce.Timestamp">
            <summary>
            UTC unix millisecond timestamp the request was made
            </summary>
        </member>
        <member name="F:Trinsic.Services.Common.V1.Nonce.RequestHashFieldNumber">
            <summary>Field number for the "request_hash" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Common.V1.Nonce.RequestHash">
            <summary>
            blake3256 hash of the request body
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.AccountReflection">
            <summary>Holder for reflection information generated from services/account/v1/account.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountReflection.Descriptor">
            <summary>File descriptor for services/account/v1/account.proto</summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.ConfirmationMethod">
            <summary>
            Confirmation method type for two-factor workflows
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.ConfirmationMethod.None">
            <summary>
            No confirmation required
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.ConfirmationMethod.Email">
            <summary>
            Email confirmation required
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.ConfirmationMethod.Sms">
            <summary>
            SMS confirmation required
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.ConfirmationMethod.ConnectedDevice">
            <summary>
            Confirmation from a connected device is required
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.ConfirmationMethod.Other">
            <summary>
            Indicates third-party method of confirmation is required
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.SignInRequest">
            <summary>
            Request for creating or signing into an account
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.SignInRequest.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.SignInRequest.Details">
            <summary>
            Account registration details
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.SignInRequest.InvitationCodeFieldNumber">
            <summary>Field number for the "invitation_code" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.SignInRequest.InvitationCode">
            <summary>
            Invitation code associated with this registration
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.SignInRequest.EcosystemIdFieldNumber">
            <summary>Field number for the "ecosystem_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.SignInRequest.EcosystemId">
            <summary>
            ID of Ecosystem to sign into. 
            Ignored if `invitation_code` is passed
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.AccountDetails">
            <summary>
            Account registration details
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountDetails.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountDetails.Name">
            <summary>
            Account name
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountDetails.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountDetails.Email">
            <summary>
            Email account
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountDetails.SmsFieldNumber">
            <summary>Field number for the "sms" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountDetails.Sms">
            <summary>
            SMS number including country code
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.SignInResponse">
            <summary>
            Response for creating new account
            This object will indicate if a confirmation code
            was sent to one of the users two-factor methods
            like email, SMS, etc.
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.SignInResponse.ConfirmationMethodFieldNumber">
            <summary>Field number for the "confirmation_method" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.SignInResponse.ConfirmationMethod">
            <summary>
            Indicates if confirmation of account is required.
            This settings is configured globally by the server administrator.
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.SignInResponse.ProfileFieldNumber">
            <summary>Field number for the "profile" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.SignInResponse.Profile">
            <summary>
            Contains authentication data for use with the current device.
            This object must be stored in a secure place. It can also be
            protected with a PIN, but this is optional.
            See the docs at https://docs.trinsic.id for more information
            on working with authentication data.
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.AccountProfile">
            <summary>
            Device profile containing sensitive authentication data.
            This information should be stored securely
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountProfile.ProfileTypeFieldNumber">
            <summary>Field number for the "profile_type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountProfile.ProfileType">
            <summary>
            The type of profile, used to differentiate between
            protocol schemes or versions
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountProfile.AuthDataFieldNumber">
            <summary>Field number for the "auth_data" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountProfile.AuthData">
            <summary>
            Auth data containg information about the current device access
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountProfile.AuthTokenFieldNumber">
            <summary>Field number for the "auth_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountProfile.AuthToken">
            <summary>
            Secure token issued by server used to generate zero-knowledge proofs
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountProfile.ProtectionFieldNumber">
            <summary>Field number for the "protection" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.AccountProfile.Protection">
            <summary>
            Token security information about the token.
            If token protection is enabled, implementations must supply
            protection secret before using the token for authentication.
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.TokenProtection">
            <summary>
            Token protection info
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.TokenProtection.EnabledFieldNumber">
            <summary>Field number for the "enabled" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.TokenProtection.Enabled">
            <summary>
            Indicates if token is protected using a PIN,
            security code, HSM secret, etc.
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.TokenProtection.MethodFieldNumber">
            <summary>Field number for the "method" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.TokenProtection.Method">
            <summary>
            The method used to protect the token
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.InfoRequest">
            <summary>
            Request for information about the account used to make the request
            </summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.InfoResponse">
            <summary>
            Information about the account used to make the request
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.Details">
            <summary>
            The account details associated with
            the calling request context
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.EcosystemsFieldNumber">
            <summary>Field number for the "ecosystems" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.Ecosystems">
            <summary>
            Use `ecosystem_id` instead
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.WalletIdFieldNumber">
            <summary>Field number for the "wallet_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.WalletId">
            <summary>
            The wallet ID associated with this account
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.DeviceIdFieldNumber">
            <summary>Field number for the "device_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.DeviceId">
            <summary>
            The device ID associated with this account session
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.EcosystemIdFieldNumber">
            <summary>Field number for the "ecosystem_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.EcosystemId">
            <summary>
            The ecosystem ID within which this account resides
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.InfoResponse.PublicDidFieldNumber">
            <summary>Field number for the "public_did" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.InfoResponse.PublicDid">
            <summary>
            The public DID associated with this account.
            This DID is used as "issuer" when signing verifiable credentials
            </summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountEcosystem.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountEcosystem.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountEcosystem.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Account.V1.AccountEcosystem.UriFieldNumber">
            <summary>Field number for the "uri" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Account.V1.Account.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.Account.V1.Account.AccountBase">
            <summary>Base class for server-side implementations of Account</summary>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountBase.SignIn(Trinsic.Services.Account.V1.SignInRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sign in to an already existing account
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountBase.Info(Trinsic.Services.Account.V1.InfoRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Get account information
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountBase.ListDevices(Trinsic.Services.Account.V1.ListDevicesRequest,Grpc.Core.ServerCallContext)">
            <summary>
            List all connected devices
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountBase.RevokeDevice(Trinsic.Services.Account.V1.RevokeDeviceRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Revoke device access to the account's cloud wallet
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Trinsic.Services.Account.V1.Account.AccountClient">
            <summary>Client for Account</summary>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Account</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Account that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.SignIn(Trinsic.Services.Account.V1.SignInRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign in to an already existing account
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.SignIn(Trinsic.Services.Account.V1.SignInRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign in to an already existing account
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.SignInAsync(Trinsic.Services.Account.V1.SignInRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign in to an already existing account
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.SignInAsync(Trinsic.Services.Account.V1.SignInRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign in to an already existing account
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.Info(Trinsic.Services.Account.V1.InfoRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get account information
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.Info(Trinsic.Services.Account.V1.InfoRequest,Grpc.Core.CallOptions)">
            <summary>
            Get account information
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.InfoAsync(Trinsic.Services.Account.V1.InfoRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get account information
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.InfoAsync(Trinsic.Services.Account.V1.InfoRequest,Grpc.Core.CallOptions)">
            <summary>
            Get account information
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.ListDevices(Trinsic.Services.Account.V1.ListDevicesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List all connected devices
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.ListDevices(Trinsic.Services.Account.V1.ListDevicesRequest,Grpc.Core.CallOptions)">
            <summary>
            List all connected devices
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.ListDevicesAsync(Trinsic.Services.Account.V1.ListDevicesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            List all connected devices
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.ListDevicesAsync(Trinsic.Services.Account.V1.ListDevicesRequest,Grpc.Core.CallOptions)">
            <summary>
            List all connected devices
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.RevokeDevice(Trinsic.Services.Account.V1.RevokeDeviceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Revoke device access to the account's cloud wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.RevokeDevice(Trinsic.Services.Account.V1.RevokeDeviceRequest,Grpc.Core.CallOptions)">
            <summary>
            Revoke device access to the account's cloud wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.RevokeDeviceAsync(Trinsic.Services.Account.V1.RevokeDeviceRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Revoke device access to the account's cloud wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.RevokeDeviceAsync(Trinsic.Services.Account.V1.RevokeDeviceRequest,Grpc.Core.CallOptions)">
            <summary>
            Revoke device access to the account's cloud wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.AccountClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.BindService(Trinsic.Services.Account.V1.Account.AccountBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.Account.V1.Account.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.Account.V1.Account.AccountBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.Debug.V1.DebugReflection">
            <summary>Holder for reflection information generated from services/debug/v1/debug.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Debug.V1.DebugReflection.Descriptor">
            <summary>File descriptor for services/debug/v1/debug.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Debug.V1.Debugging.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.Debug.V1.Debugging.DebuggingBase">
            <summary>Base class for server-side implementations of Debugging</summary>
        </member>
        <member name="T:Trinsic.Services.Debug.V1.Debugging.DebuggingClient">
            <summary>Client for Debugging</summary>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.DebuggingClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Debugging</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.DebuggingClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Debugging that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.DebuggingClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.DebuggingClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.DebuggingClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.BindService(Trinsic.Services.Debug.V1.Debugging.DebuggingBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.Debug.V1.Debugging.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.Debug.V1.Debugging.DebuggingBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.Protobuf.Options.FieldOptionsReflection">
            <summary>Holder for reflection information generated from services/options/field-options.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Protobuf.Options.FieldOptionsReflection.Descriptor">
            <summary>File descriptor for services/options/field-options.proto</summary>
        </member>
        <member name="T:Trinsic.Services.Protobuf.Options.FieldOptionsExtensions">
            <summary>Holder for extension identifiers generated from the top level of services/options/field-options.proto</summary>
        </member>
        <member name="F:Trinsic.Services.Protobuf.Options.FieldOptionsExtensions.Optional">
            <summary>
            Whether field is optional in Trinsic's backend.
            This is not the same as an `optional` protobuf label;
            it only impacts documentation generation for the field.
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.ProviderReflection">
            <summary>Holder for reflection information generated from services/provider/v1/provider.proto</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.ProviderReflection.Descriptor">
            <summary>File descriptor for services/provider/v1/provider.proto</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Invite.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Invite.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Invite.CreatedFieldNumber">
            <summary>Field number for the "created" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Invite.AcceptedFieldNumber">
            <summary>Field number for the "accepted" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Invite.ExpiresFieldNumber">
            <summary>Field number for the "expires" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InviteRequest.ParticipantFieldNumber">
            <summary>Field number for the "participant" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InviteRequest.Participant">
            <summary>
            Type of participant being invited (individual/organization)
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InviteRequest.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InviteRequest.Description">
            <summary>
            Description of invitation
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InviteRequest.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InviteRequest.Details">
            <summary>
            Account details of invitee
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.InviteRequest.Types">
            <summary>Container for nested types declared in the InviteRequest message type.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InviteResponse.InvitationIdFieldNumber">
            <summary>Field number for the "invitation_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InviteResponse.InvitationId">
            <summary>
            ID of created invitation
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InviteResponse.InvitationCodeFieldNumber">
            <summary>Field number for the "invitation_code" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InviteResponse.InvitationCode">
            <summary>
            Invitation Code that must be passed with the account 'SignIn' request
            to correlate this user with the invitation sent.
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.InvitationStatusRequest">
            <summary>
            Request details for the status of onboarding
            an individual or organization.
            The reference_id passed is the response from the
            `Onboard` method call
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusRequest.InvitationIdFieldNumber">
            <summary>Field number for the "invitation_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InvitationStatusRequest.InvitationId">
            <summary>
            ID of invitation
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InvitationStatusResponse.Status">
            <summary>
            Status of invitation
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.StatusDetailsFieldNumber">
            <summary>Field number for the "status_details" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.InvitationStatusResponse.StatusDetails">
            <summary>
            Human-readable string with details about invitation status
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.InvitationStatusResponse.Types">
            <summary>Container for nested types declared in the InvitationStatusResponse message type.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.Types.Status.Error">
            <summary>
            Onboarding resulted in error
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.Types.Status.InvitationSent">
            <summary>
            The participant has been invited
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.Types.Status.Completed">
            <summary>
            The participant has been onboarded
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.InvitationStatusResponse.Types.Status.Expired">
            <summary>
            The invite has expired
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Ecosystem.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Ecosystem.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Ecosystem.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.Ecosystem.UriFieldNumber">
            <summary>Field number for the "uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemRequest.Name">
            <summary>
            Globally unique name for the Ecosystem. This name will be
            part of the ecosystem specific URLs and namespaces.
            Allowed characters are lowercase letters, numbers, underscore and hyphen.
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemRequest.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemRequest.Description">
            <summary>
            Ecosystem description
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemRequest.UriFieldNumber">
            <summary>Field number for the "uri" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemRequest.Uri">
            <summary>
            External URL associated with your organization or ecosystem entity
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemRequest.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemRequest.Details">
            <summary>
            The account details of the owner of the ecosystem
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemResponse.EcosystemFieldNumber">
            <summary>Field number for the "ecosystem" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemResponse.Ecosystem">
            <summary>
            Details of the created ecosystem
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemResponse.ProfileFieldNumber">
            <summary>Field number for the "profile" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemResponse.Profile">
            <summary>
            Account profile for auth of the owner of the ecosystem
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.CreateEcosystemResponse.ConfirmationMethodFieldNumber">
            <summary>Field number for the "confirmation_method" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.CreateEcosystemResponse.ConfirmationMethod">
            <summary>
            Indicates if confirmation of account is required.
            This setting is configured globally by the server administrator.
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.GenerateTokenRequest.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.GenerateTokenRequest.Description">
            <summary>
            Description to identify this token
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.GenerateTokenResponse.ProfileFieldNumber">
            <summary>Field number for the "profile" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.GenerateTokenResponse.Profile">
            <summary>
            Account authentication profile that contains unprotected token
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.GetOberonKeyRequest">
            <summary>
            request message for GetOberonKey
            </summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.GetOberonKeyResponse">
            <summary>
            response message for GetOberonKey
            </summary>
        </member>
        <member name="F:Trinsic.Services.Provider.V1.GetOberonKeyResponse.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.GetOberonKeyResponse.Key">
            <summary>
            Oberon Public Key as RAW base64 URL encoded string
            </summary>
        </member>
        <member name="P:Trinsic.Services.Provider.V1.Provider.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.Provider.ProviderBase">
            <summary>Base class for server-side implementations of Provider</summary>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderBase.CreateEcosystem(Trinsic.Services.Provider.V1.CreateEcosystemRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Create new ecosystem and assign the authenticated user as owner
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderBase.GenerateToken(Trinsic.Services.Provider.V1.GenerateTokenRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Generates an unprotected authentication token that can be used to
            configure server side applications
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderBase.Invite(Trinsic.Services.Provider.V1.InviteRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderBase.InvitationStatus(Trinsic.Services.Provider.V1.InvitationStatusRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Check the invitation status
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderBase.GetOberonKey(Trinsic.Services.Provider.V1.GetOberonKeyRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Returns the public key being used to create/verify oberon tokens
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Trinsic.Services.Provider.V1.Provider.ProviderClient">
            <summary>Client for Provider</summary>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Provider</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Provider that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.CreateEcosystem(Trinsic.Services.Provider.V1.CreateEcosystemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create new ecosystem and assign the authenticated user as owner
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.CreateEcosystem(Trinsic.Services.Provider.V1.CreateEcosystemRequest,Grpc.Core.CallOptions)">
            <summary>
            Create new ecosystem and assign the authenticated user as owner
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.CreateEcosystemAsync(Trinsic.Services.Provider.V1.CreateEcosystemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create new ecosystem and assign the authenticated user as owner
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.CreateEcosystemAsync(Trinsic.Services.Provider.V1.CreateEcosystemRequest,Grpc.Core.CallOptions)">
            <summary>
            Create new ecosystem and assign the authenticated user as owner
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GenerateToken(Trinsic.Services.Provider.V1.GenerateTokenRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Generates an unprotected authentication token that can be used to
            configure server side applications
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GenerateToken(Trinsic.Services.Provider.V1.GenerateTokenRequest,Grpc.Core.CallOptions)">
            <summary>
            Generates an unprotected authentication token that can be used to
            configure server side applications
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GenerateTokenAsync(Trinsic.Services.Provider.V1.GenerateTokenRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Generates an unprotected authentication token that can be used to
            configure server side applications
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GenerateTokenAsync(Trinsic.Services.Provider.V1.GenerateTokenRequest,Grpc.Core.CallOptions)">
            <summary>
            Generates an unprotected authentication token that can be used to
            configure server side applications
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.Invite(Trinsic.Services.Provider.V1.InviteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.Invite(Trinsic.Services.Provider.V1.InviteRequest,Grpc.Core.CallOptions)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InviteAsync(Trinsic.Services.Provider.V1.InviteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InviteAsync(Trinsic.Services.Provider.V1.InviteRequest,Grpc.Core.CallOptions)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InvitationStatus(Trinsic.Services.Provider.V1.InvitationStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check the invitation status
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InvitationStatus(Trinsic.Services.Provider.V1.InvitationStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Check the invitation status
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InvitationStatusAsync(Trinsic.Services.Provider.V1.InvitationStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check the invitation status
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.InvitationStatusAsync(Trinsic.Services.Provider.V1.InvitationStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Check the invitation status
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GetOberonKey(Trinsic.Services.Provider.V1.GetOberonKeyRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Returns the public key being used to create/verify oberon tokens
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GetOberonKey(Trinsic.Services.Provider.V1.GetOberonKeyRequest,Grpc.Core.CallOptions)">
            <summary>
            Returns the public key being used to create/verify oberon tokens
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GetOberonKeyAsync(Trinsic.Services.Provider.V1.GetOberonKeyRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Returns the public key being used to create/verify oberon tokens
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.GetOberonKeyAsync(Trinsic.Services.Provider.V1.GetOberonKeyRequest,Grpc.Core.CallOptions)">
            <summary>
            Returns the public key being used to create/verify oberon tokens
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.ProviderClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.BindService(Trinsic.Services.Provider.V1.Provider.ProviderBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.Provider.V1.Provider.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.Provider.V1.Provider.ProviderBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.TrustRegistryReflection">
            <summary>Holder for reflection information generated from services/trust-registry/v1/trust-registry.proto</summary>
        </member>
        <member name="P:Trinsic.Services.TrustRegistry.V1.TrustRegistryReflection.Descriptor">
            <summary>File descriptor for services/trust-registry/v1/trust-registry.proto</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegistrationStatus.Current">
            <summary>
            - the entity is currently authorized, as of time of the query.
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegistrationStatus.Expired">
            <summary>
            - entity rights have expired.
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegistrationStatus.Terminated">
            <summary>
            - entity has voluntarily ceased Issuer role under the specific EGF.
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegistrationStatus.Revoked">
            <summary>
            - entity authority under specific EGF was terminated by the governing authority.
            </summary>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest">
            <summary>
            Register new ecosystem governance framework
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest.GovernanceFrameworkUriFieldNumber">
            <summary>Field number for the "governance_framework_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkResponse.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.TrustRegistry.V1.AddFrameworkResponse.Id">
            <summary>
            Unique framework identifier
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkResponse.GoverningAuthorityFieldNumber">
            <summary>Field number for the "governing_authority" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.AddFrameworkResponse.TrustRegistryFieldNumber">
            <summary>Field number for the "trust_registry" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RemoveFrameworkRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.SearchRegistryRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Trinsic.Services.TrustRegistry.V1.SearchRegistryRequest.Query">
            <summary>
            SELECT c from c where c.type == 'GovernanceFramework'
            </summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.SearchRegistryRequest.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.SearchRegistryResponse.ItemsJsonFieldNumber">
            <summary>Field number for the "items_json" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.SearchRegistryResponse.HasMoreFieldNumber">
            <summary>Field number for the "has_more" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.SearchRegistryResponse.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GovernanceFramework.GovernanceFrameworkUriFieldNumber">
            <summary>Field number for the "governance_framework_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GovernanceFramework.TrustRegistryUriFieldNumber">
            <summary>Field number for the "trust_registry_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GovernanceFramework.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.DidUriFieldNumber">
            <summary>Field number for the "did_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.WalletIdFieldNumber">
            <summary>Field number for the "wallet_id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.SchemaUriFieldNumber">
            <summary>Field number for the "schema_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.ValidFromUtcFieldNumber">
            <summary>Field number for the "valid_from_utc" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.ValidUntilUtcFieldNumber">
            <summary>Field number for the "valid_until_utc" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.FrameworkIdFieldNumber">
            <summary>Field number for the "framework_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.FrameworkId">
            <summary>
            the id of the governance framework
            </summary>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest.MemberOneofCase">
            <summary>Enum of possible cases for the "member" oneof.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.DidUriFieldNumber">
            <summary>Field number for the "did_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.WalletIdFieldNumber">
            <summary>Field number for the "wallet_id" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.SchemaUriFieldNumber">
            <summary>Field number for the "schema_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.FrameworkIdFieldNumber">
            <summary>Field number for the "framework_id" field.</summary>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest.MemberOneofCase">
            <summary>Enum of possible cases for the "member" oneof.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest.GovernanceFrameworkUriFieldNumber">
            <summary>Field number for the "governance_framework_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest.DidUriFieldNumber">
            <summary>Field number for the "did_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest.X509CertFieldNumber">
            <summary>Field number for the "x509_cert" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest.SchemaUriFieldNumber">
            <summary>Field number for the "schema_uri" field.</summary>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest.MemberOneofCase">
            <summary>Enum of possible cases for the "member" oneof.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.GetMembershipStatusResponse.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.FetchDataRequest.GovernanceFrameworkUriFieldNumber">
            <summary>Field number for the "governance_framework_uri" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.FetchDataRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.FetchDataResponse.ResponseJsonFieldNumber">
            <summary>Field number for the "response_json" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.FetchDataResponse.HasMoreResultsFieldNumber">
            <summary>Field number for the "has_more_results" field.</summary>
        </member>
        <member name="F:Trinsic.Services.TrustRegistry.V1.FetchDataResponse.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.TrustRegistry.V1.TrustRegistry.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase">
            <summary>Base class for server-side implementations of TrustRegistry</summary>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase.AddFramework(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Adds a trust registry defintion to the ecosystem
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase.RegisterMember(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Registers an authoritative issuer with a credential template
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase.UnregisterMember(Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Removes an authoritative issuer with a credential template from the trust registry
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient">
            <summary>Client for TrustRegistry</summary>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for TrustRegistry</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for TrustRegistry that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.AddFramework(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds a trust registry defintion to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.AddFramework(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds a trust registry defintion to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.AddFrameworkAsync(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Adds a trust registry defintion to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.AddFrameworkAsync(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest,Grpc.Core.CallOptions)">
            <summary>
            Adds a trust registry defintion to the ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.RegisterMember(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Registers an authoritative issuer with a credential template
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.RegisterMember(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest,Grpc.Core.CallOptions)">
            <summary>
            Registers an authoritative issuer with a credential template
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.RegisterMemberAsync(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Registers an authoritative issuer with a credential template
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.RegisterMemberAsync(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest,Grpc.Core.CallOptions)">
            <summary>
            Registers an authoritative issuer with a credential template
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.UnregisterMember(Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an authoritative issuer with a credential template from the trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.UnregisterMember(Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an authoritative issuer with a credential template from the trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.UnregisterMemberAsync(Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Removes an authoritative issuer with a credential template from the trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.UnregisterMemberAsync(Trinsic.Services.TrustRegistry.V1.UnregisterMemberRequest,Grpc.Core.CallOptions)">
            <summary>
            Removes an authoritative issuer with a credential template from the trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.BindService(Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.TrustRegistry.V1.TrustRegistry.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.TrustRegistry.V1.TrustRegistry.TrustRegistryBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.UniversalWalletReflection">
            <summary>Holder for reflection information generated from services/universal-wallet/v1/universal-wallet.proto</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.UniversalWalletReflection.Descriptor">
            <summary>File descriptor for services/universal-wallet/v1/universal-wallet.proto</summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.SearchRequest">
            <summary>
            Request to search items in wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.SearchRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.SearchRequest.Query">
            <summary>
            SQL Query to execute against items in wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.SearchRequest.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.SearchRequest.ContinuationToken">
            <summary>
            Token provided by previous `SearchResponse`
            if more data is available for query
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.SearchResponse">
            <summary>
            Response to `SearchRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.SearchResponse.ItemsFieldNumber">
            <summary>Field number for the "items" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.SearchResponse.Items">
            <summary>
            Array of query results, as JSON strings
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.SearchResponse.HasMoreFieldNumber">
            <summary>Field number for the "has_more" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.SearchResponse.HasMore">
            <summary>
            Whether more results are available for this query via `continuation_token`
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.SearchResponse.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.SearchResponse.ContinuationToken">
            <summary>
            Token to fetch next set of results via `SearchRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.GetItemRequest">
            <summary>
            Request to fetch an item from wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.GetItemRequest.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.GetItemRequest.ItemId">
            <summary>
            ID of item in wallet
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.GetItemResponse">
            <summary>
            Response to `GetItemRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.GetItemResponse.ItemJsonFieldNumber">
            <summary>Field number for the "item_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.GetItemResponse.ItemJson">
            <summary>
            Item data as a JSON string
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.GetItemResponse.ItemTypeFieldNumber">
            <summary>Field number for the "item_type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.GetItemResponse.ItemType">
            <summary>
            Type of item specified when item was inserted into wallet
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.UpdateItemRequest">
            <summary>
            Request to update item in wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.UpdateItemRequest.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.UpdateItemRequest.ItemId">
            <summary>
            ID of item in wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.UpdateItemRequest.ItemTypeFieldNumber">
            <summary>Field number for the "item_type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.UpdateItemRequest.ItemType">
            <summary>
            Item type (ex. "VerifiableCredential")
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.UpdateItemResponse">
            <summary>
            Response to `UpdateItemRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.InsertItemRequest">
            <summary>
            Request to insert a JSON document into a wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.InsertItemRequest.ItemJsonFieldNumber">
            <summary>Field number for the "item_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.InsertItemRequest.ItemJson">
            <summary>
            Document to insert; must be stringified JSON
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.InsertItemRequest.ItemTypeFieldNumber">
            <summary>Field number for the "item_type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.InsertItemRequest.ItemType">
            <summary>
            Item type (ex. "VerifiableCredential")
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.InsertItemResponse">
            <summary>
            Response to `InsertItemRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.InsertItemResponse.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.InsertItemResponse.ItemId">
            <summary>
            ID of item inserted into wallet
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.DeleteItemRequest">
            <summary>
            Request to delete an item in a wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.UniversalWallet.V1.DeleteItemRequest.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.DeleteItemRequest.ItemId">
            <summary>
            ID of item to delete
            </summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.DeleteItemResponse">
            <summary>
            Response to `DeleteItemRequest`
            </summary>
        </member>
        <member name="P:Trinsic.Services.UniversalWallet.V1.UniversalWallet.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase">
            <summary>Base class for server-side implementations of UniversalWallet</summary>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase.GetItem(Trinsic.Services.UniversalWallet.V1.GetItemRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Retrieve an item from the wallet with a given item identifier
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase.Search(Trinsic.Services.UniversalWallet.V1.SearchRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Search the wallet using a SQL-like syntax
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase.InsertItem(Trinsic.Services.UniversalWallet.V1.InsertItemRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Insert an item into the wallet
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase.UpdateItem(Trinsic.Services.UniversalWallet.V1.UpdateItemRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Update an item in the wallet
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase.DeleteItem(Trinsic.Services.UniversalWallet.V1.DeleteItemRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Delete an item from the wallet permanently
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient">
            <summary>Client for UniversalWallet</summary>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for UniversalWallet</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for UniversalWallet that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.GetItem(Trinsic.Services.UniversalWallet.V1.GetItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Retrieve an item from the wallet with a given item identifier
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.GetItem(Trinsic.Services.UniversalWallet.V1.GetItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Retrieve an item from the wallet with a given item identifier
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.GetItemAsync(Trinsic.Services.UniversalWallet.V1.GetItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Retrieve an item from the wallet with a given item identifier
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.GetItemAsync(Trinsic.Services.UniversalWallet.V1.GetItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Retrieve an item from the wallet with a given item identifier
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.Search(Trinsic.Services.UniversalWallet.V1.SearchRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Search the wallet using a SQL-like syntax
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.Search(Trinsic.Services.UniversalWallet.V1.SearchRequest,Grpc.Core.CallOptions)">
            <summary>
            Search the wallet using a SQL-like syntax
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.SearchAsync(Trinsic.Services.UniversalWallet.V1.SearchRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Search the wallet using a SQL-like syntax
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.SearchAsync(Trinsic.Services.UniversalWallet.V1.SearchRequest,Grpc.Core.CallOptions)">
            <summary>
            Search the wallet using a SQL-like syntax
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.InsertItem(Trinsic.Services.UniversalWallet.V1.InsertItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Insert an item into the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.InsertItem(Trinsic.Services.UniversalWallet.V1.InsertItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Insert an item into the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.InsertItemAsync(Trinsic.Services.UniversalWallet.V1.InsertItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Insert an item into the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.InsertItemAsync(Trinsic.Services.UniversalWallet.V1.InsertItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Insert an item into the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.UpdateItem(Trinsic.Services.UniversalWallet.V1.UpdateItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update an item in the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.UpdateItem(Trinsic.Services.UniversalWallet.V1.UpdateItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Update an item in the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.UpdateItemAsync(Trinsic.Services.UniversalWallet.V1.UpdateItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update an item in the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.UpdateItemAsync(Trinsic.Services.UniversalWallet.V1.UpdateItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Update an item in the wallet
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.DeleteItem(Trinsic.Services.UniversalWallet.V1.DeleteItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Delete an item from the wallet permanently
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.DeleteItem(Trinsic.Services.UniversalWallet.V1.DeleteItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Delete an item from the wallet permanently
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.DeleteItemAsync(Trinsic.Services.UniversalWallet.V1.DeleteItemRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Delete an item from the wallet permanently
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.DeleteItemAsync(Trinsic.Services.UniversalWallet.V1.DeleteItemRequest,Grpc.Core.CallOptions)">
            <summary>
            Delete an item from the wallet permanently
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.BindService(Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.UniversalWallet.V1.UniversalWallet.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.UniversalWallet.V1.UniversalWallet.UniversalWalletBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplatesReflection">
            <summary>Holder for reflection information generated from services/verifiable-credentials/templates/v1/templates.proto</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplatesReflection.Descriptor">
            <summary>File descriptor for services/verifiable-credentials/templates/v1/templates.proto</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.FieldType">
            <summary>
            Valid types for credential fields
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateRequest">
            <summary>
            Request to fetch a template by ID
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateRequest.Id">
            <summary>
            ID of template to fetch
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateResponse">
            <summary>
            Response to `GetCredentialTemplateRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateResponse.TemplateFieldNumber">
            <summary>Field number for the "template" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateResponse.Template">
            <summary>
            Template fetched by ID
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest">
            <summary>
            Request to search templates using a SQL query
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest.Query">
            <summary>
            SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest.ContinuationToken">
            <summary>
            Token provided by previous `SearchCredentialTemplatesResponse`
            if more data is available for query
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse">
            <summary>
            Response to `SearchCredentialTemplatesRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.ItemsJsonFieldNumber">
            <summary>Field number for the "items_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.ItemsJson">
            <summary>
            Raw JSON data returned from query
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.HasMoreFieldNumber">
            <summary>Field number for the "has_more" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.HasMore">
            <summary>
            Whether more results are available for this query via `continuation_token`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesResponse.ContinuationToken">
            <summary>
            Count of items in `items_json`
            int32 count = 3; unpopulated and unused
            Token to fetch next set of results via `SearchCredentialTemplatesRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest">
            <summary>
            Request to list templates using a SQL query
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest.Query">
            <summary>
            SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest.ContinuationToken">
            <summary>
            Token provided by previous `ListCredentialTemplatesResponse`
            if more data is available for query
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse">
            <summary>
            Response to `ListCredentialTemplatesRequest` 
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.TemplatesFieldNumber">
            <summary>Field number for the "templates" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.Templates">
            <summary>
            Templates found by query
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.HasMoreResultsFieldNumber">
            <summary>Field number for the "has_more_results" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.HasMoreResults">
            <summary>
            Whether more results are available for this query via `continuation_token`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.ContinuationTokenFieldNumber">
            <summary>Field number for the "continuation_token" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesResponse.ContinuationToken">
            <summary>
            Token to fetch next set of resuts via `ListCredentialTemplatesRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.DeleteCredentialTemplateRequest">
            <summary>
            Request to delete a template by ID
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.DeleteCredentialTemplateRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.DeleteCredentialTemplateRequest.Id">
            <summary>
            ID of template to delete
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.DeleteCredentialTemplateResponse">
            <summary>
            Response to `DeleteCredentialTemplateRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest">
            <summary>
            Request to create a new template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.Name">
            <summary>
            Name of new template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.Fields">
            <summary>
            Fields which compose the template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.AllowAdditionalFieldsFieldNumber">
            <summary>Field number for the "allow_additional_fields" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest.AllowAdditionalFields">
            <summary>
            Whether credentials may be issued against this template which have fields
            not specified in `fields`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateResponse">
            <summary>
            Response to `CreateCredentialTemplateRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateResponse.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateResponse.Data">
            <summary>
            Created template
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField">
            <summary>
            A field defined in a template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.Description">
            <summary>
            Human-readable description of the field
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.OptionalFieldNumber">
            <summary>Field number for the "optional" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.Optional">
            <summary>
            Whether this field may be omitted when a credential is issued against the template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateField.Type">
            <summary>
            The type of the field
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.GetTemplateRequest">
            <summary>
            Unused
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.GetTemplateRequest.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.GetTemplateResponse">
            <summary>
            Unused
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.GetTemplateResponse.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.ListTemplatesRequest">
            <summary>
            Unused
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.ListTemplatesResponse">
            <summary>
            Unused
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.ListTemplatesResponse.TemplatesFieldNumber">
            <summary>Field number for the "templates" field.</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData">
            <summary>
            Credential Template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.Id">
            <summary>
            Template ID
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.Name">
            <summary>
            Template name
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.Version">
            <summary>
            Template version number
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.Fields">
            <summary>
            Fields defined for the template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.AllowAdditionalFieldsFieldNumber">
            <summary>Field number for the "allow_additional_fields" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.AllowAdditionalFields">
            <summary>
            Whether credentials issued against this template may 
            contain fields not defined by template
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.SchemaUriFieldNumber">
            <summary>Field number for the "schema_uri" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.SchemaUri">
            <summary>
            URI pointing to template JSON schema document
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.ContextUriFieldNumber">
            <summary>Field number for the "context_uri" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.ContextUri">
            <summary>
            URI pointing to template JSON-LD context document
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.EcosystemIdFieldNumber">
            <summary>Field number for the "ecosystem_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.EcosystemId">
            <summary>
            ID of ecosystem in which template resides
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.Type">
            <summary>
            Template type (`VerifiableCredential`)
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.CreatedByFieldNumber">
            <summary>Field number for the "created_by" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.TemplateData.CreatedBy">
            <summary>
            ID of template creator
            </summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesBase">
            <summary>Base class for server-side implementations of CredentialTemplates</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient">
            <summary>Client for CredentialTemplates</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for CredentialTemplates</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for CredentialTemplates that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.BindService(Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.VerifiableCredentials.Templates.V1.CredentialTemplates.CredentialTemplatesBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredentialsReflection">
            <summary>Holder for reflection information generated from services/verifiable-credentials/v1/verifiable-credentials.proto</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredentialsReflection.Descriptor">
            <summary>File descriptor for services/verifiable-credentials/v1/verifiable-credentials.proto</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.IssueRequest">
            <summary>
            Request to sign a JSON-LD Credential using public key tied to caller
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueRequest.DocumentJsonFieldNumber">
            <summary>Field number for the "document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueRequest.DocumentJson">
            <summary>
            Valid JSON-LD Credential document to be signed, in string form
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.IssueResponse">
            <summary>
            Response to `IssueRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueResponse.SignedDocumentJsonFieldNumber">
            <summary>Field number for the "signed_document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueResponse.SignedDocumentJson">
            <summary>
            Verifiable Credential document, signed with public key
            tied to caller of `IssueRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest">
            <summary>
            Request to create and sign a JSON-LD Verifiable Credential from a template using public key tied to caller
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.TemplateIdFieldNumber">
            <summary>Field number for the "template_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.TemplateId">
            <summary>
            ID of template to use
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.ValuesJsonFieldNumber">
            <summary>Field number for the "values_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.ValuesJson">
            <summary>
            JSON document string with keys corresponding to the fields of
            the template referenced by `template_id`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.FrameworkIdFieldNumber">
            <summary>Field number for the "framework_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest.FrameworkId">
            <summary>
            Governance framework ID to use with issuance of this credential.
            If specified, the issued credential will contain extended issuer
            metadata with membership info for the given ecosystem governance framework (EGF)
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateResponse">
            <summary>
            Response to `IssueFromTemplateRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateResponse.DocumentJsonFieldNumber">
            <summary>Field number for the "document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateResponse.DocumentJson">
            <summary>
            Verifiable Credential document, in JSON-LD form,
            constructed from the specified template and values; signed
            with public key tied to caller of `IssueFromTemplateRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest">
            <summary>
            Request to create a proof for a Verifiable Credential using public key tied to caller.
            Either `item_id` or `document_json` may be provided, not both.
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.RevealDocumentJsonFieldNumber">
            <summary>Field number for the "reveal_document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.RevealDocumentJson">
            <summary>
            A valid JSON-LD frame describing which fields should be
            revealed in the generated proof. 
            If unspecified, all fields in the document will be revealed
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.ItemIdFieldNumber">
            <summary>Field number for the "item_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.ItemId">
            <summary>
            ID of wallet item stored in a Trinsic cloud wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.DocumentJsonFieldNumber">
            <summary>Field number for the "document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.DocumentJson">
            <summary>
            A valid JSON-LD Verifiable Credential document string 
            with an unbound signature. The proof will be derived from this
            document directly. The document will not be stored in the wallet.
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest.ProofOneofCase">
            <summary>Enum of possible cases for the "proof" oneof.</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.CreateProofResponse">
            <summary>
            Response to `CreateProofRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CreateProofResponse.ProofDocumentJsonFieldNumber">
            <summary>Field number for the "proof_document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CreateProofResponse.ProofDocumentJson">
            <summary>
            Valid JSON-LD proof for the specified credential
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest">
            <summary>
            Request to verify a proof
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest.ProofDocumentJsonFieldNumber">
            <summary>Field number for the "proof_document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest.ProofDocumentJson">
            <summary>
            JSON-LD proof document string to verify
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse">
            <summary>
            Response to `VerifyProofRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.IsValidFieldNumber">
            <summary>Field number for the "is_valid" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.IsValid">
            <summary>
            Whether or not all validations in `validation_results` passed
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.ValidationMessagesFieldNumber">
            <summary>Field number for the "validation_messages" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.ValidationMessages">
            <summary>
            Use `validation_results` instead
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.ValidationResultsFieldNumber">
            <summary>Field number for the "validation_results" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifyProofResponse.ValidationResults">
            <summary>
            Results of each validation check performed, 
            such as schema conformance, revocation status, signature, etc.
            Detailed results are provided for failed validations.
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.ValidationMessage">
            <summary>
            Result of a validation check on a proof
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.ValidationMessage.IsValidFieldNumber">
            <summary>Field number for the "is_valid" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.ValidationMessage.IsValid">
            <summary>
            Whether or not this validation check passed
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.ValidationMessage.MessagesFieldNumber">
            <summary>Field number for the "messages" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.ValidationMessage.Messages">
            <summary>
            If validation failed, contains messages explaining why
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.SendRequest">
            <summary>
            Request to send a document to another user's wallet
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.SendRequest.EmailFieldNumber">
            <summary>Field number for the "email" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.SendRequest.Email">
            <summary>
            Email address of user to send item to
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DidUriFieldNumber">
            <summary>Field number for the "did_uri" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DidUri">
            <summary>
            DID of recipient (presently unsupported)
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DidcommInvitationJsonFieldNumber">
            <summary>Field number for the "didcomm_invitation_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DidcommInvitationJson">
            <summary>
            DIDComm out-of-band invitation JSON (presently unsupported)
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DocumentJsonFieldNumber">
            <summary>Field number for the "document_json" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DocumentJson">
            <summary>
            JSON document to send to recipient
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.SendRequest.DeliveryMethodOneofCase">
            <summary>Enum of possible cases for the "delivery_method" oneof.</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.SendResponse">
            <summary>
            Response to `SendRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest">
            <summary>
            Request to update a credential's revocation status
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest.CredentialStatusIdFieldNumber">
            <summary>Field number for the "credential_status_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest.CredentialStatusId">
            <summary>
            Credential Status ID to update
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest.RevokedFieldNumber">
            <summary>Field number for the "revoked" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest.Revoked">
            <summary>
            New revocation status of credential
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.UpdateStatusResponse">
            <summary>
            Response to `UpdateStatusRequest`
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest">
            <summary>
            Request to check a credential's revocation status
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest.CredentialStatusIdFieldNumber">
            <summary>Field number for the "credential_status_id" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest.CredentialStatusId">
            <summary>
            Credential Status ID to check
            </summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.CheckStatusResponse">
            <summary>
            Response to `CheckStatusRequest`
            </summary>
        </member>
        <member name="F:Trinsic.Services.VerifiableCredentials.V1.CheckStatusResponse.RevokedFieldNumber">
            <summary>Field number for the "revoked" field.</summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.CheckStatusResponse.Revoked">
            <summary>
            The credential's revocation status
            </summary>
        </member>
        <member name="P:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase">
            <summary>Base class for server-side implementations of VerifiableCredential</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.Issue(Trinsic.Services.VerifiableCredentials.V1.IssueRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sign and issue a verifiable credential from a submitted document.
            The document must be a valid JSON-LD document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.IssueFromTemplate(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sign and issue a verifiable credential from a pre-defined template.
            This process will also add schema validation and 
            revocation registry entry in the credential.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.CheckStatus(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Check credential status in the revocation registry
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.UpdateStatus(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Update credential status by setting the revocation value
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.CreateProof(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Create a proof from a signed document that is a valid
            verifiable credential and contains a signature from which a proof can be derived.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.VerifyProof(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Verifies a proof by checking the signature value, and if possible schema validation,
            revocation status, and issuer status against a trust registry
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase.Send(Trinsic.Services.VerifiableCredentials.V1.SendRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Sends a document directly to a user's email within the given ecosystem
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="T:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient">
            <summary>Client for VerifiableCredential</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for VerifiableCredential</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for VerifiableCredential that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.Issue(Trinsic.Services.VerifiableCredentials.V1.IssueRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign and issue a verifiable credential from a submitted document.
            The document must be a valid JSON-LD document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.Issue(Trinsic.Services.VerifiableCredentials.V1.IssueRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign and issue a verifiable credential from a submitted document.
            The document must be a valid JSON-LD document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueAsync(Trinsic.Services.VerifiableCredentials.V1.IssueRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign and issue a verifiable credential from a submitted document.
            The document must be a valid JSON-LD document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueAsync(Trinsic.Services.VerifiableCredentials.V1.IssueRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign and issue a verifiable credential from a submitted document.
            The document must be a valid JSON-LD document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueFromTemplate(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign and issue a verifiable credential from a pre-defined template.
            This process will also add schema validation and 
            revocation registry entry in the credential.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueFromTemplate(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign and issue a verifiable credential from a pre-defined template.
            This process will also add schema validation and 
            revocation registry entry in the credential.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueFromTemplateAsync(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sign and issue a verifiable credential from a pre-defined template.
            This process will also add schema validation and 
            revocation registry entry in the credential.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.IssueFromTemplateAsync(Trinsic.Services.VerifiableCredentials.V1.IssueFromTemplateRequest,Grpc.Core.CallOptions)">
            <summary>
            Sign and issue a verifiable credential from a pre-defined template.
            This process will also add schema validation and 
            revocation registry entry in the credential.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CheckStatus(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check credential status in the revocation registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CheckStatus(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Check credential status in the revocation registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CheckStatusAsync(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Check credential status in the revocation registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CheckStatusAsync(Trinsic.Services.VerifiableCredentials.V1.CheckStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Check credential status in the revocation registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.UpdateStatus(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update credential status by setting the revocation value
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.UpdateStatus(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Update credential status by setting the revocation value
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.UpdateStatusAsync(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Update credential status by setting the revocation value
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.UpdateStatusAsync(Trinsic.Services.VerifiableCredentials.V1.UpdateStatusRequest,Grpc.Core.CallOptions)">
            <summary>
            Update credential status by setting the revocation value
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CreateProof(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create a proof from a signed document that is a valid
            verifiable credential and contains a signature from which a proof can be derived.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CreateProof(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest,Grpc.Core.CallOptions)">
            <summary>
            Create a proof from a signed document that is a valid
            verifiable credential and contains a signature from which a proof can be derived.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CreateProofAsync(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Create a proof from a signed document that is a valid
            verifiable credential and contains a signature from which a proof can be derived.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.CreateProofAsync(Trinsic.Services.VerifiableCredentials.V1.CreateProofRequest,Grpc.Core.CallOptions)">
            <summary>
            Create a proof from a signed document that is a valid
            verifiable credential and contains a signature from which a proof can be derived.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.VerifyProof(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Verifies a proof by checking the signature value, and if possible schema validation,
            revocation status, and issuer status against a trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.VerifyProof(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest,Grpc.Core.CallOptions)">
            <summary>
            Verifies a proof by checking the signature value, and if possible schema validation,
            revocation status, and issuer status against a trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.VerifyProofAsync(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Verifies a proof by checking the signature value, and if possible schema validation,
            revocation status, and issuer status against a trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.VerifyProofAsync(Trinsic.Services.VerifiableCredentials.V1.VerifyProofRequest,Grpc.Core.CallOptions)">
            <summary>
            Verifies a proof by checking the signature value, and if possible schema validation,
            revocation status, and issuer status against a trust registry
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.Send(Trinsic.Services.VerifiableCredentials.V1.SendRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sends a document directly to a user's email within the given ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.Send(Trinsic.Services.VerifiableCredentials.V1.SendRequest,Grpc.Core.CallOptions)">
            <summary>
            Sends a document directly to a user's email within the given ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.SendAsync(Trinsic.Services.VerifiableCredentials.V1.SendRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sends a document directly to a user's email within the given ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.SendAsync(Trinsic.Services.VerifiableCredentials.V1.SendRequest,Grpc.Core.CallOptions)">
            <summary>
            Sends a document directly to a user's email within the given ecosystem
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.BindService(Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.BindService(Grpc.Core.ServiceBinderBase,Trinsic.Services.VerifiableCredentials.V1.VerifiableCredential.VerifiableCredentialBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Trinsic.ProviderService.InviteParticipantAsync(Trinsic.Services.Provider.V1.InviteRequest)">
            <summary>
                Initiates the participant onboarding flow using the input contact method
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.InviteParticipant(Trinsic.Services.Provider.V1.InviteRequest)">
            <summary>
            Invite a user to the ecosystem
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.InvitationStatusAsync(Trinsic.Services.Provider.V1.InvitationStatusRequest)">
            <summary>
                Gets the status of the onboarding invitation for a given invitation ID
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.InvitationStatus(Trinsic.Services.Provider.V1.InvitationStatusRequest)">
            <summary>
            Gets the status of the onboarding invitation for a given invitation ID
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Trinsic.ProviderService.CreateEcosystemAsync(Trinsic.Services.Provider.V1.CreateEcosystemRequest)">
            <summary>
            Create new ecosystem and assigns the authenticated user as owner
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.CreateEcosystem(Trinsic.Services.Provider.V1.CreateEcosystemRequest)">
            <summary>
            Create new ecosystem and assigns the authenticated user as owner
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.GenerateTokenAsync(Trinsic.Services.Provider.V1.GenerateTokenRequest)">
            <summary>
            Generates an unprotected authentication token that can be used
            to configure server side applications
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ProviderService.GenerateToken(Trinsic.Services.Provider.V1.GenerateTokenRequest)">
            <summary>
            Generates an unprotected authentication token that can be used
            to configure server side applications
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.OberonSecurityProvider.Base64UrlEncode(System.Byte[])">
            <summary>
            Encoded a byte array to base64url string without padding
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="P:Trinsic.ServiceBase.Channel">
            <summary>
            Gets the gRPC channel used by this service. This channel can be reused
            by passing this instance to other service constructors.
            </summary>
        </member>
        <member name="M:Trinsic.ServiceBase.BuildMetadataAsync(Google.Protobuf.IMessage)">
            <summary>
            Create call metadata by setting the required authentication headers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.ServiceBase.BuildMetadata(Google.Protobuf.IMessage)">
            <summary>
            Create call metadata by setting the required authentication headers
            </summary>
            <returns></returns>
        </member>
        <member name="T:Trinsic.TemplateService">
            <summary>
            Template Service for managing credential schemas
            </summary>
        </member>
        <member name="M:Trinsic.TemplateService.CreateAsync(Trinsic.Services.VerifiableCredentials.Templates.V1.CreateCredentialTemplateRequest)">
            <summary>
            Create new credential template with the given parameters
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.TemplateService.GetAsync(Trinsic.Services.VerifiableCredentials.Templates.V1.GetCredentialTemplateRequest)">
            <summary>
            Returns the template object for the given identifier
            </summary>
            <param name="request">The request object</param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.TemplateService.ListAsync(Trinsic.Services.VerifiableCredentials.Templates.V1.ListCredentialTemplatesRequest)">
            <summary>
            List the available templates for the given ecosystem.
            Results can be customized using a SQL query.
            </summary>
            <remarks>
            This endpoint returns strongly typed result set. If your query uses projections,
            use the <see cref="M:Trinsic.TemplateService.SearchAsync(Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest)"/> method instead and parse the result JSON as needed.
            </remarks>
            <param name="request">The request object</param>
            <returns>
            The search response and continuation token, if available
            </returns>
        </member>
        <member name="M:Trinsic.TemplateService.SearchAsync(Trinsic.Services.VerifiableCredentials.Templates.V1.SearchCredentialTemplatesRequest)">
            <summary>
            Search the registry for any data in the given ecosystem.
            Results can be customized using a SQL query.
            </summary>
            <remarks>
            This endpoint returns raw JSON results where the format can be customized using
            SELECT SQL projections and object composition.
            </remarks>
            <param name="request">The request object</param>
            <returns>
            The search response and continuation token, if available
            </returns>
        </member>
        <member name="M:Trinsic.TrustRegistryService.AddFrameworkAsync(Trinsic.Services.TrustRegistry.V1.AddFrameworkRequest)">
            <summary>
            Register a Governance Framework with the Trust Registry.
            </summary>
            <remarks>
            Calling this multiple times with the same URI will update the previously registered framework.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Trinsic.TrustRegistryService.RegisterMemberAsync(Trinsic.Services.TrustRegistry.V1.RegisterMemberRequest)">
            <summary>
            Register a DID as authoritative member with the configured governance framework.
            </summary>
            <param name="request">The request object</param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.TrustRegistryService.GetMembershipStatusAsync(Trinsic.Services.TrustRegistry.V1.GetMembershipStatusRequest)">
            <summary>
            Checks the status of the issuer for a given credential type in the given governance framework
            </summary>
            <param name="request">The request object</param>
        </member>
        <member name="M:Trinsic.TrustRegistryService.SearchRegistryAsync(Trinsic.Services.TrustRegistry.V1.SearchRegistryRequest)">
            <summary>
            Search the trust registry
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trinsic.WalletService.SearchAsync(Trinsic.Services.UniversalWallet.V1.SearchRequest)">
            <summary>
                Search the wallet for records matching the specified criteria
            </summary>
            <remarks>
                See https://docs.microsoft.com/en-us/azure/cosmos-db/sql-query-select
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Trinsic.WalletService.Search(Trinsic.Services.UniversalWallet.V1.SearchRequest)">
            <summary>
                Search the wallet for records matching the specified criteria
            </summary>
            <remarks>
                See https://docs.microsoft.com/en-us/azure/cosmos-db/sql-query-select
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Trinsic.WalletService.InsertItemAsync(Trinsic.Services.UniversalWallet.V1.InsertItemRequest)">
            <summary>
                Insert an item into the personal wallet
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Trinsic.WalletService.InsertItem(Trinsic.Services.UniversalWallet.V1.InsertItemRequest)">
            <summary>
                Insert an item into the personal wallet
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Trinsic.Sdk.Options.V1.OptionsReflection">
            <summary>Holder for reflection information generated from sdk/options/v1/options.proto</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.OptionsReflection.Descriptor">
            <summary>File descriptor for sdk/options/v1/options.proto</summary>
        </member>
        <member name="T:Trinsic.Sdk.Options.V1.ServiceOptions">
            <summary>
            Configuration for Trinsic SDK Services
            </summary>
        </member>
        <member name="F:Trinsic.Sdk.Options.V1.ServiceOptions.ServerEndpointFieldNumber">
            <summary>Field number for the "server_endpoint" field.</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.ServiceOptions.ServerEndpoint">
            <summary>
            Trinsic API endpoint; defaults to `prod.trinsic.cloud`
            </summary>
        </member>
        <member name="F:Trinsic.Sdk.Options.V1.ServiceOptions.ServerPortFieldNumber">
            <summary>Field number for the "server_port" field.</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.ServiceOptions.ServerPort">
            <summary>
            Trinsic API port; defaults to `443`
            </summary>
        </member>
        <member name="F:Trinsic.Sdk.Options.V1.ServiceOptions.ServerUseTlsFieldNumber">
            <summary>Field number for the "server_use_tls" field.</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.ServiceOptions.ServerUseTls">
            <summary>
            Whether TLS is enabled between SDK and Trinsic API; defaults to `true`
            </summary>
        </member>
        <member name="F:Trinsic.Sdk.Options.V1.ServiceOptions.AuthTokenFieldNumber">
            <summary>Field number for the "auth_token" field.</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.ServiceOptions.AuthToken">
            <summary>
            Authentication token for SDK calls; defaults to empty string (unauthenticated)
            </summary>
        </member>
        <member name="F:Trinsic.Sdk.Options.V1.ServiceOptions.DefaultEcosystemFieldNumber">
            <summary>Field number for the "default_ecosystem" field.</summary>
        </member>
        <member name="P:Trinsic.Sdk.Options.V1.ServiceOptions.DefaultEcosystem">
            <summary>
            Default ecosystem ID to use for various SDK calls; defaults to `default`
            </summary>
        </member>
        <member name="M:Google.Protobuf.ProtoMessageExtensions.As``1(Google.Protobuf.IMessage)">
            <summary>
            Converts a message from one type into another. The two types must be compatible
            and generated from the same .proto file, but may have different namespaces.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddTrinsic(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Trinsic.Sdk.Options.V1.ServiceOptions})">
            <summary>
            Registers Trinsic SDK services and dependencies
            </summary>
            <param name="services"></param>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddTrinsic(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers Trinsic SDK services and dependencies
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
