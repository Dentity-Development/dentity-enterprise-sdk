{
  "index": {
    "sdk.options.v1.ServiceOptions": {
      "type": "message",
      "collection": "messages",
      "file": "sdk/options/v1/options.proto",
      "parent": ""
    },
    "sdk.options.v1.ServiceOptions.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.ServiceOptions"
    },
    "sdk.options.v1.ServiceOptions.default_ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.ServiceOptions"
    },
    "sdk.options.v1.ServiceOptions.server_endpoint": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.ServiceOptions"
    },
    "sdk.options.v1.ServiceOptions.server_port": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.ServiceOptions"
    },
    "sdk.options.v1.ServiceOptions.server_use_tls": {
      "type": "field",
      "collection": "fields",
      "file": "sdk/options/v1/options.proto",
      "parent": "sdk.options.v1.ServiceOptions"
    },
    "services.account.v1.Account": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.AuthorizeWebhook": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.Info": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.ListDevices": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.Login": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.LoginConfirm": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.RevokeDevice": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.Account.SignIn": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountDetails": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountDetails.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountDetails.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountDetails.sms": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountDetails"
    },
    "services.account.v1.AccountEcosystem": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountEcosystem.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountEcosystem"
    },
    "services.account.v1.AccountEcosystem.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountEcosystem"
    },
    "services.account.v1.AccountEcosystem.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountEcosystem"
    },
    "services.account.v1.AccountEcosystem.uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountEcosystem"
    },
    "services.account.v1.AccountInfoRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountInfoResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountInfoResponse.authorized_webhooks": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.details": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.device_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.ecosystems": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.public_did": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountInfoResponse.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountInfoResponse"
    },
    "services.account.v1.AccountProfile": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AccountProfile.auth_data": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.auth_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.profile_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AccountProfile.protection": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AccountProfile"
    },
    "services.account.v1.AuthorizeWebhookRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.AuthorizeWebhookRequest.events": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.AuthorizeWebhookRequest"
    },
    "services.account.v1.AuthorizeWebhookResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.ConfirmationMethod": {
      "type": "enum",
      "collection": "enums",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.ConfirmationMethod.ConnectedDevice": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Email": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.None": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Other": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ConfirmationMethod.Sms": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.ConfirmationMethod"
    },
    "services.account.v1.ListDevicesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.ListDevicesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.LoginConfirmRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.LoginConfirmRequest.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginConfirmRequest"
    },
    "services.account.v1.LoginConfirmRequest.confirmation_code_hashed": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginConfirmRequest"
    },
    "services.account.v1.LoginConfirmResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.LoginConfirmResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginConfirmResponse"
    },
    "services.account.v1.LoginRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.LoginRequest.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginRequest"
    },
    "services.account.v1.LoginRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginRequest"
    },
    "services.account.v1.LoginRequest.invitation_code": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginRequest"
    },
    "services.account.v1.LoginResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.LoginResponse.challenge": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginResponse"
    },
    "services.account.v1.LoginResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.LoginResponse"
    },
    "services.account.v1.RevokeDeviceRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.RevokeDeviceResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.SignInRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.SignInRequest.details": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.SignInRequest"
    },
    "services.account.v1.SignInRequest.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.SignInRequest"
    },
    "services.account.v1.SignInRequest.invitation_code": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.SignInRequest"
    },
    "services.account.v1.SignInResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.SignInResponse.confirmation_method": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.SignInResponse"
    },
    "services.account.v1.SignInResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.SignInResponse"
    },
    "services.account.v1.TokenProtection": {
      "type": "message",
      "collection": "messages",
      "file": "services/account/v1/account.proto",
      "parent": ""
    },
    "services.account.v1.TokenProtection.enabled": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.TokenProtection"
    },
    "services.account.v1.TokenProtection.method": {
      "type": "field",
      "collection": "fields",
      "file": "services/account/v1/account.proto",
      "parent": "services.account.v1.TokenProtection"
    },
    "services.common.v1.Nonce": {
      "type": "message",
      "collection": "messages",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.Nonce.request_hash": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.Nonce"
    },
    "services.common.v1.Nonce.timestamp": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.Nonce"
    },
    "services.common.v1.ResponseStatus": {
      "type": "enum",
      "collection": "enums",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.ResponseStatus.ITEM_NOT_FOUND": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.SERIALIZATION_ERROR": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.SUCCESS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.UNKNOWN_ERROR": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ResponseStatus.WALLET_EXISTS": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ResponseStatus"
    },
    "services.common.v1.ServerConfig": {
      "type": "message",
      "collection": "messages",
      "file": "services/common/v1/common.proto",
      "parent": ""
    },
    "services.common.v1.ServerConfig.endpoint": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ServerConfig"
    },
    "services.common.v1.ServerConfig.port": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ServerConfig"
    },
    "services.common.v1.ServerConfig.use_tls": {
      "type": "field",
      "collection": "fields",
      "file": "services/common/v1/common.proto",
      "parent": "services.common.v1.ServerConfig"
    },
    "services.debug.v1.Debugging": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/debug/v1/debug.proto",
      "parent": ""
    },
    "services.debug.v1.Debugging.CallEmpty": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/debug/v1/debug.proto",
      "parent": ""
    },
    "services.debug.v1.Debugging.CallEmptyAuth": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/debug/v1/debug.proto",
      "parent": ""
    },
    "services.provider.v1.AddWebhookRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.AddWebhookRequest.destination_url": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.AddWebhookRequest"
    },
    "services.provider.v1.AddWebhookRequest.events": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.AddWebhookRequest"
    },
    "services.provider.v1.AddWebhookRequest.secret": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.AddWebhookRequest"
    },
    "services.provider.v1.AddWebhookResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.AddWebhookResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.AddWebhookResponse"
    },
    "services.provider.v1.CreateEcosystemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.CreateEcosystemRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.details": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemRequest.uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemRequest"
    },
    "services.provider.v1.CreateEcosystemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.CreateEcosystemResponse.confirmation_method": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.CreateEcosystemResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.CreateEcosystemResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.CreateEcosystemResponse"
    },
    "services.provider.v1.DeleteWebhookRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.DeleteWebhookRequest.webhook_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.DeleteWebhookRequest"
    },
    "services.provider.v1.DeleteWebhookResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.DeleteWebhookResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.DeleteWebhookResponse"
    },
    "services.provider.v1.Ecosystem": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Ecosystem.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.Ecosystem.webhooks": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Ecosystem"
    },
    "services.provider.v1.EcosystemInfoRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.EcosystemInfoResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.EcosystemInfoResponse.ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.EcosystemInfoResponse"
    },
    "services.provider.v1.GenerateTokenRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GenerateTokenRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GenerateTokenRequest"
    },
    "services.provider.v1.GenerateTokenResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GenerateTokenResponse.profile": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GenerateTokenResponse"
    },
    "services.provider.v1.GetAuthorizationsRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetAuthorizationsResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetAuthorizationsResponse.grants": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GetAuthorizationsResponse"
    },
    "services.provider.v1.GetEventTokenRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetEventTokenRequest.pk": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GetEventTokenRequest"
    },
    "services.provider.v1.GetEventTokenResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetEventTokenResponse.token": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GetEventTokenResponse"
    },
    "services.provider.v1.GetOberonKeyRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetOberonKeyResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GetOberonKeyResponse.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GetOberonKeyResponse"
    },
    "services.provider.v1.Grant": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Grant.actions": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Grant"
    },
    "services.provider.v1.Grant.child_grants": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Grant"
    },
    "services.provider.v1.Grant.resourceId": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Grant"
    },
    "services.provider.v1.GrantAuthorizationRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.GrantAuthorizationRequest.action": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GrantAuthorizationRequest"
    },
    "services.provider.v1.GrantAuthorizationRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GrantAuthorizationRequest"
    },
    "services.provider.v1.GrantAuthorizationRequest.resource": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GrantAuthorizationRequest"
    },
    "services.provider.v1.GrantAuthorizationRequest.walletId": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.GrantAuthorizationRequest"
    },
    "services.provider.v1.GrantAuthorizationResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.InvitationStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.InvitationStatusRequest.invitation_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusRequest"
    },
    "services.provider.v1.InvitationStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.InvitationStatusResponse.Status": {
      "type": "enum",
      "collection": "enums",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse"
    },
    "services.provider.v1.InvitationStatusResponse.Status.Completed": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse.Status"
    },
    "services.provider.v1.InvitationStatusResponse.Status.Error": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse.Status"
    },
    "services.provider.v1.InvitationStatusResponse.Status.Expired": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse.Status"
    },
    "services.provider.v1.InvitationStatusResponse.Status.InvitationSent": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse.Status"
    },
    "services.provider.v1.InvitationStatusResponse.status": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse"
    },
    "services.provider.v1.InvitationStatusResponse.status_details": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InvitationStatusResponse"
    },
    "services.provider.v1.Invite": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Invite.accepted": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Invite"
    },
    "services.provider.v1.Invite.code": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Invite"
    },
    "services.provider.v1.Invite.created": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Invite"
    },
    "services.provider.v1.Invite.expires": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Invite"
    },
    "services.provider.v1.Invite.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.Invite"
    },
    "services.provider.v1.InviteRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.InviteRequest.DidCommInvitation": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteRequest"
    },
    "services.provider.v1.InviteRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteRequest"
    },
    "services.provider.v1.InviteRequest.details": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteRequest"
    },
    "services.provider.v1.InviteRequest.participant": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteRequest"
    },
    "services.provider.v1.InviteResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.InviteResponse.invitation_code": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteResponse"
    },
    "services.provider.v1.InviteResponse.invitation_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.InviteResponse"
    },
    "services.provider.v1.ParticipantType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.ParticipantType.participant_type_individual": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.ParticipantType"
    },
    "services.provider.v1.ParticipantType.participant_type_organization": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.ParticipantType"
    },
    "services.provider.v1.Provider": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.AddWebhook": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.CreateEcosystem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.DeleteWebhook": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.EcosystemInfo": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GenerateToken": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GetAuthorizations": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GetEventToken": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GetOberonKey": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.GrantAuthorization": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.InvitationStatus": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.Invite": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.RevokeAuthorization": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.Provider.UpdateEcosystem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.RevokeAuthorizationRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.RevokeAuthorizationRequest.action": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.RevokeAuthorizationRequest"
    },
    "services.provider.v1.RevokeAuthorizationRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.RevokeAuthorizationRequest"
    },
    "services.provider.v1.RevokeAuthorizationRequest.resource": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.RevokeAuthorizationRequest"
    },
    "services.provider.v1.RevokeAuthorizationRequest.walletId": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.RevokeAuthorizationRequest"
    },
    "services.provider.v1.RevokeAuthorizationResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.UpdateEcosystemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.UpdateEcosystemRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpdateEcosystemRequest"
    },
    "services.provider.v1.UpdateEcosystemRequest.uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpdateEcosystemRequest"
    },
    "services.provider.v1.UpdateEcosystemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.UpdateEcosystemResponse.Ecosystem": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.UpdateEcosystemResponse"
    },
    "services.provider.v1.WebhookConfig": {
      "type": "message",
      "collection": "messages",
      "file": "services/provider/v1/provider.proto",
      "parent": ""
    },
    "services.provider.v1.WebhookConfig.destination_url": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WebhookConfig"
    },
    "services.provider.v1.WebhookConfig.events": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WebhookConfig"
    },
    "services.provider.v1.WebhookConfig.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WebhookConfig"
    },
    "services.provider.v1.WebhookConfig.status": {
      "type": "field",
      "collection": "fields",
      "file": "services/provider/v1/provider.proto",
      "parent": "services.provider.v1.WebhookConfig"
    },
    "services.trustregistry.v1.AddFrameworkRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.AddFrameworkRequest.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkRequest"
    },
    "services.trustregistry.v1.AddFrameworkRequest.governance_framework_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkRequest"
    },
    "services.trustregistry.v1.AddFrameworkRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkRequest"
    },
    "services.trustregistry.v1.AddFrameworkResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.AddFrameworkResponse.governing_authority": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkResponse"
    },
    "services.trustregistry.v1.AddFrameworkResponse.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkResponse"
    },
    "services.trustregistry.v1.AddFrameworkResponse.trust_registry": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.AddFrameworkResponse"
    },
    "services.trustregistry.v1.FetchDataRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.FetchDataRequest.governance_framework_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.FetchDataRequest"
    },
    "services.trustregistry.v1.FetchDataRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.FetchDataRequest"
    },
    "services.trustregistry.v1.FetchDataResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.FetchDataResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.FetchDataResponse"
    },
    "services.trustregistry.v1.FetchDataResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.FetchDataResponse"
    },
    "services.trustregistry.v1.FetchDataResponse.response_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.FetchDataResponse"
    },
    "services.trustregistry.v1.GetMembershipStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMembershipStatusRequest"
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.governance_framework_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMembershipStatusRequest"
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMembershipStatusRequest"
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.x509_cert": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMembershipStatusRequest"
    },
    "services.trustregistry.v1.GetMembershipStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GetMembershipStatusResponse.status": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GetMembershipStatusResponse"
    },
    "services.trustregistry.v1.GovernanceFramework": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.GovernanceFramework.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GovernanceFramework"
    },
    "services.trustregistry.v1.GovernanceFramework.governance_framework_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GovernanceFramework"
    },
    "services.trustregistry.v1.GovernanceFramework.trust_registry_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.GovernanceFramework"
    },
    "services.trustregistry.v1.RegisterMemberRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.framework_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegisterMemberRequest"
    },
    "services.trustregistry.v1.RegisterMemberResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegistrationStatus": {
      "type": "enum",
      "collection": "enums",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RegistrationStatus.CURRENT": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.EXPIRED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.NOT_FOUND": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.REVOKED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RegistrationStatus.TERMINATED": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RegistrationStatus"
    },
    "services.trustregistry.v1.RemoveFrameworkRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.RemoveFrameworkRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.RemoveFrameworkRequest"
    },
    "services.trustregistry.v1.RemoveFrameworkResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.SearchRegistryRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.SearchRegistryRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.SearchRegistryRequest"
    },
    "services.trustregistry.v1.SearchRegistryRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.SearchRegistryRequest"
    },
    "services.trustregistry.v1.SearchRegistryResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.SearchRegistryResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.SearchRegistryResponse"
    },
    "services.trustregistry.v1.SearchRegistryResponse.has_more": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.SearchRegistryResponse"
    },
    "services.trustregistry.v1.SearchRegistryResponse.items_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.SearchRegistryResponse"
    },
    "services.trustregistry.v1.TrustRegistry": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.AddFramework": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.FetchData": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.GetMembershipStatus": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.RegisterMember": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.RemoveFramework": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.SearchRegistry": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.TrustRegistry.UnregisterMember": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.framework_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberRequest.wallet_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": "services.trustregistry.v1.UnregisterMemberRequest"
    },
    "services.trustregistry.v1.UnregisterMemberResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/trust-registry/v1/trust-registry.proto",
      "parent": ""
    },
    "services.universalwallet.v1.DeleteItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.DeleteItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.DeleteItemRequest"
    },
    "services.universalwallet.v1.DeleteItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemRequest"
    },
    "services.universalwallet.v1.GetItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.GetItemResponse.item_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemResponse"
    },
    "services.universalwallet.v1.GetItemResponse.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.GetItemResponse"
    },
    "services.universalwallet.v1.InsertItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.InsertItemRequest.item_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemRequest"
    },
    "services.universalwallet.v1.InsertItemRequest.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemRequest"
    },
    "services.universalwallet.v1.InsertItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.InsertItemResponse.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.InsertItemResponse"
    },
    "services.universalwallet.v1.SearchRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.SearchRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchRequest"
    },
    "services.universalwallet.v1.SearchRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchRequest"
    },
    "services.universalwallet.v1.SearchResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.SearchResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.SearchResponse.has_more": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.SearchResponse.items": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.SearchResponse"
    },
    "services.universalwallet.v1.UniversalWallet": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.DeleteItem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.GetItem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.InsertItem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.Search": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UniversalWallet.UpdateItem": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UpdateItemRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.universalwallet.v1.UpdateItemRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.UpdateItemRequest"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_type": {
      "type": "field",
      "collection": "fields",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": "services.universalwallet.v1.UpdateItemRequest"
    },
    "services.universalwallet.v1.UpdateItemResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/universal-wallet/v1/universal-wallet.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Create": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Get": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.List": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Search": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.FieldType": {
      "type": "enum",
      "collection": "enums",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.FieldType.BOOL": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.DATETIME": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.NUMBER": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.FieldType.STRING": {
      "type": "enum_value",
      "collection": "enum_values",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.FieldType"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.GetTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetTemplateRequest.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetTemplateRequest"
    },
    "services.verifiablecredentials.templates.v1.GetTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.GetTemplateResponse.data": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.GetTemplateResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesResponse.templates": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.ListTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse"
    },
    "services.verifiablecredentials.templates.v1.TemplateData": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.context_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.created_by": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.fields": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.name": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.schema_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.version": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateData"
    },
    "services.verifiablecredentials.templates.v1.TemplateField": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateField.description": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.optional": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.type": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/templates/v1/templates.proto",
      "parent": "services.verifiablecredentials.templates.v1.TemplateField"
    },
    "services.verifiablecredentials.v1.CheckStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CheckStatusRequest"
    },
    "services.verifiablecredentials.v1.CheckStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CheckStatusResponse.revoked": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CheckStatusResponse"
    },
    "services.verifiablecredentials.v1.CreateProofRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateProofRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.item_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofRequest"
    },
    "services.verifiablecredentials.v1.CreateProofResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.CreateProofResponse"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.framework_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateRequest"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueFromTemplateResponse"
    },
    "services.verifiablecredentials.v1.IssueRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueRequest"
    },
    "services.verifiablecredentials.v1.IssueResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.IssueResponse.signed_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.IssueResponse"
    },
    "services.verifiablecredentials.v1.SendRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.SendRequest.did_uri": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.didcomm_invitation_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendRequest.email": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.SendRequest"
    },
    "services.verifiablecredentials.v1.SendResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.UpdateStatusRequest"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.revoked": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.UpdateStatusRequest"
    },
    "services.verifiablecredentials.v1.UpdateStatusResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.ValidationMessage": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.ValidationMessage.is_valid": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.ValidationMessage"
    },
    "services.verifiablecredentials.v1.ValidationMessage.messages": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.ValidationMessage"
    },
    "services.verifiablecredentials.v1.VerifiableCredential": {
      "type": "serviceProto",
      "collection": "services",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateProof": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Issue": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Send": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof": {
      "type": "methodProto",
      "collection": "methods",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofRequest": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofRequest"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry": {
      "type": "message",
      "collection": "messages",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.is_valid": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_messages": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_results": {
      "type": "field",
      "collection": "fields",
      "file": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "parent": "services.verifiablecredentials.v1.VerifyProofResponse"
    }
  },
  "files": {
    "sdk/options/v1/options.proto": {
      "name": "sdk/options/v1/options.proto",
      "package": "sdk.options.v1",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "sdk.options.v1.ServiceOptions"
      ],
      "fields": [
        "sdk.options.v1.ServiceOptions.server_endpoint",
        "sdk.options.v1.ServiceOptions.server_port",
        "sdk.options.v1.ServiceOptions.server_use_tls",
        "sdk.options.v1.ServiceOptions.auth_token",
        "sdk.options.v1.ServiceOptions.default_ecosystem"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/account/v1/account.proto": {
      "name": "services/account/v1/account.proto",
      "package": "services.account.v1",
      "description": "",
      "services": [
        "services.account.v1.Account"
      ],
      "methods": [
        "services.account.v1.Account.SignIn",
        "services.account.v1.Account.Login",
        "services.account.v1.Account.LoginConfirm",
        "services.account.v1.Account.Info",
        "services.account.v1.Account.ListDevices",
        "services.account.v1.Account.RevokeDevice",
        "services.account.v1.Account.AuthorizeWebhook"
      ],
      "messages": [
        "services.account.v1.SignInRequest",
        "services.account.v1.AccountDetails",
        "services.account.v1.SignInResponse",
        "services.account.v1.AccountProfile",
        "services.account.v1.TokenProtection",
        "services.account.v1.AccountInfoRequest",
        "services.account.v1.AccountInfoResponse",
        "services.account.v1.ListDevicesRequest",
        "services.account.v1.ListDevicesResponse",
        "services.account.v1.RevokeDeviceRequest",
        "services.account.v1.RevokeDeviceResponse",
        "services.account.v1.AccountEcosystem",
        "services.account.v1.LoginRequest",
        "services.account.v1.LoginResponse",
        "services.account.v1.LoginConfirmRequest",
        "services.account.v1.LoginConfirmResponse",
        "services.account.v1.AuthorizeWebhookRequest",
        "services.account.v1.AuthorizeWebhookResponse"
      ],
      "fields": [
        "services.account.v1.SignInRequest.details",
        "services.account.v1.SignInRequest.invitation_code",
        "services.account.v1.SignInRequest.ecosystem_id",
        "services.account.v1.AccountDetails.name",
        "services.account.v1.AccountDetails.email",
        "services.account.v1.AccountDetails.sms",
        "services.account.v1.SignInResponse.confirmation_method",
        "services.account.v1.SignInResponse.profile",
        "services.account.v1.AccountProfile.profile_type",
        "services.account.v1.AccountProfile.auth_data",
        "services.account.v1.AccountProfile.auth_token",
        "services.account.v1.AccountProfile.protection",
        "services.account.v1.TokenProtection.enabled",
        "services.account.v1.TokenProtection.method",
        "services.account.v1.AccountInfoResponse.details",
        "services.account.v1.AccountInfoResponse.ecosystems",
        "services.account.v1.AccountInfoResponse.wallet_id",
        "services.account.v1.AccountInfoResponse.device_id",
        "services.account.v1.AccountInfoResponse.ecosystem_id",
        "services.account.v1.AccountInfoResponse.public_did",
        "services.account.v1.AccountInfoResponse.authorized_webhooks",
        "services.account.v1.AccountEcosystem.id",
        "services.account.v1.AccountEcosystem.name",
        "services.account.v1.AccountEcosystem.description",
        "services.account.v1.AccountEcosystem.uri",
        "services.account.v1.LoginRequest.email",
        "services.account.v1.LoginRequest.invitation_code",
        "services.account.v1.LoginRequest.ecosystem_id",
        "services.account.v1.LoginResponse.challenge",
        "services.account.v1.LoginResponse.profile",
        "services.account.v1.LoginConfirmRequest.challenge",
        "services.account.v1.LoginConfirmRequest.confirmation_code_hashed",
        "services.account.v1.LoginConfirmResponse.profile",
        "services.account.v1.AuthorizeWebhookRequest.events"
      ],
      "enums": [
        "services.account.v1.ConfirmationMethod"
      ],
      "enum_values": [
        "services.account.v1.ConfirmationMethod.None",
        "services.account.v1.ConfirmationMethod.Email",
        "services.account.v1.ConfirmationMethod.Sms",
        "services.account.v1.ConfirmationMethod.ConnectedDevice",
        "services.account.v1.ConfirmationMethod.Other"
      ]
    },
    "services/common/v1/common.proto": {
      "name": "services/common/v1/common.proto",
      "package": "services.common.v1",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [
        "services.common.v1.ServerConfig",
        "services.common.v1.Nonce"
      ],
      "fields": [
        "services.common.v1.ServerConfig.endpoint",
        "services.common.v1.ServerConfig.port",
        "services.common.v1.ServerConfig.use_tls",
        "services.common.v1.Nonce.timestamp",
        "services.common.v1.Nonce.request_hash"
      ],
      "enums": [
        "services.common.v1.ResponseStatus"
      ],
      "enum_values": [
        "services.common.v1.ResponseStatus.SUCCESS",
        "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
        "services.common.v1.ResponseStatus.WALLET_EXISTS",
        "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
        "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
        "services.common.v1.ResponseStatus.UNKNOWN_ERROR"
      ]
    },
    "services/debug/v1/debug.proto": {
      "name": "services/debug/v1/debug.proto",
      "package": "services.debug.v1",
      "description": "",
      "services": [
        "services.debug.v1.Debugging"
      ],
      "methods": [
        "services.debug.v1.Debugging.CallEmpty",
        "services.debug.v1.Debugging.CallEmptyAuth"
      ],
      "messages": [],
      "fields": [],
      "enums": [],
      "enum_values": []
    },
    "services/options/field-options.proto": {
      "name": "services/options/field-options.proto",
      "package": "services.options",
      "description": "",
      "services": [],
      "methods": [],
      "messages": [],
      "fields": [],
      "enums": [],
      "enum_values": []
    },
    "services/provider/v1/provider.proto": {
      "name": "services/provider/v1/provider.proto",
      "package": "services.provider.v1",
      "description": "",
      "services": [
        "services.provider.v1.Provider"
      ],
      "methods": [
        "services.provider.v1.Provider.CreateEcosystem",
        "services.provider.v1.Provider.UpdateEcosystem",
        "services.provider.v1.Provider.GrantAuthorization",
        "services.provider.v1.Provider.RevokeAuthorization",
        "services.provider.v1.Provider.GetAuthorizations",
        "services.provider.v1.Provider.AddWebhook",
        "services.provider.v1.Provider.DeleteWebhook",
        "services.provider.v1.Provider.EcosystemInfo",
        "services.provider.v1.Provider.GenerateToken",
        "services.provider.v1.Provider.Invite",
        "services.provider.v1.Provider.InvitationStatus",
        "services.provider.v1.Provider.GetOberonKey",
        "services.provider.v1.Provider.GetEventToken"
      ],
      "messages": [
        "services.provider.v1.Invite",
        "services.provider.v1.InviteRequest",
        "services.provider.v1.InviteRequest.DidCommInvitation",
        "services.provider.v1.InviteResponse",
        "services.provider.v1.InvitationStatusRequest",
        "services.provider.v1.InvitationStatusResponse",
        "services.provider.v1.Ecosystem",
        "services.provider.v1.WebhookConfig",
        "services.provider.v1.Grant",
        "services.provider.v1.CreateEcosystemRequest",
        "services.provider.v1.CreateEcosystemResponse",
        "services.provider.v1.UpdateEcosystemRequest",
        "services.provider.v1.UpdateEcosystemResponse",
        "services.provider.v1.AddWebhookRequest",
        "services.provider.v1.AddWebhookResponse",
        "services.provider.v1.DeleteWebhookRequest",
        "services.provider.v1.DeleteWebhookResponse",
        "services.provider.v1.EcosystemInfoRequest",
        "services.provider.v1.EcosystemInfoResponse",
        "services.provider.v1.GenerateTokenRequest",
        "services.provider.v1.GenerateTokenResponse",
        "services.provider.v1.GetOberonKeyRequest",
        "services.provider.v1.GetOberonKeyResponse",
        "services.provider.v1.GetEventTokenRequest",
        "services.provider.v1.GetEventTokenResponse",
        "services.provider.v1.GrantAuthorizationRequest",
        "services.provider.v1.GrantAuthorizationResponse",
        "services.provider.v1.RevokeAuthorizationRequest",
        "services.provider.v1.RevokeAuthorizationResponse",
        "services.provider.v1.GetAuthorizationsRequest",
        "services.provider.v1.GetAuthorizationsResponse"
      ],
      "fields": [
        "services.provider.v1.Invite.id",
        "services.provider.v1.Invite.code",
        "services.provider.v1.Invite.created",
        "services.provider.v1.Invite.accepted",
        "services.provider.v1.Invite.expires",
        "services.provider.v1.InviteRequest.participant",
        "services.provider.v1.InviteRequest.description",
        "services.provider.v1.InviteRequest.details",
        "services.provider.v1.InviteResponse.invitation_id",
        "services.provider.v1.InviteResponse.invitation_code",
        "services.provider.v1.InvitationStatusRequest.invitation_id",
        "services.provider.v1.InvitationStatusResponse.status",
        "services.provider.v1.InvitationStatusResponse.status_details",
        "services.provider.v1.Ecosystem.id",
        "services.provider.v1.Ecosystem.name",
        "services.provider.v1.Ecosystem.description",
        "services.provider.v1.Ecosystem.uri",
        "services.provider.v1.Ecosystem.webhooks",
        "services.provider.v1.WebhookConfig.id",
        "services.provider.v1.WebhookConfig.destination_url",
        "services.provider.v1.WebhookConfig.events",
        "services.provider.v1.WebhookConfig.status",
        "services.provider.v1.Grant.resourceId",
        "services.provider.v1.Grant.actions",
        "services.provider.v1.Grant.child_grants",
        "services.provider.v1.CreateEcosystemRequest.name",
        "services.provider.v1.CreateEcosystemRequest.description",
        "services.provider.v1.CreateEcosystemRequest.uri",
        "services.provider.v1.CreateEcosystemRequest.details",
        "services.provider.v1.CreateEcosystemResponse.ecosystem",
        "services.provider.v1.CreateEcosystemResponse.profile",
        "services.provider.v1.CreateEcosystemResponse.confirmation_method",
        "services.provider.v1.UpdateEcosystemRequest.description",
        "services.provider.v1.UpdateEcosystemRequest.uri",
        "services.provider.v1.UpdateEcosystemResponse.Ecosystem",
        "services.provider.v1.AddWebhookRequest.destination_url",
        "services.provider.v1.AddWebhookRequest.secret",
        "services.provider.v1.AddWebhookRequest.events",
        "services.provider.v1.AddWebhookResponse.ecosystem",
        "services.provider.v1.DeleteWebhookRequest.webhook_id",
        "services.provider.v1.DeleteWebhookResponse.ecosystem",
        "services.provider.v1.EcosystemInfoResponse.ecosystem",
        "services.provider.v1.GenerateTokenRequest.description",
        "services.provider.v1.GenerateTokenResponse.profile",
        "services.provider.v1.GetOberonKeyResponse.key",
        "services.provider.v1.GetEventTokenRequest.pk",
        "services.provider.v1.GetEventTokenResponse.token",
        "services.provider.v1.GrantAuthorizationRequest.email",
        "services.provider.v1.GrantAuthorizationRequest.walletId",
        "services.provider.v1.GrantAuthorizationRequest.resource",
        "services.provider.v1.GrantAuthorizationRequest.action",
        "services.provider.v1.RevokeAuthorizationRequest.email",
        "services.provider.v1.RevokeAuthorizationRequest.walletId",
        "services.provider.v1.RevokeAuthorizationRequest.resource",
        "services.provider.v1.RevokeAuthorizationRequest.action",
        "services.provider.v1.GetAuthorizationsResponse.grants"
      ],
      "enums": [
        "services.provider.v1.InvitationStatusResponse.Status",
        "services.provider.v1.ParticipantType"
      ],
      "enum_values": [
        "services.provider.v1.InvitationStatusResponse.Status.Error",
        "services.provider.v1.InvitationStatusResponse.Status.InvitationSent",
        "services.provider.v1.InvitationStatusResponse.Status.Completed",
        "services.provider.v1.InvitationStatusResponse.Status.Expired",
        "services.provider.v1.ParticipantType.participant_type_individual",
        "services.provider.v1.ParticipantType.participant_type_organization"
      ]
    },
    "services/trust-registry/v1/trust-registry.proto": {
      "name": "services/trust-registry/v1/trust-registry.proto",
      "package": "services.trustregistry.v1",
      "description": "",
      "services": [
        "services.trustregistry.v1.TrustRegistry"
      ],
      "methods": [
        "services.trustregistry.v1.TrustRegistry.AddFramework",
        "services.trustregistry.v1.TrustRegistry.RemoveFramework",
        "services.trustregistry.v1.TrustRegistry.SearchRegistry",
        "services.trustregistry.v1.TrustRegistry.RegisterMember",
        "services.trustregistry.v1.TrustRegistry.UnregisterMember",
        "services.trustregistry.v1.TrustRegistry.GetMembershipStatus",
        "services.trustregistry.v1.TrustRegistry.FetchData"
      ],
      "messages": [
        "services.trustregistry.v1.AddFrameworkRequest",
        "services.trustregistry.v1.AddFrameworkResponse",
        "services.trustregistry.v1.RemoveFrameworkRequest",
        "services.trustregistry.v1.RemoveFrameworkResponse",
        "services.trustregistry.v1.SearchRegistryRequest",
        "services.trustregistry.v1.SearchRegistryResponse",
        "services.trustregistry.v1.GovernanceFramework",
        "services.trustregistry.v1.RegisterMemberRequest",
        "services.trustregistry.v1.RegisterMemberResponse",
        "services.trustregistry.v1.UnregisterMemberRequest",
        "services.trustregistry.v1.UnregisterMemberResponse",
        "services.trustregistry.v1.GetMembershipStatusRequest",
        "services.trustregistry.v1.GetMembershipStatusResponse",
        "services.trustregistry.v1.FetchDataRequest",
        "services.trustregistry.v1.FetchDataResponse"
      ],
      "fields": [
        "services.trustregistry.v1.AddFrameworkRequest.governance_framework_uri",
        "services.trustregistry.v1.AddFrameworkRequest.name",
        "services.trustregistry.v1.AddFrameworkRequest.description",
        "services.trustregistry.v1.AddFrameworkResponse.id",
        "services.trustregistry.v1.AddFrameworkResponse.governing_authority",
        "services.trustregistry.v1.AddFrameworkResponse.trust_registry",
        "services.trustregistry.v1.RemoveFrameworkRequest.id",
        "services.trustregistry.v1.SearchRegistryRequest.query",
        "services.trustregistry.v1.SearchRegistryRequest.continuation_token",
        "services.trustregistry.v1.SearchRegistryResponse.items_json",
        "services.trustregistry.v1.SearchRegistryResponse.has_more",
        "services.trustregistry.v1.SearchRegistryResponse.continuation_token",
        "services.trustregistry.v1.GovernanceFramework.governance_framework_uri",
        "services.trustregistry.v1.GovernanceFramework.trust_registry_uri",
        "services.trustregistry.v1.GovernanceFramework.description",
        "services.trustregistry.v1.RegisterMemberRequest.did_uri",
        "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
        "services.trustregistry.v1.RegisterMemberRequest.email",
        "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
        "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
        "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc",
        "services.trustregistry.v1.RegisterMemberRequest.framework_id",
        "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
        "services.trustregistry.v1.UnregisterMemberRequest.email",
        "services.trustregistry.v1.UnregisterMemberRequest.schema_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.framework_id",
        "services.trustregistry.v1.GetMembershipStatusRequest.governance_framework_uri",
        "services.trustregistry.v1.GetMembershipStatusRequest.did_uri",
        "services.trustregistry.v1.GetMembershipStatusRequest.x509_cert",
        "services.trustregistry.v1.GetMembershipStatusRequest.schema_uri",
        "services.trustregistry.v1.GetMembershipStatusResponse.status",
        "services.trustregistry.v1.FetchDataRequest.governance_framework_uri",
        "services.trustregistry.v1.FetchDataRequest.query",
        "services.trustregistry.v1.FetchDataResponse.response_json",
        "services.trustregistry.v1.FetchDataResponse.has_more_results",
        "services.trustregistry.v1.FetchDataResponse.continuation_token"
      ],
      "enums": [
        "services.trustregistry.v1.RegistrationStatus"
      ],
      "enum_values": [
        "services.trustregistry.v1.RegistrationStatus.CURRENT",
        "services.trustregistry.v1.RegistrationStatus.EXPIRED",
        "services.trustregistry.v1.RegistrationStatus.TERMINATED",
        "services.trustregistry.v1.RegistrationStatus.REVOKED",
        "services.trustregistry.v1.RegistrationStatus.NOT_FOUND"
      ]
    },
    "services/universal-wallet/v1/universal-wallet.proto": {
      "name": "services/universal-wallet/v1/universal-wallet.proto",
      "package": "services.universalwallet.v1",
      "description": "",
      "services": [
        "services.universalwallet.v1.UniversalWallet"
      ],
      "methods": [
        "services.universalwallet.v1.UniversalWallet.GetItem",
        "services.universalwallet.v1.UniversalWallet.Search",
        "services.universalwallet.v1.UniversalWallet.InsertItem",
        "services.universalwallet.v1.UniversalWallet.UpdateItem",
        "services.universalwallet.v1.UniversalWallet.DeleteItem"
      ],
      "messages": [
        "services.universalwallet.v1.SearchRequest",
        "services.universalwallet.v1.SearchResponse",
        "services.universalwallet.v1.GetItemRequest",
        "services.universalwallet.v1.GetItemResponse",
        "services.universalwallet.v1.UpdateItemRequest",
        "services.universalwallet.v1.UpdateItemResponse",
        "services.universalwallet.v1.InsertItemRequest",
        "services.universalwallet.v1.InsertItemResponse",
        "services.universalwallet.v1.DeleteItemRequest",
        "services.universalwallet.v1.DeleteItemResponse"
      ],
      "fields": [
        "services.universalwallet.v1.SearchRequest.query",
        "services.universalwallet.v1.SearchRequest.continuation_token",
        "services.universalwallet.v1.SearchResponse.items",
        "services.universalwallet.v1.SearchResponse.has_more",
        "services.universalwallet.v1.SearchResponse.continuation_token",
        "services.universalwallet.v1.GetItemRequest.item_id",
        "services.universalwallet.v1.GetItemResponse.item_json",
        "services.universalwallet.v1.GetItemResponse.item_type",
        "services.universalwallet.v1.UpdateItemRequest.item_id",
        "services.universalwallet.v1.UpdateItemRequest.item_type",
        "services.universalwallet.v1.InsertItemRequest.item_json",
        "services.universalwallet.v1.InsertItemRequest.item_type",
        "services.universalwallet.v1.InsertItemResponse.item_id",
        "services.universalwallet.v1.DeleteItemRequest.item_id"
      ],
      "enums": [],
      "enum_values": []
    },
    "services/verifiable-credentials/templates/v1/templates.proto": {
      "name": "services/verifiable-credentials/templates/v1/templates.proto",
      "package": "services.verifiablecredentials.templates.v1",
      "description": "",
      "services": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates"
      ],
      "methods": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
        "services.verifiablecredentials.templates.v1.TemplateField",
        "services.verifiablecredentials.templates.v1.GetTemplateRequest",
        "services.verifiablecredentials.templates.v1.GetTemplateResponse",
        "services.verifiablecredentials.templates.v1.ListTemplatesRequest",
        "services.verifiablecredentials.templates.v1.ListTemplatesResponse",
        "services.verifiablecredentials.templates.v1.TemplateData",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
      ],
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token",
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data",
        "services.verifiablecredentials.templates.v1.TemplateField.description",
        "services.verifiablecredentials.templates.v1.TemplateField.optional",
        "services.verifiablecredentials.templates.v1.TemplateField.type",
        "services.verifiablecredentials.templates.v1.GetTemplateRequest.id",
        "services.verifiablecredentials.templates.v1.GetTemplateResponse.data",
        "services.verifiablecredentials.templates.v1.ListTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.TemplateData.id",
        "services.verifiablecredentials.templates.v1.TemplateData.name",
        "services.verifiablecredentials.templates.v1.TemplateData.version",
        "services.verifiablecredentials.templates.v1.TemplateData.fields",
        "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.context_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.TemplateData.type",
        "services.verifiablecredentials.templates.v1.TemplateData.created_by",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value"
      ],
      "enums": [
        "services.verifiablecredentials.templates.v1.FieldType"
      ],
      "enum_values": [
        "services.verifiablecredentials.templates.v1.FieldType.STRING",
        "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
        "services.verifiablecredentials.templates.v1.FieldType.BOOL",
        "services.verifiablecredentials.templates.v1.FieldType.DATETIME"
      ]
    },
    "services/verifiable-credentials/v1/verifiable-credentials.proto": {
      "name": "services/verifiable-credentials/v1/verifiable-credentials.proto",
      "package": "services.verifiablecredentials.v1",
      "description": "",
      "services": [
        "services.verifiablecredentials.v1.VerifiableCredential"
      ],
      "methods": [
        "services.verifiablecredentials.v1.VerifiableCredential.Issue",
        "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
        "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
        "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
        "services.verifiablecredentials.v1.VerifiableCredential.Send"
      ],
      "messages": [
        "services.verifiablecredentials.v1.IssueRequest",
        "services.verifiablecredentials.v1.IssueResponse",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest",
        "services.verifiablecredentials.v1.IssueFromTemplateResponse",
        "services.verifiablecredentials.v1.CreateProofRequest",
        "services.verifiablecredentials.v1.CreateProofResponse",
        "services.verifiablecredentials.v1.VerifyProofRequest",
        "services.verifiablecredentials.v1.VerifyProofResponse",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
        "services.verifiablecredentials.v1.ValidationMessage",
        "services.verifiablecredentials.v1.SendRequest",
        "services.verifiablecredentials.v1.SendResponse",
        "services.verifiablecredentials.v1.UpdateStatusRequest",
        "services.verifiablecredentials.v1.UpdateStatusResponse",
        "services.verifiablecredentials.v1.CheckStatusRequest",
        "services.verifiablecredentials.v1.CheckStatusResponse"
      ],
      "fields": [
        "services.verifiablecredentials.v1.IssueRequest.document_json",
        "services.verifiablecredentials.v1.IssueResponse.signed_document_json",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.framework_id",
        "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.item_id",
        "services.verifiablecredentials.v1.CreateProofRequest.document_json",
        "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json",
        "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json",
        "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_messages",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_results",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value",
        "services.verifiablecredentials.v1.ValidationMessage.is_valid",
        "services.verifiablecredentials.v1.ValidationMessage.messages",
        "services.verifiablecredentials.v1.SendRequest.email",
        "services.verifiablecredentials.v1.SendRequest.did_uri",
        "services.verifiablecredentials.v1.SendRequest.didcomm_invitation_json",
        "services.verifiablecredentials.v1.SendRequest.document_json",
        "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.UpdateStatusRequest.revoked",
        "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.CheckStatusResponse.revoked"
      ],
      "enums": [],
      "enum_values": []
    }
  },
  "services": {
    "services.account.v1.Account": {
      "name": "Account",
      "full_name": "services.account.v1.Account",
      "description": "",
      "methods": [
        "services.account.v1.Account.SignIn",
        "services.account.v1.Account.Login",
        "services.account.v1.Account.LoginConfirm",
        "services.account.v1.Account.Info",
        "services.account.v1.Account.ListDevices",
        "services.account.v1.Account.RevokeDevice",
        "services.account.v1.Account.AuthorizeWebhook"
      ]
    },
    "services.debug.v1.Debugging": {
      "name": "Debugging",
      "full_name": "services.debug.v1.Debugging",
      "description": "",
      "methods": [
        "services.debug.v1.Debugging.CallEmpty",
        "services.debug.v1.Debugging.CallEmptyAuth"
      ]
    },
    "services.provider.v1.Provider": {
      "name": "Provider",
      "full_name": "services.provider.v1.Provider",
      "description": "",
      "methods": [
        "services.provider.v1.Provider.CreateEcosystem",
        "services.provider.v1.Provider.UpdateEcosystem",
        "services.provider.v1.Provider.GrantAuthorization",
        "services.provider.v1.Provider.RevokeAuthorization",
        "services.provider.v1.Provider.GetAuthorizations",
        "services.provider.v1.Provider.AddWebhook",
        "services.provider.v1.Provider.DeleteWebhook",
        "services.provider.v1.Provider.EcosystemInfo",
        "services.provider.v1.Provider.GenerateToken",
        "services.provider.v1.Provider.Invite",
        "services.provider.v1.Provider.InvitationStatus",
        "services.provider.v1.Provider.GetOberonKey",
        "services.provider.v1.Provider.GetEventToken"
      ]
    },
    "services.trustregistry.v1.TrustRegistry": {
      "name": "TrustRegistry",
      "full_name": "services.trustregistry.v1.TrustRegistry",
      "description": "",
      "methods": [
        "services.trustregistry.v1.TrustRegistry.AddFramework",
        "services.trustregistry.v1.TrustRegistry.RemoveFramework",
        "services.trustregistry.v1.TrustRegistry.SearchRegistry",
        "services.trustregistry.v1.TrustRegistry.RegisterMember",
        "services.trustregistry.v1.TrustRegistry.UnregisterMember",
        "services.trustregistry.v1.TrustRegistry.GetMembershipStatus",
        "services.trustregistry.v1.TrustRegistry.FetchData"
      ]
    },
    "services.universalwallet.v1.UniversalWallet": {
      "name": "UniversalWallet",
      "full_name": "services.universalwallet.v1.UniversalWallet",
      "description": "",
      "methods": [
        "services.universalwallet.v1.UniversalWallet.GetItem",
        "services.universalwallet.v1.UniversalWallet.Search",
        "services.universalwallet.v1.UniversalWallet.InsertItem",
        "services.universalwallet.v1.UniversalWallet.UpdateItem",
        "services.universalwallet.v1.UniversalWallet.DeleteItem"
      ]
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates": {
      "name": "CredentialTemplates",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates",
      "description": "",
      "methods": [
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
        "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete"
      ]
    },
    "services.verifiablecredentials.v1.VerifiableCredential": {
      "name": "VerifiableCredential",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential",
      "description": "",
      "methods": [
        "services.verifiablecredentials.v1.VerifiableCredential.Issue",
        "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
        "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
        "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
        "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
        "services.verifiablecredentials.v1.VerifiableCredential.Send"
      ]
    }
  },
  "methods": {
    "services.account.v1.Account.AuthorizeWebhook": {
      "name": "AuthorizeWebhook",
      "full_name": "services.account.v1.Account.AuthorizeWebhook",
      "input_type": "services.account.v1.AuthorizeWebhookRequest",
      "output_type": "services.account.v1.AuthorizeWebhookResponse",
      "description": "Authorize Ecosystem to receive webhook events"
    },
    "services.account.v1.Account.Info": {
      "name": "Info",
      "full_name": "services.account.v1.Account.Info",
      "input_type": "services.account.v1.AccountInfoRequest",
      "output_type": "services.account.v1.AccountInfoResponse",
      "description": "Get account information"
    },
    "services.account.v1.Account.ListDevices": {
      "name": "ListDevices",
      "full_name": "services.account.v1.Account.ListDevices",
      "input_type": "services.account.v1.ListDevicesRequest",
      "output_type": "services.account.v1.ListDevicesResponse",
      "description": "List all connected devices"
    },
    "services.account.v1.Account.Login": {
      "name": "Login",
      "full_name": "services.account.v1.Account.Login",
      "input_type": "services.account.v1.LoginRequest",
      "output_type": "services.account.v1.LoginResponse",
      "description": "Login to account. If account doesn't exist, new will be created"
    },
    "services.account.v1.Account.LoginConfirm": {
      "name": "LoginConfirm",
      "full_name": "services.account.v1.Account.LoginConfirm",
      "input_type": "services.account.v1.LoginConfirmRequest",
      "output_type": "services.account.v1.LoginConfirmResponse",
      "description": "Confirm login step by responding to the challenge request"
    },
    "services.account.v1.Account.RevokeDevice": {
      "name": "RevokeDevice",
      "full_name": "services.account.v1.Account.RevokeDevice",
      "input_type": "services.account.v1.RevokeDeviceRequest",
      "output_type": "services.account.v1.RevokeDeviceResponse",
      "description": "Revoke device access to the account's cloud wallet"
    },
    "services.account.v1.Account.SignIn": {
      "name": "SignIn",
      "full_name": "services.account.v1.Account.SignIn",
      "input_type": "services.account.v1.SignInRequest",
      "output_type": "services.account.v1.SignInResponse",
      "description": "Sign in to an already existing account"
    },
    "services.debug.v1.Debugging.CallEmpty": {
      "name": "CallEmpty",
      "full_name": "services.debug.v1.Debugging.CallEmpty",
      "input_type": "google.protobuf.Empty",
      "output_type": "google.protobuf.Empty",
      "description": ""
    },
    "services.debug.v1.Debugging.CallEmptyAuth": {
      "name": "CallEmptyAuth",
      "full_name": "services.debug.v1.Debugging.CallEmptyAuth",
      "input_type": "google.protobuf.Empty",
      "output_type": "google.protobuf.Empty",
      "description": ""
    },
    "services.provider.v1.Provider.AddWebhook": {
      "name": "AddWebhook",
      "full_name": "services.provider.v1.Provider.AddWebhook",
      "input_type": "services.provider.v1.AddWebhookRequest",
      "output_type": "services.provider.v1.AddWebhookResponse",
      "description": "Add a webhook endpoint to the ecosystem"
    },
    "services.provider.v1.Provider.CreateEcosystem": {
      "name": "CreateEcosystem",
      "full_name": "services.provider.v1.Provider.CreateEcosystem",
      "input_type": "services.provider.v1.CreateEcosystemRequest",
      "output_type": "services.provider.v1.CreateEcosystemResponse",
      "description": "Create new ecosystem and assign the authenticated user as owner"
    },
    "services.provider.v1.Provider.DeleteWebhook": {
      "name": "DeleteWebhook",
      "full_name": "services.provider.v1.Provider.DeleteWebhook",
      "input_type": "services.provider.v1.DeleteWebhookRequest",
      "output_type": "services.provider.v1.DeleteWebhookResponse",
      "description": "Delete a webhook endpoint from the ecosystem"
    },
    "services.provider.v1.Provider.EcosystemInfo": {
      "name": "EcosystemInfo",
      "full_name": "services.provider.v1.Provider.EcosystemInfo",
      "input_type": "services.provider.v1.EcosystemInfoRequest",
      "output_type": "services.provider.v1.EcosystemInfoResponse",
      "description": "Get ecosystem information"
    },
    "services.provider.v1.Provider.GenerateToken": {
      "name": "GenerateToken",
      "full_name": "services.provider.v1.Provider.GenerateToken",
      "input_type": "services.provider.v1.GenerateTokenRequest",
      "output_type": "services.provider.v1.GenerateTokenResponse",
      "description": "Generates an unprotected authentication token that can be used to\nconfigure server side applications"
    },
    "services.provider.v1.Provider.GetAuthorizations": {
      "name": "GetAuthorizations",
      "full_name": "services.provider.v1.Provider.GetAuthorizations",
      "input_type": "services.provider.v1.GetAuthorizationsRequest",
      "output_type": "services.provider.v1.GetAuthorizationsResponse",
      "description": "Retreive the list of permissions for this particular account/ecosystem"
    },
    "services.provider.v1.Provider.GetEventToken": {
      "name": "GetEventToken",
      "full_name": "services.provider.v1.Provider.GetEventToken",
      "input_type": "services.provider.v1.GetEventTokenRequest",
      "output_type": "services.provider.v1.GetEventTokenResponse",
      "description": "Generate a signed token (JWT) that can be used to connect to the message bus"
    },
    "services.provider.v1.Provider.GetOberonKey": {
      "name": "GetOberonKey",
      "full_name": "services.provider.v1.Provider.GetOberonKey",
      "input_type": "services.provider.v1.GetOberonKeyRequest",
      "output_type": "services.provider.v1.GetOberonKeyResponse",
      "description": "Returns the public key being used to create/verify oberon tokens"
    },
    "services.provider.v1.Provider.GrantAuthorization": {
      "name": "GrantAuthorization",
      "full_name": "services.provider.v1.Provider.GrantAuthorization",
      "input_type": "services.provider.v1.GrantAuthorizationRequest",
      "output_type": "services.provider.v1.GrantAuthorizationResponse",
      "description": "Grant authorization to ecosystem resources"
    },
    "services.provider.v1.Provider.InvitationStatus": {
      "name": "InvitationStatus",
      "full_name": "services.provider.v1.Provider.InvitationStatus",
      "input_type": "services.provider.v1.InvitationStatusRequest",
      "output_type": "services.provider.v1.InvitationStatusResponse",
      "description": "Check the invitation status"
    },
    "services.provider.v1.Provider.Invite": {
      "name": "Invite",
      "full_name": "services.provider.v1.Provider.Invite",
      "input_type": "services.provider.v1.InviteRequest",
      "output_type": "services.provider.v1.InviteResponse",
      "description": "Invite a user to the ecosystem"
    },
    "services.provider.v1.Provider.RevokeAuthorization": {
      "name": "RevokeAuthorization",
      "full_name": "services.provider.v1.Provider.RevokeAuthorization",
      "input_type": "services.provider.v1.RevokeAuthorizationRequest",
      "output_type": "services.provider.v1.RevokeAuthorizationResponse",
      "description": "Revoke authorization to ecosystem resources"
    },
    "services.provider.v1.Provider.UpdateEcosystem": {
      "name": "UpdateEcosystem",
      "full_name": "services.provider.v1.Provider.UpdateEcosystem",
      "input_type": "services.provider.v1.UpdateEcosystemRequest",
      "output_type": "services.provider.v1.UpdateEcosystemResponse",
      "description": "Update an existing ecosystem"
    },
    "services.trustregistry.v1.TrustRegistry.AddFramework": {
      "name": "AddFramework",
      "full_name": "services.trustregistry.v1.TrustRegistry.AddFramework",
      "input_type": "services.trustregistry.v1.AddFrameworkRequest",
      "output_type": "services.trustregistry.v1.AddFrameworkResponse",
      "description": "Adds a trust registry defintion to the ecosystem"
    },
    "services.trustregistry.v1.TrustRegistry.FetchData": {
      "name": "FetchData",
      "full_name": "services.trustregistry.v1.TrustRegistry.FetchData",
      "input_type": "services.trustregistry.v1.FetchDataRequest",
      "output_type": "services.trustregistry.v1.FetchDataResponse",
      "description": ""
    },
    "services.trustregistry.v1.TrustRegistry.GetMembershipStatus": {
      "name": "GetMembershipStatus",
      "full_name": "services.trustregistry.v1.TrustRegistry.GetMembershipStatus",
      "input_type": "services.trustregistry.v1.GetMembershipStatusRequest",
      "output_type": "services.trustregistry.v1.GetMembershipStatusResponse",
      "description": ""
    },
    "services.trustregistry.v1.TrustRegistry.RegisterMember": {
      "name": "RegisterMember",
      "full_name": "services.trustregistry.v1.TrustRegistry.RegisterMember",
      "input_type": "services.trustregistry.v1.RegisterMemberRequest",
      "output_type": "services.trustregistry.v1.RegisterMemberResponse",
      "description": "Registers an authoritative issuer with a credential template"
    },
    "services.trustregistry.v1.TrustRegistry.RemoveFramework": {
      "name": "RemoveFramework",
      "full_name": "services.trustregistry.v1.TrustRegistry.RemoveFramework",
      "input_type": "services.trustregistry.v1.RemoveFrameworkRequest",
      "output_type": "services.trustregistry.v1.RemoveFrameworkResponse",
      "description": ""
    },
    "services.trustregistry.v1.TrustRegistry.SearchRegistry": {
      "name": "SearchRegistry",
      "full_name": "services.trustregistry.v1.TrustRegistry.SearchRegistry",
      "input_type": "services.trustregistry.v1.SearchRegistryRequest",
      "output_type": "services.trustregistry.v1.SearchRegistryResponse",
      "description": ""
    },
    "services.trustregistry.v1.TrustRegistry.UnregisterMember": {
      "name": "UnregisterMember",
      "full_name": "services.trustregistry.v1.TrustRegistry.UnregisterMember",
      "input_type": "services.trustregistry.v1.UnregisterMemberRequest",
      "output_type": "services.trustregistry.v1.UnregisterMemberResponse",
      "description": "Removes an authoritative issuer with a credential template from the trust registry"
    },
    "services.universalwallet.v1.UniversalWallet.DeleteItem": {
      "name": "DeleteItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.DeleteItem",
      "input_type": "services.universalwallet.v1.DeleteItemRequest",
      "output_type": "services.universalwallet.v1.DeleteItemResponse",
      "description": "Delete an item from the wallet permanently"
    },
    "services.universalwallet.v1.UniversalWallet.GetItem": {
      "name": "GetItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.GetItem",
      "input_type": "services.universalwallet.v1.GetItemRequest",
      "output_type": "services.universalwallet.v1.GetItemResponse",
      "description": "Retrieve an item from the wallet with a given item identifier"
    },
    "services.universalwallet.v1.UniversalWallet.InsertItem": {
      "name": "InsertItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.InsertItem",
      "input_type": "services.universalwallet.v1.InsertItemRequest",
      "output_type": "services.universalwallet.v1.InsertItemResponse",
      "description": "Insert an item into the wallet"
    },
    "services.universalwallet.v1.UniversalWallet.Search": {
      "name": "Search",
      "full_name": "services.universalwallet.v1.UniversalWallet.Search",
      "input_type": "services.universalwallet.v1.SearchRequest",
      "output_type": "services.universalwallet.v1.SearchResponse",
      "description": "Search the wallet using a SQL-like syntax"
    },
    "services.universalwallet.v1.UniversalWallet.UpdateItem": {
      "name": "UpdateItem",
      "full_name": "services.universalwallet.v1.UniversalWallet.UpdateItem",
      "input_type": "services.universalwallet.v1.UpdateItemRequest",
      "output_type": "services.universalwallet.v1.UpdateItemResponse",
      "description": "Update an item in the wallet"
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Create": {
      "name": "Create",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Create",
      "input_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete": {
      "name": "Delete",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Delete",
      "input_type": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Get": {
      "name": "Get",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Get",
      "input_type": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
      "output_type": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.List": {
      "name": "List",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.List",
      "input_type": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
      "output_type": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CredentialTemplates.Search": {
      "name": "Search",
      "full_name": "services.verifiablecredentials.templates.v1.CredentialTemplates.Search",
      "input_type": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
      "output_type": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
      "description": ""
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus": {
      "name": "CheckStatus",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.CheckStatus",
      "input_type": "services.verifiablecredentials.v1.CheckStatusRequest",
      "output_type": "services.verifiablecredentials.v1.CheckStatusResponse",
      "description": "Check credential status in the revocation registry"
    },
    "services.verifiablecredentials.v1.VerifiableCredential.CreateProof": {
      "name": "CreateProof",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.CreateProof",
      "input_type": "services.verifiablecredentials.v1.CreateProofRequest",
      "output_type": "services.verifiablecredentials.v1.CreateProofResponse",
      "description": "Create a proof from a signed document that is a valid\nverifiable credential and contains a signature from which a proof can be derived."
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Issue": {
      "name": "Issue",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.Issue",
      "input_type": "services.verifiablecredentials.v1.IssueRequest",
      "output_type": "services.verifiablecredentials.v1.IssueResponse",
      "description": "Sign and issue a verifiable credential from a submitted document.\nThe document must be a valid JSON-LD document."
    },
    "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate": {
      "name": "IssueFromTemplate",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.IssueFromTemplate",
      "input_type": "services.verifiablecredentials.v1.IssueFromTemplateRequest",
      "output_type": "services.verifiablecredentials.v1.IssueFromTemplateResponse",
      "description": "Sign and issue a verifiable credential from a pre-defined template.\nThis process will also add schema validation and \nrevocation registry entry in the credential."
    },
    "services.verifiablecredentials.v1.VerifiableCredential.Send": {
      "name": "Send",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.Send",
      "input_type": "services.verifiablecredentials.v1.SendRequest",
      "output_type": "services.verifiablecredentials.v1.SendResponse",
      "description": "Sends a document directly to a user's email within the given ecosystem"
    },
    "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus": {
      "name": "UpdateStatus",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.UpdateStatus",
      "input_type": "services.verifiablecredentials.v1.UpdateStatusRequest",
      "output_type": "services.verifiablecredentials.v1.UpdateStatusResponse",
      "description": "Update credential status by setting the revocation value"
    },
    "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof": {
      "name": "VerifyProof",
      "full_name": "services.verifiablecredentials.v1.VerifiableCredential.VerifyProof",
      "input_type": "services.verifiablecredentials.v1.VerifyProofRequest",
      "output_type": "services.verifiablecredentials.v1.VerifyProofResponse",
      "description": "Verifies a proof by checking the signature value, and if possible schema validation,\nrevocation status, and issuer status against a trust registry"
    }
  },
  "messages": {
    "sdk.options.v1.ServiceOptions": {
      "name": "ServiceOptions",
      "full_name": "sdk.options.v1.ServiceOptions",
      "description": "Configuration for Trinsic SDK Services",
      "fields": [
        "sdk.options.v1.ServiceOptions.server_endpoint",
        "sdk.options.v1.ServiceOptions.server_port",
        "sdk.options.v1.ServiceOptions.server_use_tls",
        "sdk.options.v1.ServiceOptions.auth_token",
        "sdk.options.v1.ServiceOptions.default_ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountDetails": {
      "name": "AccountDetails",
      "full_name": "services.account.v1.AccountDetails",
      "description": "Account registration details",
      "fields": [
        "services.account.v1.AccountDetails.name",
        "services.account.v1.AccountDetails.email",
        "services.account.v1.AccountDetails.sms"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountEcosystem": {
      "name": "AccountEcosystem",
      "full_name": "services.account.v1.AccountEcosystem",
      "description": "",
      "fields": [
        "services.account.v1.AccountEcosystem.id",
        "services.account.v1.AccountEcosystem.name",
        "services.account.v1.AccountEcosystem.description",
        "services.account.v1.AccountEcosystem.uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountInfoRequest": {
      "name": "AccountInfoRequest",
      "full_name": "services.account.v1.AccountInfoRequest",
      "description": "Request for information about the account used to make the request",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountInfoResponse": {
      "name": "AccountInfoResponse",
      "full_name": "services.account.v1.AccountInfoResponse",
      "description": "Information about the account used to make the request",
      "fields": [
        "services.account.v1.AccountInfoResponse.details",
        "services.account.v1.AccountInfoResponse.ecosystems",
        "services.account.v1.AccountInfoResponse.wallet_id",
        "services.account.v1.AccountInfoResponse.device_id",
        "services.account.v1.AccountInfoResponse.ecosystem_id",
        "services.account.v1.AccountInfoResponse.public_did",
        "services.account.v1.AccountInfoResponse.authorized_webhooks"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AccountProfile": {
      "name": "AccountProfile",
      "full_name": "services.account.v1.AccountProfile",
      "description": "Device profile containing sensitive authentication data.\nThis information should be stored securely",
      "fields": [
        "services.account.v1.AccountProfile.profile_type",
        "services.account.v1.AccountProfile.auth_data",
        "services.account.v1.AccountProfile.auth_token",
        "services.account.v1.AccountProfile.protection"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AuthorizeWebhookRequest": {
      "name": "AuthorizeWebhookRequest",
      "full_name": "services.account.v1.AuthorizeWebhookRequest",
      "description": "Authorize ecosystem to receive wallet events",
      "fields": [
        "services.account.v1.AuthorizeWebhookRequest.events"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.AuthorizeWebhookResponse": {
      "name": "AuthorizeWebhookResponse",
      "full_name": "services.account.v1.AuthorizeWebhookResponse",
      "description": "Response to `AuthorizeWebhookRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.ListDevicesRequest": {
      "name": "ListDevicesRequest",
      "full_name": "services.account.v1.ListDevicesRequest",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.ListDevicesResponse": {
      "name": "ListDevicesResponse",
      "full_name": "services.account.v1.ListDevicesResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.LoginConfirmRequest": {
      "name": "LoginConfirmRequest",
      "full_name": "services.account.v1.LoginConfirmRequest",
      "description": "",
      "fields": [
        "services.account.v1.LoginConfirmRequest.challenge",
        "services.account.v1.LoginConfirmRequest.confirmation_code_hashed"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.LoginConfirmResponse": {
      "name": "LoginConfirmResponse",
      "full_name": "services.account.v1.LoginConfirmResponse",
      "description": "",
      "fields": [
        "services.account.v1.LoginConfirmResponse.profile"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.LoginRequest": {
      "name": "LoginRequest",
      "full_name": "services.account.v1.LoginRequest",
      "description": "",
      "fields": [
        "services.account.v1.LoginRequest.email",
        "services.account.v1.LoginRequest.invitation_code",
        "services.account.v1.LoginRequest.ecosystem_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.LoginResponse": {
      "name": "LoginResponse",
      "full_name": "services.account.v1.LoginResponse",
      "description": "",
      "fields": [
        "services.account.v1.LoginResponse.challenge",
        "services.account.v1.LoginResponse.profile"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.RevokeDeviceRequest": {
      "name": "RevokeDeviceRequest",
      "full_name": "services.account.v1.RevokeDeviceRequest",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.RevokeDeviceResponse": {
      "name": "RevokeDeviceResponse",
      "full_name": "services.account.v1.RevokeDeviceResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.account.v1.SignInRequest": {
      "name": "SignInRequest",
      "full_name": "services.account.v1.SignInRequest",
      "description": "Request for creating or signing into an account",
      "fields": [
        "services.account.v1.SignInRequest.details",
        "services.account.v1.SignInRequest.invitation_code",
        "services.account.v1.SignInRequest.ecosystem_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.SignInResponse": {
      "name": "SignInResponse",
      "full_name": "services.account.v1.SignInResponse",
      "description": "Response for creating new account\nThis object will indicate if a confirmation code\nwas sent to one of the users two-factor methods\nlike email, SMS, etc.",
      "fields": [
        "services.account.v1.SignInResponse.confirmation_method",
        "services.account.v1.SignInResponse.profile"
      ],
      "messages": [],
      "enums": []
    },
    "services.account.v1.TokenProtection": {
      "name": "TokenProtection",
      "full_name": "services.account.v1.TokenProtection",
      "description": "Token protection info",
      "fields": [
        "services.account.v1.TokenProtection.enabled",
        "services.account.v1.TokenProtection.method"
      ],
      "messages": [],
      "enums": []
    },
    "services.common.v1.Nonce": {
      "name": "Nonce",
      "full_name": "services.common.v1.Nonce",
      "description": "Nonce used to generate an oberon proof",
      "fields": [
        "services.common.v1.Nonce.timestamp",
        "services.common.v1.Nonce.request_hash"
      ],
      "messages": [],
      "enums": []
    },
    "services.common.v1.ServerConfig": {
      "name": "ServerConfig",
      "full_name": "services.common.v1.ServerConfig",
      "description": "",
      "fields": [
        "services.common.v1.ServerConfig.endpoint",
        "services.common.v1.ServerConfig.port",
        "services.common.v1.ServerConfig.use_tls"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.AddWebhookRequest": {
      "name": "AddWebhookRequest",
      "full_name": "services.provider.v1.AddWebhookRequest",
      "description": "Request to add a webhook to an ecosystem",
      "fields": [
        "services.provider.v1.AddWebhookRequest.destination_url",
        "services.provider.v1.AddWebhookRequest.secret",
        "services.provider.v1.AddWebhookRequest.events"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.AddWebhookResponse": {
      "name": "AddWebhookResponse",
      "full_name": "services.provider.v1.AddWebhookResponse",
      "description": "Response to `AddWebhookRequest`",
      "fields": [
        "services.provider.v1.AddWebhookResponse.ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.CreateEcosystemRequest": {
      "name": "CreateEcosystemRequest",
      "full_name": "services.provider.v1.CreateEcosystemRequest",
      "description": "",
      "fields": [
        "services.provider.v1.CreateEcosystemRequest.name",
        "services.provider.v1.CreateEcosystemRequest.description",
        "services.provider.v1.CreateEcosystemRequest.uri",
        "services.provider.v1.CreateEcosystemRequest.details"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.CreateEcosystemResponse": {
      "name": "CreateEcosystemResponse",
      "full_name": "services.provider.v1.CreateEcosystemResponse",
      "description": "",
      "fields": [
        "services.provider.v1.CreateEcosystemResponse.ecosystem",
        "services.provider.v1.CreateEcosystemResponse.profile",
        "services.provider.v1.CreateEcosystemResponse.confirmation_method"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.DeleteWebhookRequest": {
      "name": "DeleteWebhookRequest",
      "full_name": "services.provider.v1.DeleteWebhookRequest",
      "description": "Request to delete a webhook from an ecosystem",
      "fields": [
        "services.provider.v1.DeleteWebhookRequest.webhook_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.DeleteWebhookResponse": {
      "name": "DeleteWebhookResponse",
      "full_name": "services.provider.v1.DeleteWebhookResponse",
      "description": "Response to `DeleteWebhookRequest`",
      "fields": [
        "services.provider.v1.DeleteWebhookResponse.ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.Ecosystem": {
      "name": "Ecosystem",
      "full_name": "services.provider.v1.Ecosystem",
      "description": "",
      "fields": [
        "services.provider.v1.Ecosystem.id",
        "services.provider.v1.Ecosystem.name",
        "services.provider.v1.Ecosystem.description",
        "services.provider.v1.Ecosystem.uri",
        "services.provider.v1.Ecosystem.webhooks"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.EcosystemInfoRequest": {
      "name": "EcosystemInfoRequest",
      "full_name": "services.provider.v1.EcosystemInfoRequest",
      "description": "Request to fetch information about an ecosystem",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.EcosystemInfoResponse": {
      "name": "EcosystemInfoResponse",
      "full_name": "services.provider.v1.EcosystemInfoResponse",
      "description": "Response to `InfoRequest`",
      "fields": [
        "services.provider.v1.EcosystemInfoResponse.ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GenerateTokenRequest": {
      "name": "GenerateTokenRequest",
      "full_name": "services.provider.v1.GenerateTokenRequest",
      "description": "",
      "fields": [
        "services.provider.v1.GenerateTokenRequest.description"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GenerateTokenResponse": {
      "name": "GenerateTokenResponse",
      "full_name": "services.provider.v1.GenerateTokenResponse",
      "description": "",
      "fields": [
        "services.provider.v1.GenerateTokenResponse.profile"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetAuthorizationsRequest": {
      "name": "GetAuthorizationsRequest",
      "full_name": "services.provider.v1.GetAuthorizationsRequest",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetAuthorizationsResponse": {
      "name": "GetAuthorizationsResponse",
      "full_name": "services.provider.v1.GetAuthorizationsResponse",
      "description": "",
      "fields": [
        "services.provider.v1.GetAuthorizationsResponse.grants"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetEventTokenRequest": {
      "name": "GetEventTokenRequest",
      "full_name": "services.provider.v1.GetEventTokenRequest",
      "description": "generates an events token bound to the provided ed25519 pk",
      "fields": [
        "services.provider.v1.GetEventTokenRequest.pk"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetEventTokenResponse": {
      "name": "GetEventTokenResponse",
      "full_name": "services.provider.v1.GetEventTokenResponse",
      "description": "response message containing a token (JWT) that can be used\nto connect directly to the message streaming architecture",
      "fields": [
        "services.provider.v1.GetEventTokenResponse.token"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetOberonKeyRequest": {
      "name": "GetOberonKeyRequest",
      "full_name": "services.provider.v1.GetOberonKeyRequest",
      "description": "request message for GetOberonKey",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GetOberonKeyResponse": {
      "name": "GetOberonKeyResponse",
      "full_name": "services.provider.v1.GetOberonKeyResponse",
      "description": "response message for GetOberonKey",
      "fields": [
        "services.provider.v1.GetOberonKeyResponse.key"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.Grant": {
      "name": "Grant",
      "full_name": "services.provider.v1.Grant",
      "description": "",
      "fields": [
        "services.provider.v1.Grant.resourceId",
        "services.provider.v1.Grant.actions",
        "services.provider.v1.Grant.child_grants"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GrantAuthorizationRequest": {
      "name": "GrantAuthorizationRequest",
      "full_name": "services.provider.v1.GrantAuthorizationRequest",
      "description": "grant permissions to a resource or path in the ecosystem",
      "fields": [
        "services.provider.v1.GrantAuthorizationRequest.email",
        "services.provider.v1.GrantAuthorizationRequest.walletId",
        "services.provider.v1.GrantAuthorizationRequest.resource",
        "services.provider.v1.GrantAuthorizationRequest.action"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.GrantAuthorizationResponse": {
      "name": "GrantAuthorizationResponse",
      "full_name": "services.provider.v1.GrantAuthorizationResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.InvitationStatusRequest": {
      "name": "InvitationStatusRequest",
      "full_name": "services.provider.v1.InvitationStatusRequest",
      "description": "Request details for the status of onboarding\nan individual or organization.\nThe reference_id passed is the response from the\n`Onboard` method call",
      "fields": [
        "services.provider.v1.InvitationStatusRequest.invitation_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.InvitationStatusResponse": {
      "name": "InvitationStatusResponse",
      "full_name": "services.provider.v1.InvitationStatusResponse",
      "description": "",
      "fields": [
        "services.provider.v1.InvitationStatusResponse.status",
        "services.provider.v1.InvitationStatusResponse.status_details"
      ],
      "messages": [],
      "enums": [
        "services.provider.v1.InvitationStatusResponse.Status"
      ]
    },
    "services.provider.v1.Invite": {
      "name": "Invite",
      "full_name": "services.provider.v1.Invite",
      "description": "",
      "fields": [
        "services.provider.v1.Invite.id",
        "services.provider.v1.Invite.code",
        "services.provider.v1.Invite.created",
        "services.provider.v1.Invite.accepted",
        "services.provider.v1.Invite.expires"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.InviteRequest": {
      "name": "InviteRequest",
      "full_name": "services.provider.v1.InviteRequest",
      "description": "",
      "fields": [
        "services.provider.v1.InviteRequest.participant",
        "services.provider.v1.InviteRequest.description",
        "services.provider.v1.InviteRequest.details"
      ],
      "messages": [
        "services.provider.v1.InviteRequest.DidCommInvitation"
      ],
      "enums": []
    },
    "services.provider.v1.InviteRequest.DidCommInvitation": {
      "name": "DidCommInvitation",
      "full_name": "services.provider.v1.InviteRequest.DidCommInvitation",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.InviteResponse": {
      "name": "InviteResponse",
      "full_name": "services.provider.v1.InviteResponse",
      "description": "",
      "fields": [
        "services.provider.v1.InviteResponse.invitation_id",
        "services.provider.v1.InviteResponse.invitation_code"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.RevokeAuthorizationRequest": {
      "name": "RevokeAuthorizationRequest",
      "full_name": "services.provider.v1.RevokeAuthorizationRequest",
      "description": "revoke permissions to a resource or path in the ecosystem",
      "fields": [
        "services.provider.v1.RevokeAuthorizationRequest.email",
        "services.provider.v1.RevokeAuthorizationRequest.walletId",
        "services.provider.v1.RevokeAuthorizationRequest.resource",
        "services.provider.v1.RevokeAuthorizationRequest.action"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.RevokeAuthorizationResponse": {
      "name": "RevokeAuthorizationResponse",
      "full_name": "services.provider.v1.RevokeAuthorizationResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.UpdateEcosystemRequest": {
      "name": "UpdateEcosystemRequest",
      "full_name": "services.provider.v1.UpdateEcosystemRequest",
      "description": "Request to update an ecosystem",
      "fields": [
        "services.provider.v1.UpdateEcosystemRequest.description",
        "services.provider.v1.UpdateEcosystemRequest.uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.UpdateEcosystemResponse": {
      "name": "UpdateEcosystemResponse",
      "full_name": "services.provider.v1.UpdateEcosystemResponse",
      "description": "Response to `UpdateEcosystemRequest`",
      "fields": [
        "services.provider.v1.UpdateEcosystemResponse.Ecosystem"
      ],
      "messages": [],
      "enums": []
    },
    "services.provider.v1.WebhookConfig": {
      "name": "WebhookConfig",
      "full_name": "services.provider.v1.WebhookConfig",
      "description": "",
      "fields": [
        "services.provider.v1.WebhookConfig.id",
        "services.provider.v1.WebhookConfig.destination_url",
        "services.provider.v1.WebhookConfig.events",
        "services.provider.v1.WebhookConfig.status"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.AddFrameworkRequest": {
      "name": "AddFrameworkRequest",
      "full_name": "services.trustregistry.v1.AddFrameworkRequest",
      "description": "Register new ecosystem governance framework",
      "fields": [
        "services.trustregistry.v1.AddFrameworkRequest.governance_framework_uri",
        "services.trustregistry.v1.AddFrameworkRequest.name",
        "services.trustregistry.v1.AddFrameworkRequest.description"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.AddFrameworkResponse": {
      "name": "AddFrameworkResponse",
      "full_name": "services.trustregistry.v1.AddFrameworkResponse",
      "description": "",
      "fields": [
        "services.trustregistry.v1.AddFrameworkResponse.id",
        "services.trustregistry.v1.AddFrameworkResponse.governing_authority",
        "services.trustregistry.v1.AddFrameworkResponse.trust_registry"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.FetchDataRequest": {
      "name": "FetchDataRequest",
      "full_name": "services.trustregistry.v1.FetchDataRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.FetchDataRequest.governance_framework_uri",
        "services.trustregistry.v1.FetchDataRequest.query"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.FetchDataResponse": {
      "name": "FetchDataResponse",
      "full_name": "services.trustregistry.v1.FetchDataResponse",
      "description": "",
      "fields": [
        "services.trustregistry.v1.FetchDataResponse.response_json",
        "services.trustregistry.v1.FetchDataResponse.has_more_results",
        "services.trustregistry.v1.FetchDataResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMembershipStatusRequest": {
      "name": "GetMembershipStatusRequest",
      "full_name": "services.trustregistry.v1.GetMembershipStatusRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.GetMembershipStatusRequest.governance_framework_uri",
        "services.trustregistry.v1.GetMembershipStatusRequest.did_uri",
        "services.trustregistry.v1.GetMembershipStatusRequest.x509_cert",
        "services.trustregistry.v1.GetMembershipStatusRequest.schema_uri"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GetMembershipStatusResponse": {
      "name": "GetMembershipStatusResponse",
      "full_name": "services.trustregistry.v1.GetMembershipStatusResponse",
      "description": "",
      "fields": [
        "services.trustregistry.v1.GetMembershipStatusResponse.status"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.GovernanceFramework": {
      "name": "GovernanceFramework",
      "full_name": "services.trustregistry.v1.GovernanceFramework",
      "description": "",
      "fields": [
        "services.trustregistry.v1.GovernanceFramework.governance_framework_uri",
        "services.trustregistry.v1.GovernanceFramework.trust_registry_uri",
        "services.trustregistry.v1.GovernanceFramework.description"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RegisterMemberRequest": {
      "name": "RegisterMemberRequest",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.RegisterMemberRequest.did_uri",
        "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
        "services.trustregistry.v1.RegisterMemberRequest.email",
        "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
        "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
        "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc",
        "services.trustregistry.v1.RegisterMemberRequest.framework_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RegisterMemberResponse": {
      "name": "RegisterMemberResponse",
      "full_name": "services.trustregistry.v1.RegisterMemberResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RemoveFrameworkRequest": {
      "name": "RemoveFrameworkRequest",
      "full_name": "services.trustregistry.v1.RemoveFrameworkRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.RemoveFrameworkRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.RemoveFrameworkResponse": {
      "name": "RemoveFrameworkResponse",
      "full_name": "services.trustregistry.v1.RemoveFrameworkResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.SearchRegistryRequest": {
      "name": "SearchRegistryRequest",
      "full_name": "services.trustregistry.v1.SearchRegistryRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.SearchRegistryRequest.query",
        "services.trustregistry.v1.SearchRegistryRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.SearchRegistryResponse": {
      "name": "SearchRegistryResponse",
      "full_name": "services.trustregistry.v1.SearchRegistryResponse",
      "description": "",
      "fields": [
        "services.trustregistry.v1.SearchRegistryResponse.items_json",
        "services.trustregistry.v1.SearchRegistryResponse.has_more",
        "services.trustregistry.v1.SearchRegistryResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.UnregisterMemberRequest": {
      "name": "UnregisterMemberRequest",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest",
      "description": "",
      "fields": [
        "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
        "services.trustregistry.v1.UnregisterMemberRequest.email",
        "services.trustregistry.v1.UnregisterMemberRequest.schema_uri",
        "services.trustregistry.v1.UnregisterMemberRequest.framework_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.trustregistry.v1.UnregisterMemberResponse": {
      "name": "UnregisterMemberResponse",
      "full_name": "services.trustregistry.v1.UnregisterMemberResponse",
      "description": "",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteItemRequest": {
      "name": "DeleteItemRequest",
      "full_name": "services.universalwallet.v1.DeleteItemRequest",
      "description": "Request to delete an item in a wallet",
      "fields": [
        "services.universalwallet.v1.DeleteItemRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.DeleteItemResponse": {
      "name": "DeleteItemResponse",
      "full_name": "services.universalwallet.v1.DeleteItemResponse",
      "description": "Response to `DeleteItemRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetItemRequest": {
      "name": "GetItemRequest",
      "full_name": "services.universalwallet.v1.GetItemRequest",
      "description": "Request to fetch an item from wallet",
      "fields": [
        "services.universalwallet.v1.GetItemRequest.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.GetItemResponse": {
      "name": "GetItemResponse",
      "full_name": "services.universalwallet.v1.GetItemResponse",
      "description": "Response to `GetItemRequest`",
      "fields": [
        "services.universalwallet.v1.GetItemResponse.item_json",
        "services.universalwallet.v1.GetItemResponse.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.InsertItemRequest": {
      "name": "InsertItemRequest",
      "full_name": "services.universalwallet.v1.InsertItemRequest",
      "description": "Request to insert a JSON document into a wallet",
      "fields": [
        "services.universalwallet.v1.InsertItemRequest.item_json",
        "services.universalwallet.v1.InsertItemRequest.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.InsertItemResponse": {
      "name": "InsertItemResponse",
      "full_name": "services.universalwallet.v1.InsertItemResponse",
      "description": "Response to `InsertItemRequest`",
      "fields": [
        "services.universalwallet.v1.InsertItemResponse.item_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.SearchRequest": {
      "name": "SearchRequest",
      "full_name": "services.universalwallet.v1.SearchRequest",
      "description": "Request to search items in wallet",
      "fields": [
        "services.universalwallet.v1.SearchRequest.query",
        "services.universalwallet.v1.SearchRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.SearchResponse": {
      "name": "SearchResponse",
      "full_name": "services.universalwallet.v1.SearchResponse",
      "description": "Response to `SearchRequest`",
      "fields": [
        "services.universalwallet.v1.SearchResponse.items",
        "services.universalwallet.v1.SearchResponse.has_more",
        "services.universalwallet.v1.SearchResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.UpdateItemRequest": {
      "name": "UpdateItemRequest",
      "full_name": "services.universalwallet.v1.UpdateItemRequest",
      "description": "Request to update item in wallet",
      "fields": [
        "services.universalwallet.v1.UpdateItemRequest.item_id",
        "services.universalwallet.v1.UpdateItemRequest.item_type"
      ],
      "messages": [],
      "enums": []
    },
    "services.universalwallet.v1.UpdateItemResponse": {
      "name": "UpdateItemResponse",
      "full_name": "services.universalwallet.v1.UpdateItemResponse",
      "description": "Response to `UpdateItemRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest": {
      "name": "CreateCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest",
      "description": "Request to create a new template",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse": {
      "name": "CreateCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse",
      "description": "Response to `CreateCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest": {
      "name": "DeleteCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest",
      "description": "Request to delete a template by ID",
      "fields": [
        "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse": {
      "name": "DeleteCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateResponse",
      "description": "Response to `DeleteCredentialTemplateRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest": {
      "name": "GetCredentialTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest",
      "description": "Request to fetch a template by ID",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse": {
      "name": "GetCredentialTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse",
      "description": "Response to `GetCredentialTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetTemplateRequest": {
      "name": "GetTemplateRequest",
      "full_name": "services.verifiablecredentials.templates.v1.GetTemplateRequest",
      "description": "Unused",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetTemplateRequest.id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.GetTemplateResponse": {
      "name": "GetTemplateResponse",
      "full_name": "services.verifiablecredentials.templates.v1.GetTemplateResponse",
      "description": "Unused",
      "fields": [
        "services.verifiablecredentials.templates.v1.GetTemplateResponse.data"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest": {
      "name": "ListCredentialTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest",
      "description": "Request to list templates using a SQL query",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse": {
      "name": "ListCredentialTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse",
      "description": "Response to `ListCredentialTemplatesRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
        "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesRequest": {
      "name": "ListTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.ListTemplatesRequest",
      "description": "Unused",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesResponse": {
      "name": "ListTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.ListTemplatesResponse",
      "description": "Unused",
      "fields": [
        "services.verifiablecredentials.templates.v1.ListTemplatesResponse.templates"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest": {
      "name": "SearchCredentialTemplatesRequest",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest",
      "description": "Request to search templates using a SQL query",
      "fields": [
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse": {
      "name": "SearchCredentialTemplatesResponse",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse",
      "description": "Response to `SearchCredentialTemplatesRequest`",
      "fields": [
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more",
        "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateData": {
      "name": "TemplateData",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Credential Template",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateData.id",
        "services.verifiablecredentials.templates.v1.TemplateData.name",
        "services.verifiablecredentials.templates.v1.TemplateData.version",
        "services.verifiablecredentials.templates.v1.TemplateData.fields",
        "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
        "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.context_uri",
        "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
        "services.verifiablecredentials.templates.v1.TemplateData.type",
        "services.verifiablecredentials.templates.v1.TemplateData.created_by"
      ],
      "messages": [
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry": {
      "name": "FieldsEntry",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
      "description": "",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
        "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.templates.v1.TemplateField": {
      "name": "TemplateField",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": "A field defined in a template",
      "fields": [
        "services.verifiablecredentials.templates.v1.TemplateField.description",
        "services.verifiablecredentials.templates.v1.TemplateField.optional",
        "services.verifiablecredentials.templates.v1.TemplateField.type"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CheckStatusRequest": {
      "name": "CheckStatusRequest",
      "full_name": "services.verifiablecredentials.v1.CheckStatusRequest",
      "description": "Request to check a credential's revocation status",
      "fields": [
        "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CheckStatusResponse": {
      "name": "CheckStatusResponse",
      "full_name": "services.verifiablecredentials.v1.CheckStatusResponse",
      "description": "Response to `CheckStatusRequest`",
      "fields": [
        "services.verifiablecredentials.v1.CheckStatusResponse.revoked"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateProofRequest": {
      "name": "CreateProofRequest",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest",
      "description": "Request to create a proof for a Verifiable Credential using public key tied to caller.\nEither `item_id` or `document_json` may be provided, not both.",
      "fields": [
        "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
        "services.verifiablecredentials.v1.CreateProofRequest.item_id",
        "services.verifiablecredentials.v1.CreateProofRequest.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.CreateProofResponse": {
      "name": "CreateProofResponse",
      "full_name": "services.verifiablecredentials.v1.CreateProofResponse",
      "description": "Response to `CreateProofRequest`",
      "fields": [
        "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest": {
      "name": "IssueFromTemplateRequest",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest",
      "description": "Request to create and sign a JSON-LD Verifiable Credential from a template using public key tied to caller",
      "fields": [
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
        "services.verifiablecredentials.v1.IssueFromTemplateRequest.framework_id"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse": {
      "name": "IssueFromTemplateResponse",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateResponse",
      "description": "Response to `IssueFromTemplateRequest`",
      "fields": [
        "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueRequest": {
      "name": "IssueRequest",
      "full_name": "services.verifiablecredentials.v1.IssueRequest",
      "description": "Request to sign a JSON-LD Credential using public key tied to caller",
      "fields": [
        "services.verifiablecredentials.v1.IssueRequest.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.IssueResponse": {
      "name": "IssueResponse",
      "full_name": "services.verifiablecredentials.v1.IssueResponse",
      "description": "Response to `IssueRequest`",
      "fields": [
        "services.verifiablecredentials.v1.IssueResponse.signed_document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.SendRequest": {
      "name": "SendRequest",
      "full_name": "services.verifiablecredentials.v1.SendRequest",
      "description": "Request to send a document to another user's wallet",
      "fields": [
        "services.verifiablecredentials.v1.SendRequest.email",
        "services.verifiablecredentials.v1.SendRequest.did_uri",
        "services.verifiablecredentials.v1.SendRequest.didcomm_invitation_json",
        "services.verifiablecredentials.v1.SendRequest.document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.SendResponse": {
      "name": "SendResponse",
      "full_name": "services.verifiablecredentials.v1.SendResponse",
      "description": "Response to `SendRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest": {
      "name": "UpdateStatusRequest",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest",
      "description": "Request to update a credential's revocation status",
      "fields": [
        "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
        "services.verifiablecredentials.v1.UpdateStatusRequest.revoked"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.UpdateStatusResponse": {
      "name": "UpdateStatusResponse",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusResponse",
      "description": "Response to `UpdateStatusRequest`",
      "fields": [],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.ValidationMessage": {
      "name": "ValidationMessage",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage",
      "description": "Result of a validation check on a proof",
      "fields": [
        "services.verifiablecredentials.v1.ValidationMessage.is_valid",
        "services.verifiablecredentials.v1.ValidationMessage.messages"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofRequest": {
      "name": "VerifyProofRequest",
      "full_name": "services.verifiablecredentials.v1.VerifyProofRequest",
      "description": "Request to verify a proof",
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json"
      ],
      "messages": [],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofResponse": {
      "name": "VerifyProofResponse",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse",
      "description": "Response to `VerifyProofRequest`",
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_messages",
        "services.verifiablecredentials.v1.VerifyProofResponse.validation_results"
      ],
      "messages": [
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry"
      ],
      "enums": []
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry": {
      "name": "ValidationResultsEntry",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
      "description": "",
      "fields": [
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
        "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value"
      ],
      "messages": [],
      "enums": []
    }
  },
  "fields": {
    "sdk.options.v1.ServiceOptions.auth_token": {
      "name": "auth_token",
      "full_name": "sdk.options.v1.ServiceOptions.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Authentication token for SDK calls; defaults to empty string (unauthenticated)"
    },
    "sdk.options.v1.ServiceOptions.default_ecosystem": {
      "name": "default_ecosystem",
      "full_name": "sdk.options.v1.ServiceOptions.default_ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Default ecosystem ID to use for various SDK calls; defaults to `default`"
    },
    "sdk.options.v1.ServiceOptions.server_endpoint": {
      "name": "server_endpoint",
      "full_name": "sdk.options.v1.ServiceOptions.server_endpoint",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Trinsic API endpoint. Defaults to `prod.trinsic.cloud`"
    },
    "sdk.options.v1.ServiceOptions.server_port": {
      "name": "server_port",
      "full_name": "sdk.options.v1.ServiceOptions.server_port",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Trinsic API port; defaults to `443`"
    },
    "sdk.options.v1.ServiceOptions.server_use_tls": {
      "name": "server_use_tls",
      "full_name": "sdk.options.v1.ServiceOptions.server_use_tls",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether TLS is enabled between SDK and Trinsic API; defaults to `true`"
    },
    "services.account.v1.AccountDetails.email": {
      "name": "email",
      "full_name": "services.account.v1.AccountDetails.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email account"
    },
    "services.account.v1.AccountDetails.name": {
      "name": "name",
      "full_name": "services.account.v1.AccountDetails.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Account name",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.AccountDetails.sms": {
      "name": "sms",
      "full_name": "services.account.v1.AccountDetails.sms",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SMS number including country code",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.AccountEcosystem.description": {
      "name": "description",
      "full_name": "services.account.v1.AccountEcosystem.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.account.v1.AccountEcosystem.id": {
      "name": "id",
      "full_name": "services.account.v1.AccountEcosystem.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.account.v1.AccountEcosystem.name": {
      "name": "name",
      "full_name": "services.account.v1.AccountEcosystem.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.account.v1.AccountEcosystem.uri": {
      "name": "uri",
      "full_name": "services.account.v1.AccountEcosystem.uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.account.v1.AccountInfoResponse.authorized_webhooks": {
      "name": "authorized_webhooks",
      "full_name": "services.account.v1.AccountInfoResponse.authorized_webhooks",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Webhook events if any this wallet has authorized"
    },
    "services.account.v1.AccountInfoResponse.details": {
      "name": "details",
      "full_name": "services.account.v1.AccountInfoResponse.details",
      "label": "LABEL_OPTIONAL",
      "type": "AccountDetails",
      "full_type": "services.account.v1.AccountDetails",
      "description": "The account details associated with\nthe calling request context"
    },
    "services.account.v1.AccountInfoResponse.device_id": {
      "name": "device_id",
      "full_name": "services.account.v1.AccountInfoResponse.device_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The device ID associated with this account session"
    },
    "services.account.v1.AccountInfoResponse.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.account.v1.AccountInfoResponse.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The ecosystem ID within which this account resides"
    },
    "services.account.v1.AccountInfoResponse.ecosystems": {
      "name": "ecosystems",
      "full_name": "services.account.v1.AccountInfoResponse.ecosystems",
      "label": "LABEL_REPEATED",
      "type": "AccountEcosystem",
      "full_type": "services.account.v1.AccountEcosystem",
      "description": "Use `ecosystem_id` instead"
    },
    "services.account.v1.AccountInfoResponse.public_did": {
      "name": "public_did",
      "full_name": "services.account.v1.AccountInfoResponse.public_did",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The public DID associated with this account.\nThis DID is used as \"issuer\" when signing verifiable credentials"
    },
    "services.account.v1.AccountInfoResponse.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.account.v1.AccountInfoResponse.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The wallet ID associated with this account"
    },
    "services.account.v1.AccountProfile.auth_data": {
      "name": "auth_data",
      "full_name": "services.account.v1.AccountProfile.auth_data",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Auth data containg information about the current device access"
    },
    "services.account.v1.AccountProfile.auth_token": {
      "name": "auth_token",
      "full_name": "services.account.v1.AccountProfile.auth_token",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Secure token issued by server used to generate zero-knowledge proofs"
    },
    "services.account.v1.AccountProfile.profile_type": {
      "name": "profile_type",
      "full_name": "services.account.v1.AccountProfile.profile_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "The type of profile, used to differentiate between\nprotocol schemes or versions"
    },
    "services.account.v1.AccountProfile.protection": {
      "name": "protection",
      "full_name": "services.account.v1.AccountProfile.protection",
      "label": "LABEL_OPTIONAL",
      "type": "TokenProtection",
      "full_type": "services.account.v1.TokenProtection",
      "description": "Token security information about the token.\nIf token protection is enabled, implementations must supply\nprotection secret before using the token for authentication."
    },
    "services.account.v1.AuthorizeWebhookRequest.events": {
      "name": "events",
      "full_name": "services.account.v1.AuthorizeWebhookRequest.events",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Events to authorize access to. Default is \"*\" (all events)"
    },
    "services.account.v1.LoginConfirmRequest.challenge": {
      "name": "challenge",
      "full_name": "services.account.v1.LoginConfirmRequest.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Login challenge received during the Login call"
    },
    "services.account.v1.LoginConfirmRequest.confirmation_code_hashed": {
      "name": "confirmation_code_hashed",
      "full_name": "services.account.v1.LoginConfirmRequest.confirmation_code_hashed",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Confirmation code received in email or SMS\nhashed using Blake3"
    },
    "services.account.v1.LoginConfirmResponse.profile": {
      "name": "profile",
      "full_name": "services.account.v1.LoginConfirmResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Profile response. This profile may be protected and\nrequire unblinding/unprotection using the raw hashed code"
    },
    "services.account.v1.LoginRequest.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.account.v1.LoginRequest.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of Ecosystem to sign into.\nIgnored if `invitation_code` is passed",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.LoginRequest.email": {
      "name": "email",
      "full_name": "services.account.v1.LoginRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email account to associate with the login request",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.LoginRequest.invitation_code": {
      "name": "invitation_code",
      "full_name": "services.account.v1.LoginRequest.invitation_code",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Invitation code associated with this registration",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.LoginResponse.challenge": {
      "name": "challenge",
      "full_name": "services.account.v1.LoginResponse.challenge",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "Challenge response. Random byte sequence unique\nfor this login request"
    },
    "services.account.v1.LoginResponse.profile": {
      "name": "profile",
      "full_name": "services.account.v1.LoginResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Profile response. The login isn't challenged and\nthe token is returned in this call. Does not require\nconfirmation step"
    },
    "services.account.v1.SignInRequest.details": {
      "name": "details",
      "full_name": "services.account.v1.SignInRequest.details",
      "label": "LABEL_OPTIONAL",
      "type": "AccountDetails",
      "full_type": "services.account.v1.AccountDetails",
      "description": "Account registration details"
    },
    "services.account.v1.SignInRequest.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.account.v1.SignInRequest.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of Ecosystem to use\nIgnored if `invitation_code` is passed",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.SignInRequest.invitation_code": {
      "name": "invitation_code",
      "full_name": "services.account.v1.SignInRequest.invitation_code",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Invitation code associated with this registration",
      "options": {
        "services.options.optional": true
      }
    },
    "services.account.v1.SignInResponse.confirmation_method": {
      "name": "confirmation_method",
      "full_name": "services.account.v1.SignInResponse.confirmation_method",
      "label": "LABEL_OPTIONAL",
      "type": "ConfirmationMethod",
      "full_type": "services.account.v1.ConfirmationMethod",
      "description": "Indicates if confirmation of account is required.\nThis settings is configured globally by the server administrator."
    },
    "services.account.v1.SignInResponse.profile": {
      "name": "profile",
      "full_name": "services.account.v1.SignInResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Contains authentication data for use with the current device.\nThis object must be stored in a secure place. It can also be\nprotected with a PIN, but this is optional.\nSee the docs at https://docs.trinsic.id for more information\non working with authentication data."
    },
    "services.account.v1.TokenProtection.enabled": {
      "name": "enabled",
      "full_name": "services.account.v1.TokenProtection.enabled",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Indicates if token is protected using a PIN,\nsecurity code, HSM secret, etc."
    },
    "services.account.v1.TokenProtection.method": {
      "name": "method",
      "full_name": "services.account.v1.TokenProtection.method",
      "label": "LABEL_OPTIONAL",
      "type": "ConfirmationMethod",
      "full_type": "services.account.v1.ConfirmationMethod",
      "description": "The method used to protect the token"
    },
    "services.common.v1.Nonce.request_hash": {
      "name": "request_hash",
      "full_name": "services.common.v1.Nonce.request_hash",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": "blake3256 hash of the request body"
    },
    "services.common.v1.Nonce.timestamp": {
      "name": "timestamp",
      "full_name": "services.common.v1.Nonce.timestamp",
      "label": "LABEL_OPTIONAL",
      "type": "int64",
      "full_type": "int64",
      "description": "UTC unix millisecond timestamp the request was made"
    },
    "services.common.v1.ServerConfig.endpoint": {
      "name": "endpoint",
      "full_name": "services.common.v1.ServerConfig.endpoint",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "service endpoint"
    },
    "services.common.v1.ServerConfig.port": {
      "name": "port",
      "full_name": "services.common.v1.ServerConfig.port",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "service port"
    },
    "services.common.v1.ServerConfig.use_tls": {
      "name": "use_tls",
      "full_name": "services.common.v1.ServerConfig.use_tls",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "indicates if tls is used"
    },
    "services.provider.v1.AddWebhookRequest.destination_url": {
      "name": "destination_url",
      "full_name": "services.provider.v1.AddWebhookRequest.destination_url",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Destination to post webhook calls to"
    },
    "services.provider.v1.AddWebhookRequest.events": {
      "name": "events",
      "full_name": "services.provider.v1.AddWebhookRequest.events",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Events to subscribe to. Default is \"*\" (all events)"
    },
    "services.provider.v1.AddWebhookRequest.secret": {
      "name": "secret",
      "full_name": "services.provider.v1.AddWebhookRequest.secret",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "HMAC secret for webhook validation"
    },
    "services.provider.v1.AddWebhookResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.AddWebhookResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Ecosystem with new webhook"
    },
    "services.provider.v1.CreateEcosystemRequest.description": {
      "name": "description",
      "full_name": "services.provider.v1.CreateEcosystemRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem description",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.CreateEcosystemRequest.details": {
      "name": "details",
      "full_name": "services.provider.v1.CreateEcosystemRequest.details",
      "label": "LABEL_OPTIONAL",
      "type": "AccountDetails",
      "full_type": "services.account.v1.AccountDetails",
      "description": "The account details of the owner of the ecosystem"
    },
    "services.provider.v1.CreateEcosystemRequest.name": {
      "name": "name",
      "full_name": "services.provider.v1.CreateEcosystemRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Globally unique name for the Ecosystem. This name will be\npart of the ecosystem specific URLs and namespaces.\nAllowed characters are lowercase letters, numbers, underscore and hyphen."
    },
    "services.provider.v1.CreateEcosystemRequest.uri": {
      "name": "uri",
      "full_name": "services.provider.v1.CreateEcosystemRequest.uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "External URL associated with your organization or ecosystem entity",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.CreateEcosystemResponse.confirmation_method": {
      "name": "confirmation_method",
      "full_name": "services.provider.v1.CreateEcosystemResponse.confirmation_method",
      "label": "LABEL_OPTIONAL",
      "type": "ConfirmationMethod",
      "full_type": "services.account.v1.ConfirmationMethod",
      "description": "Indicates if confirmation of account is required.\nThis setting is configured globally by the server administrator."
    },
    "services.provider.v1.CreateEcosystemResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.CreateEcosystemResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Details of the created ecosystem"
    },
    "services.provider.v1.CreateEcosystemResponse.profile": {
      "name": "profile",
      "full_name": "services.provider.v1.CreateEcosystemResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Account profile for auth of the owner of the ecosystem"
    },
    "services.provider.v1.DeleteWebhookRequest.webhook_id": {
      "name": "webhook_id",
      "full_name": "services.provider.v1.DeleteWebhookRequest.webhook_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of webhook to delete"
    },
    "services.provider.v1.DeleteWebhookResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.DeleteWebhookResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Ecosystem after removal of webhook"
    },
    "services.provider.v1.Ecosystem.description": {
      "name": "description",
      "full_name": "services.provider.v1.Ecosystem.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Ecosystem description"
    },
    "services.provider.v1.Ecosystem.id": {
      "name": "id",
      "full_name": "services.provider.v1.Ecosystem.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URN of the ecosystem"
    },
    "services.provider.v1.Ecosystem.name": {
      "name": "name",
      "full_name": "services.provider.v1.Ecosystem.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Globally unique name for the ecosystem"
    },
    "services.provider.v1.Ecosystem.uri": {
      "name": "uri",
      "full_name": "services.provider.v1.Ecosystem.uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "External URL associated with the organization or ecosystem entity"
    },
    "services.provider.v1.Ecosystem.webhooks": {
      "name": "webhooks",
      "full_name": "services.provider.v1.Ecosystem.webhooks",
      "label": "LABEL_REPEATED",
      "type": "WebhookConfig",
      "full_type": "services.provider.v1.WebhookConfig",
      "description": "Configured webhooks, if any"
    },
    "services.provider.v1.EcosystemInfoResponse.ecosystem": {
      "name": "ecosystem",
      "full_name": "services.provider.v1.EcosystemInfoResponse.ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": "Ecosystem corresponding to requested `ecosystem_id`"
    },
    "services.provider.v1.GenerateTokenRequest.description": {
      "name": "description",
      "full_name": "services.provider.v1.GenerateTokenRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Description to identify this token",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.GenerateTokenResponse.profile": {
      "name": "profile",
      "full_name": "services.provider.v1.GenerateTokenResponse.profile",
      "label": "LABEL_OPTIONAL",
      "type": "AccountProfile",
      "full_type": "services.account.v1.AccountProfile",
      "description": "Account authentication profile that contains unprotected token"
    },
    "services.provider.v1.GetAuthorizationsResponse.grants": {
      "name": "grants",
      "full_name": "services.provider.v1.GetAuthorizationsResponse.grants",
      "label": "LABEL_REPEATED",
      "type": "Grant",
      "full_type": "services.provider.v1.Grant",
      "description": ""
    },
    "services.provider.v1.GetEventTokenRequest.pk": {
      "name": "pk",
      "full_name": "services.provider.v1.GetEventTokenRequest.pk",
      "label": "LABEL_OPTIONAL",
      "type": "bytes",
      "full_type": "bytes",
      "description": ""
    },
    "services.provider.v1.GetEventTokenResponse.token": {
      "name": "token",
      "full_name": "services.provider.v1.GetEventTokenResponse.token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "a JWT bound to the PK provided in the request"
    },
    "services.provider.v1.GetOberonKeyResponse.key": {
      "name": "key",
      "full_name": "services.provider.v1.GetOberonKeyResponse.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Oberon Public Key as RAW base64 URL encoded string"
    },
    "services.provider.v1.Grant.actions": {
      "name": "actions",
      "full_name": "services.provider.v1.Grant.actions",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "list of actions that are allowed"
    },
    "services.provider.v1.Grant.child_grants": {
      "name": "child_grants",
      "full_name": "services.provider.v1.Grant.child_grants",
      "label": "LABEL_REPEATED",
      "type": "Grant",
      "full_type": "services.provider.v1.Grant",
      "description": "any child grants"
    },
    "services.provider.v1.Grant.resourceId": {
      "name": "resourceId",
      "full_name": "services.provider.v1.Grant.resourceId",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "the urn of the resource"
    },
    "services.provider.v1.GrantAuthorizationRequest.action": {
      "name": "action",
      "full_name": "services.provider.v1.GrantAuthorizationRequest.action",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "action to authorize. default is \"*\" (all)"
    },
    "services.provider.v1.GrantAuthorizationRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.GrantAuthorizationRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "email associted with the account"
    },
    "services.provider.v1.GrantAuthorizationRequest.resource": {
      "name": "resource",
      "full_name": "services.provider.v1.GrantAuthorizationRequest.resource",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "resources are specified as a restful path: /{ecoId}/{resource type}/{resource id}. EcosystemId maybe ommited"
    },
    "services.provider.v1.GrantAuthorizationRequest.walletId": {
      "name": "walletId",
      "full_name": "services.provider.v1.GrantAuthorizationRequest.walletId",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "wallet id of the account"
    },
    "services.provider.v1.InvitationStatusRequest.invitation_id": {
      "name": "invitation_id",
      "full_name": "services.provider.v1.InvitationStatusRequest.invitation_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of invitation"
    },
    "services.provider.v1.InvitationStatusResponse.status": {
      "name": "status",
      "full_name": "services.provider.v1.InvitationStatusResponse.status",
      "label": "LABEL_OPTIONAL",
      "type": "Status",
      "full_type": "services.provider.v1.InvitationStatusResponse.Status",
      "description": "Status of invitation"
    },
    "services.provider.v1.InvitationStatusResponse.status_details": {
      "name": "status_details",
      "full_name": "services.provider.v1.InvitationStatusResponse.status_details",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable string with details about invitation status"
    },
    "services.provider.v1.Invite.accepted": {
      "name": "accepted",
      "full_name": "services.provider.v1.Invite.accepted",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.Invite.code": {
      "name": "code",
      "full_name": "services.provider.v1.Invite.code",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.Invite.created": {
      "name": "created",
      "full_name": "services.provider.v1.Invite.created",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.Invite.expires": {
      "name": "expires",
      "full_name": "services.provider.v1.Invite.expires",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.Invite.id": {
      "name": "id",
      "full_name": "services.provider.v1.Invite.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.provider.v1.InviteRequest.description": {
      "name": "description",
      "full_name": "services.provider.v1.InviteRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Description of invitation",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.InviteRequest.details": {
      "name": "details",
      "full_name": "services.provider.v1.InviteRequest.details",
      "label": "LABEL_OPTIONAL",
      "type": "AccountDetails",
      "full_type": "services.account.v1.AccountDetails",
      "description": "Account details of invitee",
      "options": {
        "services.options.optional": true
      }
    },
    "services.provider.v1.InviteRequest.participant": {
      "name": "participant",
      "full_name": "services.provider.v1.InviteRequest.participant",
      "label": "LABEL_OPTIONAL",
      "type": "ParticipantType",
      "full_type": "services.provider.v1.ParticipantType",
      "description": "Type of participant being invited (individual/organization)"
    },
    "services.provider.v1.InviteResponse.invitation_code": {
      "name": "invitation_code",
      "full_name": "services.provider.v1.InviteResponse.invitation_code",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Invitation Code that must be passed with the account 'SignIn' request\nto correlate this user with the invitation sent."
    },
    "services.provider.v1.InviteResponse.invitation_id": {
      "name": "invitation_id",
      "full_name": "services.provider.v1.InviteResponse.invitation_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of created invitation"
    },
    "services.provider.v1.RevokeAuthorizationRequest.action": {
      "name": "action",
      "full_name": "services.provider.v1.RevokeAuthorizationRequest.action",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "action to revoke. default is \"*\" (all)"
    },
    "services.provider.v1.RevokeAuthorizationRequest.email": {
      "name": "email",
      "full_name": "services.provider.v1.RevokeAuthorizationRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "email associted with the account"
    },
    "services.provider.v1.RevokeAuthorizationRequest.resource": {
      "name": "resource",
      "full_name": "services.provider.v1.RevokeAuthorizationRequest.resource",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "resources are specified as a restful path: /{ecoId}/{resource type}/{resource id}. EcosystemId maybe ommited"
    },
    "services.provider.v1.RevokeAuthorizationRequest.walletId": {
      "name": "walletId",
      "full_name": "services.provider.v1.RevokeAuthorizationRequest.walletId",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "wallet id of the account"
    },
    "services.provider.v1.UpdateEcosystemRequest.description": {
      "name": "description",
      "full_name": "services.provider.v1.UpdateEcosystemRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Description of the ecosystem"
    },
    "services.provider.v1.UpdateEcosystemRequest.uri": {
      "name": "uri",
      "full_name": "services.provider.v1.UpdateEcosystemRequest.uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "External URL associated with the organization or ecosystem entity"
    },
    "services.provider.v1.UpdateEcosystemResponse.Ecosystem": {
      "name": "Ecosystem",
      "full_name": "services.provider.v1.UpdateEcosystemResponse.Ecosystem",
      "label": "LABEL_OPTIONAL",
      "type": "Ecosystem",
      "full_type": "services.provider.v1.Ecosystem",
      "description": ""
    },
    "services.provider.v1.WebhookConfig.destination_url": {
      "name": "destination_url",
      "full_name": "services.provider.v1.WebhookConfig.destination_url",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Destination to post webhook calls to"
    },
    "services.provider.v1.WebhookConfig.events": {
      "name": "events",
      "full_name": "services.provider.v1.WebhookConfig.events",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Events the webhook is subscribed to"
    },
    "services.provider.v1.WebhookConfig.id": {
      "name": "id",
      "full_name": "services.provider.v1.WebhookConfig.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "UUID of the webhook"
    },
    "services.provider.v1.WebhookConfig.status": {
      "name": "status",
      "full_name": "services.provider.v1.WebhookConfig.status",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Whether we are able to sucessfully send events to the webhook"
    },
    "services.trustregistry.v1.AddFrameworkRequest.description": {
      "name": "description",
      "full_name": "services.trustregistry.v1.AddFrameworkRequest.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AddFrameworkRequest.governance_framework_uri": {
      "name": "governance_framework_uri",
      "full_name": "services.trustregistry.v1.AddFrameworkRequest.governance_framework_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AddFrameworkRequest.name": {
      "name": "name",
      "full_name": "services.trustregistry.v1.AddFrameworkRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AddFrameworkResponse.governing_authority": {
      "name": "governing_authority",
      "full_name": "services.trustregistry.v1.AddFrameworkResponse.governing_authority",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.AddFrameworkResponse.id": {
      "name": "id",
      "full_name": "services.trustregistry.v1.AddFrameworkResponse.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Unique framework identifier"
    },
    "services.trustregistry.v1.AddFrameworkResponse.trust_registry": {
      "name": "trust_registry",
      "full_name": "services.trustregistry.v1.AddFrameworkResponse.trust_registry",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.FetchDataRequest.governance_framework_uri": {
      "name": "governance_framework_uri",
      "full_name": "services.trustregistry.v1.FetchDataRequest.governance_framework_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.FetchDataRequest.query": {
      "name": "query",
      "full_name": "services.trustregistry.v1.FetchDataRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.FetchDataResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.trustregistry.v1.FetchDataResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.FetchDataResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.trustregistry.v1.FetchDataResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": ""
    },
    "services.trustregistry.v1.FetchDataResponse.response_json": {
      "name": "response_json",
      "full_name": "services.trustregistry.v1.FetchDataResponse.response_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.GetMembershipStatusRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.governance_framework_uri": {
      "name": "governance_framework_uri",
      "full_name": "services.trustregistry.v1.GetMembershipStatusRequest.governance_framework_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.GetMembershipStatusRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GetMembershipStatusRequest.x509_cert": {
      "name": "x509_cert",
      "full_name": "services.trustregistry.v1.GetMembershipStatusRequest.x509_cert",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GetMembershipStatusResponse.status": {
      "name": "status",
      "full_name": "services.trustregistry.v1.GetMembershipStatusResponse.status",
      "label": "LABEL_OPTIONAL",
      "type": "RegistrationStatus",
      "full_type": "services.trustregistry.v1.RegistrationStatus",
      "description": ""
    },
    "services.trustregistry.v1.GovernanceFramework.description": {
      "name": "description",
      "full_name": "services.trustregistry.v1.GovernanceFramework.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GovernanceFramework.governance_framework_uri": {
      "name": "governance_framework_uri",
      "full_name": "services.trustregistry.v1.GovernanceFramework.governance_framework_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.GovernanceFramework.trust_registry_uri": {
      "name": "trust_registry_uri",
      "full_name": "services.trustregistry.v1.GovernanceFramework.trust_registry_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.email": {
      "name": "email",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.framework_id": {
      "name": "framework_id",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.framework_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "the id of the governance framework"
    },
    "services.trustregistry.v1.RegisterMemberRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc": {
      "name": "valid_from_utc",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.valid_from_utc",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc": {
      "name": "valid_until_utc",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.valid_until_utc",
      "label": "LABEL_OPTIONAL",
      "type": "uint64",
      "full_type": "uint64",
      "description": ""
    },
    "services.trustregistry.v1.RegisterMemberRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.trustregistry.v1.RegisterMemberRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.RemoveFrameworkRequest.id": {
      "name": "id",
      "full_name": "services.trustregistry.v1.RemoveFrameworkRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.SearchRegistryRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.trustregistry.v1.SearchRegistryRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.SearchRegistryRequest.query": {
      "name": "query",
      "full_name": "services.trustregistry.v1.SearchRegistryRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SELECT c from c where c.type == 'GovernanceFramework'"
    },
    "services.trustregistry.v1.SearchRegistryResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.trustregistry.v1.SearchRegistryResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.SearchRegistryResponse.has_more": {
      "name": "has_more",
      "full_name": "services.trustregistry.v1.SearchRegistryResponse.has_more",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": ""
    },
    "services.trustregistry.v1.SearchRegistryResponse.items_json": {
      "name": "items_json",
      "full_name": "services.trustregistry.v1.SearchRegistryResponse.items_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.email": {
      "name": "email",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.framework_id": {
      "name": "framework_id",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.framework_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.trustregistry.v1.UnregisterMemberRequest.wallet_id": {
      "name": "wallet_id",
      "full_name": "services.trustregistry.v1.UnregisterMemberRequest.wallet_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.universalwallet.v1.DeleteItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.DeleteItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item to delete"
    },
    "services.universalwallet.v1.GetItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.GetItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item in wallet"
    },
    "services.universalwallet.v1.GetItemResponse.item_json": {
      "name": "item_json",
      "full_name": "services.universalwallet.v1.GetItemResponse.item_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item data as a JSON string"
    },
    "services.universalwallet.v1.GetItemResponse.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.GetItemResponse.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Type of item specified when item was inserted into wallet"
    },
    "services.universalwallet.v1.InsertItemRequest.item_json": {
      "name": "item_json",
      "full_name": "services.universalwallet.v1.InsertItemRequest.item_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Document to insert; must be stringified JSON"
    },
    "services.universalwallet.v1.InsertItemRequest.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.InsertItemRequest.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item type (ex. \"VerifiableCredential\")",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.InsertItemResponse.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.InsertItemResponse.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item inserted into wallet"
    },
    "services.universalwallet.v1.SearchRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.SearchRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `SearchResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.universalwallet.v1.SearchRequest.query": {
      "name": "query",
      "full_name": "services.universalwallet.v1.SearchRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL Query to execute against items in wallet"
    },
    "services.universalwallet.v1.SearchResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.universalwallet.v1.SearchResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of results via `SearchRequest`"
    },
    "services.universalwallet.v1.SearchResponse.has_more": {
      "name": "has_more",
      "full_name": "services.universalwallet.v1.SearchResponse.has_more",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.universalwallet.v1.SearchResponse.items": {
      "name": "items",
      "full_name": "services.universalwallet.v1.SearchResponse.items",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Array of query results, as JSON strings"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_id": {
      "name": "item_id",
      "full_name": "services.universalwallet.v1.UpdateItemRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of item in wallet"
    },
    "services.universalwallet.v1.UpdateItemRequest.item_type": {
      "name": "item_type",
      "full_name": "services.universalwallet.v1.UpdateItemRequest.item_type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Item type (ex. \"VerifiableCredential\")",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields": {
      "name": "allow_additional_fields",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.allow_additional_fields",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether credentials may be issued against this template which have fields\nnot specified in `fields`"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.FieldsEntry",
      "description": "Fields which compose the template"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateRequest.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Name of new template"
    },
    "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data": {
      "name": "data",
      "full_name": "services.verifiablecredentials.templates.v1.CreateCredentialTemplateResponse.data",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Created template"
    },
    "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.DeleteCredentialTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to delete"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to fetch"
    },
    "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template": {
      "name": "template",
      "full_name": "services.verifiablecredentials.templates.v1.GetCredentialTemplateResponse.template",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Template fetched by ID"
    },
    "services.verifiablecredentials.templates.v1.GetTemplateRequest.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.GetTemplateRequest.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.GetTemplateResponse.data": {
      "name": "data",
      "full_name": "services.verifiablecredentials.templates.v1.GetTemplateResponse.data",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `ListCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query": {
      "name": "query",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token to fetch next set of resuts via `ListCredentialTemplatesRequest`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results": {
      "name": "has_more_results",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.has_more_results",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates": {
      "name": "templates",
      "full_name": "services.verifiablecredentials.templates.v1.ListCredentialTemplatesResponse.templates",
      "label": "LABEL_REPEATED",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": "Templates found by query"
    },
    "services.verifiablecredentials.templates.v1.ListTemplatesResponse.templates": {
      "name": "templates",
      "full_name": "services.verifiablecredentials.templates.v1.ListTemplatesResponse.templates",
      "label": "LABEL_REPEATED",
      "type": "TemplateData",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Token provided by previous `SearchCredentialTemplatesResponse`\nif more data is available for query",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query": {
      "name": "query",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesRequest.query",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token": {
      "name": "continuation_token",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.continuation_token",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Count of items in `items_json`\nint32 count = 3; unpopulated and unused\nToken to fetch next set of results via `SearchCredentialTemplatesRequest`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more": {
      "name": "has_more",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.has_more",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether more results are available for this query via `continuation_token`"
    },
    "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json": {
      "name": "items_json",
      "full_name": "services.verifiablecredentials.templates.v1.SearchCredentialTemplatesResponse.items_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Raw JSON data returned from query"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "TemplateField",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateField",
      "description": ""
    },
    "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields": {
      "name": "allow_additional_fields",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.allow_additional_fields",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether credentials issued against this template may \ncontain fields not defined by template"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.context_uri": {
      "name": "context_uri",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.context_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI pointing to template JSON-LD context document"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.created_by": {
      "name": "created_by",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.created_by",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template creator"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id": {
      "name": "ecosystem_id",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.ecosystem_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of ecosystem in which template resides"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.fields": {
      "name": "fields",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.fields",
      "label": "LABEL_REPEATED",
      "type": "FieldsEntry",
      "full_type": "services.verifiablecredentials.templates.v1.TemplateData.FieldsEntry",
      "description": "Fields defined for the template"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.id": {
      "name": "id",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template ID"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.name": {
      "name": "name",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.name",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template name"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.schema_uri": {
      "name": "schema_uri",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.schema_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "URI pointing to template JSON schema document"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.type": {
      "name": "type",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.type",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Template type (`VerifiableCredential`)"
    },
    "services.verifiablecredentials.templates.v1.TemplateData.version": {
      "name": "version",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateData.version",
      "label": "LABEL_OPTIONAL",
      "type": "int32",
      "full_type": "int32",
      "description": "Template version number"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.description": {
      "name": "description",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.description",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Human-readable description of the field"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.optional": {
      "name": "optional",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.optional",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether this field may be omitted when a credential is issued against the template"
    },
    "services.verifiablecredentials.templates.v1.TemplateField.type": {
      "name": "type",
      "full_name": "services.verifiablecredentials.templates.v1.TemplateField.type",
      "label": "LABEL_OPTIONAL",
      "type": "FieldType",
      "full_type": "services.verifiablecredentials.templates.v1.FieldType",
      "description": "The type of the field"
    },
    "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id": {
      "name": "credential_status_id",
      "full_name": "services.verifiablecredentials.v1.CheckStatusRequest.credential_status_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Credential Status ID to check"
    },
    "services.verifiablecredentials.v1.CheckStatusResponse.revoked": {
      "name": "revoked",
      "full_name": "services.verifiablecredentials.v1.CheckStatusResponse.revoked",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "The credential's revocation status"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "A valid JSON-LD Verifiable Credential document string \nwith an unbound signature. The proof will be derived from this\ndocument directly. The document will not be stored in the wallet."
    },
    "services.verifiablecredentials.v1.CreateProofRequest.item_id": {
      "name": "item_id",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.item_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of wallet item stored in a Trinsic cloud wallet"
    },
    "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json": {
      "name": "reveal_document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofRequest.reveal_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "A valid JSON-LD frame describing which fields should be\nrevealed in the generated proof. \nIf unspecified, all fields in the document will be revealed"
    },
    "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json": {
      "name": "proof_document_json",
      "full_name": "services.verifiablecredentials.v1.CreateProofResponse.proof_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Valid JSON-LD proof for the specified credential"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.framework_id": {
      "name": "framework_id",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.framework_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Governance framework ID to use with issuance of this credential.\nIf specified, the issued credential will contain extended issuer\nmetadata with membership info for the given ecosystem governance framework (EGF)",
      "options": {
        "services.options.optional": true
      }
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id": {
      "name": "template_id",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.template_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "ID of template to use"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json": {
      "name": "values_json",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateRequest.values_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON document string with keys corresponding to the fields of\nthe template referenced by `template_id`"
    },
    "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.IssueFromTemplateResponse.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Verifiable Credential document, in JSON-LD form,\nconstructed from the specified template and values; signed\nwith public key tied to caller of `IssueFromTemplateRequest`"
    },
    "services.verifiablecredentials.v1.IssueRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.IssueRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Valid JSON-LD Credential document to be signed, in string form"
    },
    "services.verifiablecredentials.v1.IssueResponse.signed_document_json": {
      "name": "signed_document_json",
      "full_name": "services.verifiablecredentials.v1.IssueResponse.signed_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Verifiable Credential document, signed with public key\ntied to caller of `IssueRequest`"
    },
    "services.verifiablecredentials.v1.SendRequest.did_uri": {
      "name": "did_uri",
      "full_name": "services.verifiablecredentials.v1.SendRequest.did_uri",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DID of recipient (presently unsupported)"
    },
    "services.verifiablecredentials.v1.SendRequest.didcomm_invitation_json": {
      "name": "didcomm_invitation_json",
      "full_name": "services.verifiablecredentials.v1.SendRequest.didcomm_invitation_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "DIDComm out-of-band invitation JSON (presently unsupported)"
    },
    "services.verifiablecredentials.v1.SendRequest.document_json": {
      "name": "document_json",
      "full_name": "services.verifiablecredentials.v1.SendRequest.document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON document to send to recipient"
    },
    "services.verifiablecredentials.v1.SendRequest.email": {
      "name": "email",
      "full_name": "services.verifiablecredentials.v1.SendRequest.email",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Email address of user to send item to"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id": {
      "name": "credential_status_id",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest.credential_status_id",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "Credential Status ID to update"
    },
    "services.verifiablecredentials.v1.UpdateStatusRequest.revoked": {
      "name": "revoked",
      "full_name": "services.verifiablecredentials.v1.UpdateStatusRequest.revoked",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "New revocation status of credential"
    },
    "services.verifiablecredentials.v1.ValidationMessage.is_valid": {
      "name": "is_valid",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage.is_valid",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether or not this validation check passed"
    },
    "services.verifiablecredentials.v1.ValidationMessage.messages": {
      "name": "messages",
      "full_name": "services.verifiablecredentials.v1.ValidationMessage.messages",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "If validation failed, contains messages explaining why"
    },
    "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json": {
      "name": "proof_document_json",
      "full_name": "services.verifiablecredentials.v1.VerifyProofRequest.proof_document_json",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": "JSON-LD proof document string to verify"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key": {
      "name": "key",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.key",
      "label": "LABEL_OPTIONAL",
      "type": "string",
      "full_type": "string",
      "description": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value": {
      "name": "value",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry.value",
      "label": "LABEL_OPTIONAL",
      "type": "ValidationMessage",
      "full_type": "services.verifiablecredentials.v1.ValidationMessage",
      "description": ""
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.is_valid": {
      "name": "is_valid",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.is_valid",
      "label": "LABEL_OPTIONAL",
      "type": "bool",
      "full_type": "bool",
      "description": "Whether or not all validations in `validation_results` passed"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_messages": {
      "name": "validation_messages",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.validation_messages",
      "label": "LABEL_REPEATED",
      "type": "string",
      "full_type": "string",
      "description": "Use `validation_results` instead"
    },
    "services.verifiablecredentials.v1.VerifyProofResponse.validation_results": {
      "name": "validation_results",
      "full_name": "services.verifiablecredentials.v1.VerifyProofResponse.validation_results",
      "label": "LABEL_REPEATED",
      "type": "ValidationResultsEntry",
      "full_type": "services.verifiablecredentials.v1.VerifyProofResponse.ValidationResultsEntry",
      "description": "Results of each validation check performed, \nsuch as schema conformance, revocation status, signature, etc.\nDetailed results are provided for failed validations."
    }
  },
  "enums": {
    "services.account.v1.ConfirmationMethod": {
      "name": "ConfirmationMethod",
      "full_name": "services.account.v1.ConfirmationMethod",
      "description": "Confirmation method type for two-factor workflows",
      "values": [
        "services.account.v1.ConfirmationMethod.None",
        "services.account.v1.ConfirmationMethod.Email",
        "services.account.v1.ConfirmationMethod.Sms",
        "services.account.v1.ConfirmationMethod.ConnectedDevice",
        "services.account.v1.ConfirmationMethod.Other"
      ]
    },
    "services.common.v1.ResponseStatus": {
      "name": "ResponseStatus",
      "full_name": "services.common.v1.ResponseStatus",
      "description": "",
      "values": [
        "services.common.v1.ResponseStatus.SUCCESS",
        "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
        "services.common.v1.ResponseStatus.WALLET_EXISTS",
        "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
        "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
        "services.common.v1.ResponseStatus.UNKNOWN_ERROR"
      ]
    },
    "services.provider.v1.InvitationStatusResponse.Status": {
      "name": "Status",
      "full_name": "services.provider.v1.InvitationStatusResponse.Status",
      "description": "",
      "values": [
        "services.provider.v1.InvitationStatusResponse.Status.Error",
        "services.provider.v1.InvitationStatusResponse.Status.InvitationSent",
        "services.provider.v1.InvitationStatusResponse.Status.Completed",
        "services.provider.v1.InvitationStatusResponse.Status.Expired"
      ]
    },
    "services.provider.v1.ParticipantType": {
      "name": "ParticipantType",
      "full_name": "services.provider.v1.ParticipantType",
      "description": "",
      "values": [
        "services.provider.v1.ParticipantType.participant_type_individual",
        "services.provider.v1.ParticipantType.participant_type_organization"
      ]
    },
    "services.trustregistry.v1.RegistrationStatus": {
      "name": "RegistrationStatus",
      "full_name": "services.trustregistry.v1.RegistrationStatus",
      "description": "",
      "values": [
        "services.trustregistry.v1.RegistrationStatus.CURRENT",
        "services.trustregistry.v1.RegistrationStatus.EXPIRED",
        "services.trustregistry.v1.RegistrationStatus.TERMINATED",
        "services.trustregistry.v1.RegistrationStatus.REVOKED",
        "services.trustregistry.v1.RegistrationStatus.NOT_FOUND"
      ]
    },
    "services.verifiablecredentials.templates.v1.FieldType": {
      "name": "FieldType",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType",
      "description": "Valid types for credential fields",
      "values": [
        "services.verifiablecredentials.templates.v1.FieldType.STRING",
        "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
        "services.verifiablecredentials.templates.v1.FieldType.BOOL",
        "services.verifiablecredentials.templates.v1.FieldType.DATETIME"
      ]
    }
  },
  "enum_values": {
    "services.account.v1.ConfirmationMethod.ConnectedDevice": {
      "name": "ConnectedDevice",
      "full_name": "services.account.v1.ConfirmationMethod.ConnectedDevice",
      "description": "Confirmation from a connected device is required",
      "value": 3
    },
    "services.account.v1.ConfirmationMethod.Email": {
      "name": "Email",
      "full_name": "services.account.v1.ConfirmationMethod.Email",
      "description": "Email confirmation required",
      "value": 1
    },
    "services.account.v1.ConfirmationMethod.None": {
      "name": "None",
      "full_name": "services.account.v1.ConfirmationMethod.None",
      "description": "No confirmation required",
      "value": 0
    },
    "services.account.v1.ConfirmationMethod.Other": {
      "name": "Other",
      "full_name": "services.account.v1.ConfirmationMethod.Other",
      "description": "Indicates third-party method of confirmation is required",
      "value": 10
    },
    "services.account.v1.ConfirmationMethod.Sms": {
      "name": "Sms",
      "full_name": "services.account.v1.ConfirmationMethod.Sms",
      "description": "SMS confirmation required",
      "value": 2
    },
    "services.common.v1.ResponseStatus.ITEM_NOT_FOUND": {
      "name": "ITEM_NOT_FOUND",
      "full_name": "services.common.v1.ResponseStatus.ITEM_NOT_FOUND",
      "description": "",
      "value": 20
    },
    "services.common.v1.ResponseStatus.SERIALIZATION_ERROR": {
      "name": "SERIALIZATION_ERROR",
      "full_name": "services.common.v1.ResponseStatus.SERIALIZATION_ERROR",
      "description": "",
      "value": 200
    },
    "services.common.v1.ResponseStatus.SUCCESS": {
      "name": "SUCCESS",
      "full_name": "services.common.v1.ResponseStatus.SUCCESS",
      "description": "",
      "value": 0
    },
    "services.common.v1.ResponseStatus.UNKNOWN_ERROR": {
      "name": "UNKNOWN_ERROR",
      "full_name": "services.common.v1.ResponseStatus.UNKNOWN_ERROR",
      "description": "",
      "value": 100
    },
    "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED": {
      "name": "WALLET_ACCESS_DENIED",
      "full_name": "services.common.v1.ResponseStatus.WALLET_ACCESS_DENIED",
      "description": "",
      "value": 10
    },
    "services.common.v1.ResponseStatus.WALLET_EXISTS": {
      "name": "WALLET_EXISTS",
      "full_name": "services.common.v1.ResponseStatus.WALLET_EXISTS",
      "description": "",
      "value": 11
    },
    "services.provider.v1.InvitationStatusResponse.Status.Completed": {
      "name": "Completed",
      "full_name": "services.provider.v1.InvitationStatusResponse.Status.Completed",
      "description": "The participant has been onboarded",
      "value": 2
    },
    "services.provider.v1.InvitationStatusResponse.Status.Error": {
      "name": "Error",
      "full_name": "services.provider.v1.InvitationStatusResponse.Status.Error",
      "description": "Onboarding resulted in error",
      "value": 0
    },
    "services.provider.v1.InvitationStatusResponse.Status.Expired": {
      "name": "Expired",
      "full_name": "services.provider.v1.InvitationStatusResponse.Status.Expired",
      "description": "The invite has expired",
      "value": 3
    },
    "services.provider.v1.InvitationStatusResponse.Status.InvitationSent": {
      "name": "InvitationSent",
      "full_name": "services.provider.v1.InvitationStatusResponse.Status.InvitationSent",
      "description": "The participant has been invited",
      "value": 1
    },
    "services.provider.v1.ParticipantType.participant_type_individual": {
      "name": "participant_type_individual",
      "full_name": "services.provider.v1.ParticipantType.participant_type_individual",
      "description": "",
      "value": 0
    },
    "services.provider.v1.ParticipantType.participant_type_organization": {
      "name": "participant_type_organization",
      "full_name": "services.provider.v1.ParticipantType.participant_type_organization",
      "description": "",
      "value": 1
    },
    "services.trustregistry.v1.RegistrationStatus.CURRENT": {
      "name": "CURRENT",
      "full_name": "services.trustregistry.v1.RegistrationStatus.CURRENT",
      "description": "- the entity is currently authorized, as of time of the query.",
      "value": 0
    },
    "services.trustregistry.v1.RegistrationStatus.EXPIRED": {
      "name": "EXPIRED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.EXPIRED",
      "description": "- entity rights have expired.",
      "value": 1
    },
    "services.trustregistry.v1.RegistrationStatus.NOT_FOUND": {
      "name": "NOT_FOUND",
      "full_name": "services.trustregistry.v1.RegistrationStatus.NOT_FOUND",
      "description": "",
      "value": 10
    },
    "services.trustregistry.v1.RegistrationStatus.REVOKED": {
      "name": "REVOKED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.REVOKED",
      "description": "- entity authority under specific EGF was terminated by the governing authority.",
      "value": 3
    },
    "services.trustregistry.v1.RegistrationStatus.TERMINATED": {
      "name": "TERMINATED",
      "full_name": "services.trustregistry.v1.RegistrationStatus.TERMINATED",
      "description": "- entity has voluntarily ceased Issuer role under the specific EGF.",
      "value": 2
    },
    "services.verifiablecredentials.templates.v1.FieldType.BOOL": {
      "name": "BOOL",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.BOOL",
      "description": "",
      "value": 2
    },
    "services.verifiablecredentials.templates.v1.FieldType.DATETIME": {
      "name": "DATETIME",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.DATETIME",
      "description": "",
      "value": 4
    },
    "services.verifiablecredentials.templates.v1.FieldType.NUMBER": {
      "name": "NUMBER",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.NUMBER",
      "description": "",
      "value": 1
    },
    "services.verifiablecredentials.templates.v1.FieldType.STRING": {
      "name": "STRING",
      "full_name": "services.verifiablecredentials.templates.v1.FieldType.STRING",
      "description": "",
      "value": 0
    }
  }
}
